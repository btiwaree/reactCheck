{"version":3,"sources":["multipipe.js"],"names":[],"mappings":"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","file":"multipipe-compiled.js","sourcesContent":["var assert = require('assert');\nvar pipe = require('..');\nvar Stream = require('stream');\n\ndescribe('pipe(a)', function(){\n  it('should return a', function(){\n    var readable = Readable();\n    var stream = pipe(readable);\n    assert.equal(stream, readable);\n  });\n});\n\ndescribe('pipe(a, b, c)', function(){\n  it('should pipe internally', function(done){\n    pipe(Readable(), Transform(), Writable(done));\n  });\n  \n  it('should be writable', function(done){\n    var stream = pipe(Transform(), Writable(done));\n    assert(stream.writable);\n    Readable().pipe(stream);\n  });\n\n  it('should be readable', function(done){\n    var stream = pipe(Readable(), Transform());\n    assert(stream.readable);\n    stream.pipe(Writable(done));\n  });\n  \n  it('should be readable and writable', function(done){\n    var stream = pipe(Transform(), Transform());\n    assert(stream.readable);\n    assert(stream.writable);\n    Readable()\n    .pipe(stream)\n    .pipe(Writable(done));\n  });\n \n  describe('errors', function(){\n    it('should reemit', function(done){\n      var a = Transform();\n      var b = Transform();\n      var c = Transform();\n      var stream = pipe(a, b, c);\n      var err = new Error;\n      var i = 0;\n      \n      stream.on('error', function(_err){\n        i++;\n        assert.equal(_err, err);\n        assert(i <= 3);\n        if (i == 3) done();\n      });\n      \n      a.emit('error', err);\n      b.emit('error', err);\n      c.emit('error', err);\n    });\n\n    it('should not reemit endlessly', function(done){\n      var a = Transform();\n      var b = Transform();\n      var c = Transform();\n      c.readable = false;\n      var stream = pipe(a, b, c);\n      var err = new Error;\n      var i = 0;\n      \n      stream.on('error', function(_err){\n        i++;\n        assert.equal(_err, err);\n        assert(i <= 3);\n        if (i == 3) done();\n      });\n      \n      a.emit('error', err);\n      b.emit('error', err);\n      c.emit('error', err);\n    });\n  });\n});\n\ndescribe('pipe(a, b, c, fn)', function(){\n  it('should call on finish', function(done){\n    var finished = false;\n    var a = Readable();\n    var b = Transform();\n    var c = Writable(function(){\n      finished = true;\n    });\n\n    pipe(a, b, c, function(err){\n      assert(!err);\n      assert(finished);\n      done();\n    });\n  });\n\n  it('should call with error once', function(done){\n    var a = Readable();\n    var b = Transform();\n    var c = Writable();\n    var err = new Error;\n\n    pipe(a, b, c, function(err){\n      assert(err);\n      done();\n    });\n\n    a.emit('error', err);\n    b.emit('error', err);\n    c.emit('error', err);\n  });\n});\n\nfunction Readable(){\n  var readable = new Stream.Readable({ objectMode: true });\n  readable._read = function(){\n    this.push('a');\n    this.push(null);\n  };\n  return readable;\n}\n\nfunction Transform(){\n  var transform = new Stream.Transform({ objectMode: true });\n  transform._transform = function(chunk, _, done){\n    done(null, chunk.toUpperCase());\n  };\n  return transform;\n}\n\nfunction Writable(cb){\n  var writable = new Stream.Writable({ objectMode: true });\n  writable._write = function(chunk, _, done){\n    assert.equal(chunk, 'A');\n    done();\n    cb();\n  };\n  return writable;\n}\n"]}