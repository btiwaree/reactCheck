{"version":3,"sources":["example.js"],"names":[],"mappings":";;AAEA,IAAI,SAAS,QAAQ,iBAAR,CAAT;;AAEJ,IAAI,YAAY,QAAQ,IAAR,CAAZ;;AAEJ,IAAI,WAAW,IAAI,OAAO,QAAP,CAAgB,EAAC,YAAY,IAAZ,EAArB,CAAX;IACA,WAAW,IAAI,OAAO,QAAP,CAAgB,EAAC,YAAY,IAAZ,EAArB,CAAX;;AAEJ,SAAS,MAAT,GAAkB,SAAS,MAAT,CAAgB,KAAhB,EAAuB,QAAvB,EAAiC,IAAjC,EAAuC;AACvD,MAAI,SAAS,IAAT,CAAc,KAAd,CAAJ,EAA0B;AACxB,WAAO,MAAP,CADwB;GAA1B,MAEO;AACL,aAAS,IAAT,CAAc,OAAd,EAAuB,IAAvB,EADK;GAFP;CADgB;;AAQlB,SAAS,KAAT,GAAiB,SAAS,KAAT,CAAe,CAAf,EAAkB;;CAAlB;;;AAKjB,SAAS,IAAT,CAAc,QAAd,EAAwB,YAAW;AACjC,aAAW,YAAW;AACpB,aAAS,IAAT,CAAc,IAAd,EADoB;GAAX,EAER,GAFH,EADiC;CAAX,CAAxB;;AAMA,IAAI,SAAS,UAAU,QAAV,EAAoB,QAApB,CAAT;;AAEJ,OAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,CAAT,EAAY;AAC5B,UAAQ,GAAR,CAAY,UAAZ,EAAwB,KAAK,SAAL,CAAe,CAAf,CAAxB,EAD4B;CAAZ,CAAlB;;AAIA,OAAO,EAAP,CAAU,QAAV,EAAoB,YAAW;AAC7B,UAAQ,GAAR,CAAY,kBAAZ,EAD6B;CAAX,CAApB;;AAIA,OAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,UAAQ,GAAR,CAAY,eAAZ,EAD0B;CAAX,CAAjB;;AAIA,OAAO,KAAP,CAAa,cAAb,EAA6B,YAAW;AACtC,UAAQ,GAAR,CAAY,kBAAZ,EADsC;CAAX,CAA7B;;AAIA,OAAO,GAAP,CAAW,YAAW;AACpB,UAAQ,GAAR,CAAY,iBAAZ,EADoB;CAAX,CAAX","file":"example-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar stream = require(\"readable-stream\");\n\nvar duplexer2 = require(\"./\");\n\nvar writable = new stream.Writable({objectMode: true}),\n    readable = new stream.Readable({objectMode: true});\n\nwritable._write = function _write(input, encoding, done) {\n  if (readable.push(input)) {\n    return done();\n  } else {\n    readable.once(\"drain\", done);\n  }\n};\n\nreadable._read = function _read(n) {\n  // no-op\n};\n\n// simulate the readable thing closing after a bit\nwritable.once(\"finish\", function() {\n  setTimeout(function() {\n    readable.push(null);\n  }, 500);\n});\n\nvar duplex = duplexer2(writable, readable);\n\nduplex.on(\"data\", function(e) {\n  console.log(\"got data\", JSON.stringify(e));\n});\n\nduplex.on(\"finish\", function() {\n  console.log(\"got finish event\");\n});\n\nduplex.on(\"end\", function() {\n  console.log(\"got end event\");\n});\n\nduplex.write(\"oh, hi there\", function() {\n  console.log(\"finished writing\");\n});\n\nduplex.end(function() {\n  console.log(\"finished ending\");\n});\n"]}