{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,iBAAR,EAA2B,WAA3B;AAClB,IAAI,WAAW,QAAQ,iBAAR,EAA2B,QAA3B;AACf,IAAI,WAAW,QAAQ,WAAR,CAAX;;AAEJ,OAAO,OAAP,GAAiB,YAAY;AAC3B,MAAI,OAAJ,CAD2B;AAE3B,MAAG,UAAU,MAAV,IAAoB,CAApB,IAAyB,MAAM,OAAN,CAAc,UAAU,CAAV,CAAd,CAAzB,EAAsD;AACvD,cAAU,UAAU,CAAV,CAAV,CADuD;GAAzD,MAEO;AACL,cAAU,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,CAAV,CADK;GAFP;AAKA,SAAO,QAAQ,OAAR,CAAP,CAP2B;CAAZ;;AAUjB,OAAO,OAAP,CAAe,GAAf,GAAqB,YAAY;AAC/B,MAAI,OAAJ,CAD+B;AAE/B,MAAG,UAAU,MAAV,IAAoB,CAApB,IAAyB,MAAM,OAAN,CAAc,UAAU,CAAV,CAAd,CAAzB,EAAsD;AACvD,cAAU,UAAU,CAAV,CAAV,CADuD;GAAzD,MAEO;AACL,cAAU,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,CAAV,CADK;GAFP;AAKA,SAAO,QAAQ,OAAR,EAAiB,EAAE,YAAY,IAAZ,EAAnB,CAAP,CAP+B;CAAZ;;AAWrB,SAAS,OAAT,CAAkB,OAAlB,EAA2B,IAA3B,EAAiC;;AAE/B,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,QAAQ,MAAR,EAAgB,GAApC,EACE,QAAQ,CAAR,IAAa,KAAK,QAAQ,CAAR,CAAL,EAAiB,IAAjB,CAAb,CADF;;AAGA,MAAG,QAAQ,MAAR,IAAkB,CAAlB,EACD,OAAO,IAAI,WAAJ,CAAgB,IAAhB,CAAP,CADF,KAEK,IAAG,QAAQ,MAAR,IAAkB,CAAlB,EACN,OAAO,QAAQ,CAAR,CAAP,CADG;;AAGL,MAAI,QAAQ,QAAQ,CAAR,CAAR;MACA,OAAO,QAAQ,QAAQ,MAAR,GAAiB,CAAjB,CAAf;MACA,UAAU,SAAS,IAAT,EAAe,KAAf,EAAsB,IAAtB,CAAV;;;;AAZ2B,WAgBtB,OAAT,CAAkB,OAAlB,EAA2B;AACzB,QAAG,QAAQ,MAAR,GAAiB,CAAjB,EACD,OADF;AAEA,YAAQ,CAAR,EAAW,IAAX,CAAgB,QAAQ,CAAR,CAAhB,EAHyB;AAIzB,YAAQ,QAAQ,KAAR,CAAc,CAAd,CAAR,EAJyB;GAA3B;;AAOA,UAAQ,OAAR,EAvB+B;;AAyB/B,WAAS,OAAT,GAAoB;AAClB,QAAI,OAAO,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,CAAP,CADc;AAElB,SAAK,OAAL,CAAa,OAAb,EAFkB;AAGlB,YAAQ,IAAR,CAAa,KAAb,CAAmB,OAAnB,EAA4B,IAA5B,EAHkB;GAApB;;;;AAzB+B,OAiC3B,IAAI,IAAI,CAAJ,EAAO,IAAI,QAAQ,MAAR,GAAiB,CAAjB,EAAoB,GAAvC,EACE,QAAQ,CAAR,EAAW,EAAX,CAAc,OAAd,EAAuB,OAAvB,EADF;;AAGA,SAAO,OAAP,CApC+B;CAAjC;;AAuCA,SAAS,IAAT,CAAe,EAAf,EAAmB,IAAnB,EAAyB;AACvB,MAAI,OAAO,GAAG,IAAH,KAAY,UAAnB,EAA+B,OAAO,EAAP,CAAnC;AACA,SAAO,IAAI,QAAJ,CAAa,IAAb,EAAmB,IAAnB,CAAwB,EAAxB,CAAP,CAFuB;CAAzB","file":"index-compiled.js","sourcesContent":["var PassThrough = require('readable-stream').PassThrough\nvar Readable = require('readable-stream').Readable\nvar duplexer = require('duplexer2')\n\nmodule.exports = function () {\n  var streams\n  if(arguments.length == 1 && Array.isArray(arguments[0])) {\n    streams = arguments[0]\n  } else {\n    streams = [].slice.call(arguments)\n  }\n  return combine(streams)\n}\n\nmodule.exports.obj = function () {\n  var streams\n  if(arguments.length == 1 && Array.isArray(arguments[0])) {\n    streams = arguments[0]\n  } else {\n    streams = [].slice.call(arguments)\n  }\n  return combine(streams, { objectMode: true })\n}\n\n  \nfunction combine (streams, opts) {\n\n  for (var i = 0; i < streams.length; i++)\n    streams[i] = wrap(streams[i], opts)\n\n  if(streams.length == 0)\n    return new PassThrough(opts)\n  else if(streams.length == 1)\n    return streams[0]\n\n  var first = streams[0]\n    , last = streams[streams.length - 1]\n    , thepipe = duplexer(opts, first, last)\n\n  //pipe all the streams together\n\n  function recurse (streams) {\n    if(streams.length < 2)\n      return\n    streams[0].pipe(streams[1])\n    recurse(streams.slice(1))\n  }\n\n  recurse(streams)\n\n  function onerror () {\n    var args = [].slice.call(arguments)\n    args.unshift('error')\n    thepipe.emit.apply(thepipe, args)\n  }\n\n  //es.duplex already reemits the error from the first and last stream.\n  //add a listener for the inner streams in the pipeline.\n  for(var i = 1; i < streams.length - 1; i ++)\n    streams[i].on('error', onerror)\n\n  return thepipe\n}\n\nfunction wrap (tr, opts) {\n  if (typeof tr.read === 'function') return tr\n  return new Readable(opts).wrap(tr)\n}\n"]}