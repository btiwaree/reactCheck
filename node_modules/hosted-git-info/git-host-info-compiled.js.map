{"version":3,"sources":["git-host-info.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,OAAO,OAAP,GAAiB;AAC9B,UAAQ;;;AAGN,iBAAa,CAAE,KAAF,EAAS,MAAT,EAAiB,SAAjB,EAA4B,WAA5B,EAAyC,KAAzC,EAAgD,OAAhD,CAAb;AACA,cAAU,YAAV;AACA,gBAAY,MAAZ;AACA,oBAAgB,+EAAhB;AACA,oBAAgB,0CAAhB;AACA,mBAAe,yDAAf;GARF;AAUA,aAAW;AACT,iBAAa,CAAE,SAAF,EAAa,WAAb,EAA0B,KAA1B,EAAiC,OAAjC,CAAb;AACA,cAAU,eAAV;AACA,gBAAY,KAAZ;GAHF;AAKA,UAAQ;AACN,iBAAa,CAAE,SAAF,EAAa,WAAb,EAA0B,KAA1B,EAAiC,OAAjC,CAAb;AACA,cAAU,YAAV;AACA,gBAAY,MAAZ;AACA,oBAAgB,4DAAhB;AACA,oBAAgB,0CAAhB;GALF;AAOA,QAAM;AACJ,iBAAa,CAAE,KAAF,EAAS,SAAT,EAAoB,WAApB,EAAiC,KAAjC,EAAwC,OAAxC,CAAb;AACA,cAAU,iBAAV;AACA,iBAAa,4CAAb;AACA,oBAAgB,6EAAhB;AACA,oBAAgB,4BAAhB;AACA,mBAAe,2CAAf;AACA,mBAAe,0CAAf;AACA,sBAAkB,mDAAlB;AACA,sBAAkB,yCAAlB;AACA,oBAAgB,yCAAhB;AACA,qBAAiB,iDAAjB;AACA,wBAAoB,+BAApB;AACA,oBAAgB,wBAAhB;GAbF;CAvBa;;AAwCf,IAAI,kBAAkB;AACpB,iBAAe,gDAAf;AACA,oBAAkB,0DAAlB;AACA,oBAAkB,qDAAlB;AACA,kBAAgB,4DAAhB;AACA,mBAAiB,+DAAjB;AACA,kBAAgB,2DAAhB;AACA,sBAAoB,sCAApB;AACA,kBAAgB,+BAAhB;AACA,eAAa,oCAAb;CATE;;AAYJ,OAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAU,IAAV,EAAgB;AAC5C,SAAO,IAAP,CAAY,eAAZ,EAA6B,OAA7B,CAAqC,UAAU,GAAV,EAAe;AAClD,QAAI,SAAS,IAAT,EAAe,GAAf,CAAJ,EAAyB,OAAzB;AACA,aAAS,IAAT,EAAe,GAAf,IAAsB,gBAAgB,GAAhB,CAAtB,CAFkD;GAAf,CAArC,CAD4C;AAK5C,WAAS,IAAT,EAAe,YAAf,GAA8B,OAAO,OACnC,SAAS,IAAT,EAAe,SAAf,CAAyB,GAAzB,CAA6B,UAAU,QAAV,EAAoB;AAC/C,WAAO,SAAS,OAAT,CAAiB,sBAAjB,EAAyC,MAAzC,CAAP,CAD+C;GAApB,CAA7B,CAEG,IAFH,CAEQ,GAFR,CADmC,GAGpB,KAHoB,CAArC,CAL4C;CAAhB,CAA9B","file":"git-host-info-compiled.js","sourcesContent":["'use strict'\n\nvar gitHosts = module.exports = {\n  github: {\n    // First two are insecure and generally shouldn't be used any more, but\n    // they are still supported.\n    'protocols': [ 'git', 'http', 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'github.com',\n    'treepath': 'tree',\n    'filetemplate': 'https://{auth@}raw.githubusercontent.com/{user}/{project}/{committish}/{path}',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'gittemplate': 'git://{auth@}{domain}/{user}/{project}.git{#committish}'\n  },\n  bitbucket: {\n    'protocols': [ 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'bitbucket.org',\n    'treepath': 'src'\n  },\n  gitlab: {\n    'protocols': [ 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'gitlab.com',\n    'treepath': 'tree',\n    'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#README',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues'\n  },\n  gist: {\n    'protocols': [ 'git', 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'gist.github.com',\n    'pathmatch': /^[/](?:([^/]+)[/])?([a-z0-9]+)(?:[.]git)?$/,\n    'filetemplate': 'https://gist.githubusercontent.com/{user}/{project}/raw{/committish}/{path}',\n    'bugstemplate': 'https://{domain}/{project}',\n    'gittemplate': 'git://{domain}/{project}.git{#committish}',\n    'sshtemplate': 'git@{domain}:/{project}.git{#committish}',\n    'sshurltemplate': 'git+ssh://git@{domain}/{project}.git{#committish}',\n    'browsetemplate': 'https://{domain}/{project}{/committish}',\n    'docstemplate': 'https://{domain}/{project}{/committish}',\n    'httpstemplate': 'git+https://{domain}/{project}.git{#committish}',\n    'shortcuttemplate': '{type}:{project}{#committish}',\n    'pathtemplate': '{project}{#committish}'\n  }\n}\n\nvar gitHostDefaults = {\n  'sshtemplate': 'git@{domain}:{user}/{project}.git{#committish}',\n  'sshurltemplate': 'git+ssh://git@{domain}/{user}/{project}.git{#committish}',\n  'browsetemplate': 'https://{domain}/{user}/{project}{/tree/committish}',\n  'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#readme',\n  'httpstemplate': 'git+https://{auth@}{domain}/{user}/{project}.git{#committish}',\n  'filetemplate': 'https://{domain}/{user}/{project}/raw/{committish}/{path}',\n  'shortcuttemplate': '{type}:{user}/{project}{#committish}',\n  'pathtemplate': '{user}/{project}{#committish}',\n  'pathmatch': /^[/]([^/]+)[/]([^/]+?)(?:[.]git)?$/\n}\n\nObject.keys(gitHosts).forEach(function (name) {\n  Object.keys(gitHostDefaults).forEach(function (key) {\n    if (gitHosts[name][key]) return\n    gitHosts[name][key] = gitHostDefaults[key]\n  })\n  gitHosts[name].protocols_re = RegExp('^(' +\n    gitHosts[name].protocols.map(function (protocol) {\n      return protocol.replace(/([\\\\+*{}()\\[\\]$^|])/g, '\\\\$1')\n    }).join('|') + '):$')\n})\n"]}