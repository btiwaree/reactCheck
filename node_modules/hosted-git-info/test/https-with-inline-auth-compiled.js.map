{"version":3,"sources":["https-with-inline-auth.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,YAAY,QAAQ,UAAR,CAAZ;AACJ,IAAI,OAAO,QAAQ,KAAR,EAAe,IAAf;;AAEX,KAAK,kEAAL,EAAyE,UAAU,CAAV,EAAa;AACpF,WAAS,MAAT,CAAiB,IAAjB,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC;AACpC,QAAI,WAAW,UAAU,OAAV,CAAkB,IAAlB,CAAX,CADgC;AAEpC,QAAI,OAAO,SAAS,MAAM,MAAN,GAAe,EAAxB,CAFyB;AAGpC,MAAE,EAAF,CAAK,QAAL,EAAe,KAAf,EAHoC;AAIpC,QAAI,CAAC,QAAD,EAAW,OAAf;AACA,MAAE,EAAF,CAAK,SAAS,KAAT,EAAL,EAAuB,iDAAiD,IAAjD,EAAuD,QAAQ,WAAR,CAA9E,CALoC;AAMpC,MAAE,EAAF,CAAK,SAAS,GAAT,EAAL,EAAqB,2CAA2C,IAA3C,EAAiD,QAAQ,SAAR,CAAtE,CANoC;AAOpC,MAAE,EAAF,CAAK,SAAS,MAAT,EAAL,EAAwB,gCAAgC,SAAS,WAAW,MAAX,GAAoB,EAA7B,CAAhC,EAAkE,QAAQ,YAAR,CAA1F,CAPoC;AAQpC,MAAE,EAAF,CAAK,SAAS,IAAT,EAAL,EAAsB,mCAAtB,EAA2D,QAAQ,UAAR,CAA3D,CARoC;AASpC,MAAE,EAAF,CAAK,SAAS,IAAT,EAAL,EAAsB,gCAAgC,SAAS,WAAW,MAAX,GAAoB,EAA7B,CAAhC,GAAmE,SAAnE,EAA8E,QAAQ,UAAR,CAApG,CAToC;AAUpC,MAAE,EAAF,CAAK,SAAS,GAAT,EAAL,EAAqB,+BAA+B,IAA/B,EAAqC,QAAQ,SAAR,CAA1D,CAVoC;AAWpC,MAAE,EAAF,CAAK,SAAS,MAAT,EAAL,EAAwB,yCAAyC,IAAzC,EAA+C,QAAQ,YAAR,CAAvE,CAXoC;AAYpC,MAAE,EAAF,CAAK,SAAS,QAAT,EAAL,EAA0B,mBAAmB,IAAnB,EAAyB,QAAQ,cAAR,CAAnD,CAZoC;AAapC,MAAE,EAAF,CAAK,SAAS,IAAT,CAAc,GAAd,CAAL,EAAyB,0DAA0D,UAAU,QAAV,CAA1D,GAAgF,IAAhF,EAAsF,QAAQ,UAAR,CAA/G,CAboC;GAAtC;;;AADoF,QAkBpF,CAAO,oCAAP,EAA6C,KAA7C,EAlBoF;AAmBpF,SAAO,wCAAP,EAAiD,SAAjD,EAnBoF;AAoBpF,SAAO,2CAAP,EAAoD,YAApD,EAAkE,QAAlE,EApBoF;AAqBpF,SAAO,+CAAP,EAAwD,gBAAxD,EAA0E,QAA1E,EArBoF;;AAuBpF,SAAO,sCAAP,EAA+C,OAA/C,EAvBoF;AAwBpF,SAAO,0CAAP,EAAmD,WAAnD,EAxBoF;AAyBpF,SAAO,6CAAP,EAAsD,cAAtD,EAAsE,QAAtE,EAzBoF;AA0BpF,SAAO,iDAAP,EAA0D,kBAA1D,EAA8E,QAA9E,EA1BoF;;AA4BpF,SAAO,qCAAP,EAA8C,MAA9C,EA5BoF;AA6BpF,SAAO,yCAAP,EAAkD,UAAlD,EA7BoF;AA8BpF,SAAO,4CAAP,EAAqD,aAArD,EAAoE,QAApE,EA9BoF;AA+BpF,SAAO,gDAAP,EAAyD,iBAAzD,EAA4E,QAA5E,EA/BoF;;AAiCpF,IAAE,GAAF,GAjCoF;CAAb,CAAzE","file":"https-with-inline-auth-compiled.js","sourcesContent":["'use strict'\nvar HostedGit = require('../index')\nvar test = require('tap').test\n\ntest('HTTPS GitHub URL with embedded auth -- generally not a good idea', function (t) {\n  function verify (host, label, branch) {\n    var hostinfo = HostedGit.fromUrl(host)\n    var hash = branch ? '#' + branch : ''\n    t.ok(hostinfo, label)\n    if (!hostinfo) return\n    t.is(hostinfo.https(), 'git+https://user:pass@github.com/111/222.git' + hash, label + ' -> https')\n    t.is(hostinfo.git(), 'git://user:pass@github.com/111/222.git' + hash, label + ' -> git')\n    t.is(hostinfo.browse(), 'https://github.com/111/222' + (branch ? '/tree/' + branch : ''), label + ' -> browse')\n    t.is(hostinfo.bugs(), 'https://github.com/111/222/issues', label + ' -> bugs')\n    t.is(hostinfo.docs(), 'https://github.com/111/222' + (branch ? '/tree/' + branch : '') + '#readme', label + ' -> docs')\n    t.is(hostinfo.ssh(), 'git@github.com:111/222.git' + hash, label + ' -> ssh')\n    t.is(hostinfo.sshurl(), 'git+ssh://git@github.com/111/222.git' + hash, label + ' -> sshurl')\n    t.is(hostinfo.shortcut(), 'github:111/222' + hash, label + ' -> shortcut')\n    t.is(hostinfo.file('C'), 'https://user:pass@raw.githubusercontent.com/111/222/' + (branch || 'master') + '/C', label + ' -> file')\n  }\n\n  // insecure protocols\n  verify('git://user:pass@github.com/111/222', 'git')\n  verify('git://user:pass@github.com/111/222.git', 'git.git')\n  verify('git://user:pass@github.com/111/222#branch', 'git#branch', 'branch')\n  verify('git://user:pass@github.com/111/222.git#branch', 'git.git#branch', 'branch')\n\n  verify('https://user:pass@github.com/111/222', 'https')\n  verify('https://user:pass@github.com/111/222.git', 'https.git')\n  verify('https://user:pass@github.com/111/222#branch', 'https#branch', 'branch')\n  verify('https://user:pass@github.com/111/222.git#branch', 'https.git#branch', 'branch')\n\n  verify('http://user:pass@github.com/111/222', 'http')\n  verify('http://user:pass@github.com/111/222.git', 'http.git')\n  verify('http://user:pass@github.com/111/222#branch', 'http#branch', 'branch')\n  verify('http://user:pass@github.com/111/222.git#branch', 'http.git#branch', 'branch')\n\n  t.end()\n})\n"]}