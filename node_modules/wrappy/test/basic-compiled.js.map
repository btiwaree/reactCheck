{"version":3,"sources":["basic.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,KAAR,EAAe,IAAf;AACX,IAAI,SAAS,QAAQ,cAAR,CAAT;;AAEJ,KAAK,OAAL,EAAc,UAAU,CAAV,EAAa;AACzB,WAAS,SAAT,CAAoB,EAApB,EAAwB;AACtB,QAAI,SAAS,KAAT,CADkB;AAEtB,WAAO,YAAY;AACjB,UAAI,MAAJ,EAAY,OAAZ;AACA,eAAS,IAAT,CAFiB;AAGjB,aAAO,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAP,CAHiB;KAAZ,CAFe;GAAxB;AAQA,YAAU,OAAV,GAAoB,EAApB,CATyB;AAUzB,MAAI,OAAO,OAAO,SAAP,CAAP,CAVqB;AAWzB,IAAE,KAAF,CAAQ,KAAK,OAAL,EAAc,UAAU,OAAV,CAAtB,CAXyB;;AAazB,MAAI,SAAS,CAAT,CAbqB;AAczB,WAAS,GAAT,GAAgB;AACd,MAAE,KAAF,CAAQ,MAAR,EAAgB,CAAhB,EADc;AAEd,aAFc;GAAhB;;AAdyB,KAmBzB,CAAI,MAAJ,GAAa,IAAb,CAnByB;;AAqBzB,MAAI,gBAAgB,KAAK,GAAL,CAAhB,CArBqB;;AAuBzB;AAvByB,eAwBzB;AAxByB,GAyBzB,CAAE,KAAF,CAAQ,MAAR,EAAgB,CAAhB;;;AAzByB,GA4BzB,CAAE,KAAF,CAAQ,cAAc,MAAd,EAAsB,IAA9B,EA5ByB;;AA8BzB,MAAI,OAAO,EAAP,CA9BqB;AA+BzB,MAAI,UAAU,OAAO,UAAU,GAAV,EAAe,EAAf,EAAmB;AACtC,SAAK,IAAL,CAAU,MAAM,cAAN,CAAV,CADsC;AAEtC,WAAO,YAAY;AACjB,WAAK,IAAL,CAAU,MAAM,YAAN,CAAV,CADiB;AAEjB,UAAI,MAAM,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAN,CAFa;AAGjB,WAAK,IAAL,CAAU,MAAM,WAAN,CAAV,CAHiB;KAAZ,CAF+B;GAAnB,CAAjB,CA/BqB;;AAwCzB,MAAI,IAAI,QAAQ,KAAR,EAAe,YAAY;AACjC,MAAE,IAAF,CAAO,IAAP,EAAa,CAAE,iBAAF,EAAqB,eAArB,CAAb,EADiC;GAAZ,CAAnB,CAxCqB;AA2CzB,MA3CyB;AA4CzB,IAAE,IAAF,CAAO,IAAP,EAAa,CAAE,iBAAF,EAAqB,eAArB,EAAsC,cAAtC,CAAb,EA5CyB;;AA8CzB,IAAE,GAAF,GA9CyB;CAAb,CAAd","file":"basic-compiled.js","sourcesContent":["var test = require('tap').test\nvar wrappy = require('../wrappy.js')\n\ntest('basic', function (t) {\n  function onceifier (cb) {\n    var called = false\n    return function () {\n      if (called) return\n      called = true\n      return cb.apply(this, arguments)\n    }\n  }\n  onceifier.iAmOnce = {}\n  var once = wrappy(onceifier)\n  t.equal(once.iAmOnce, onceifier.iAmOnce)\n\n  var called = 0\n  function boo () {\n    t.equal(called, 0)\n    called++\n  }\n  // has some rando property\n  boo.iAmBoo = true\n\n  var onlyPrintOnce = once(boo)\n\n  onlyPrintOnce() // prints 'boo'\n  onlyPrintOnce() // does nothing\n  t.equal(called, 1)\n\n  // random property is retained!\n  t.equal(onlyPrintOnce.iAmBoo, true)\n\n  var logs = []\n  var logwrap = wrappy(function (msg, cb) {\n    logs.push(msg + ' wrapping cb')\n    return function () {\n      logs.push(msg + ' before cb')\n      var ret = cb.apply(this, arguments)\n      logs.push(msg + ' after cb')\n    }\n  })\n\n  var c = logwrap('foo', function () {\n    t.same(logs, [ 'foo wrapping cb', 'foo before cb' ])\n  })\n  c()\n  t.same(logs, [ 'foo wrapping cb', 'foo before cb', 'foo after cb' ])\n\n  t.end()\n})\n"]}