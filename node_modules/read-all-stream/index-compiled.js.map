{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,iBAAR,EAA2B,QAA3B;AACf,IAAI,WAAW,QAAQ,MAAR,EAAgB,QAAhB;AACf,IAAI,UAAU,QAAQ,gBAAR,CAAV;;AAEJ,SAAS,YAAT,GAAwB;AACvB,UAAS,IAAT,CAAc,IAAd,EAAoB,EAAE,YAAY,IAAZ,EAAtB,EADuB;AAEvB,MAAK,MAAL,GAAc,EAAd,CAFuB;AAGvB,MAAK,MAAL,GAAc,CAAd,CAHuB;CAAxB;;AAMA,SAAS,YAAT,EAAuB,QAAvB;AACA,aAAa,SAAb,CAAuB,MAAvB,GAAgC,UAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB,EAA2B;AAC1D,KAAI,CAAC,OAAO,QAAP,CAAgB,KAAhB,CAAD,EAAyB;AAC5B,UAAQ,IAAI,MAAJ,CAAW,KAAX,CAAR,CAD4B;EAA7B;;AAIA,MAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB,EAL0D;AAM1D,MAAK,MAAL,IAAe,MAAM,MAAN,CAN2C;AAO1D,QAP0D;CAA3B;;AAUhC,OAAO,OAAP,GAAiB,SAAS,IAAT,CAAc,MAAd,EAAsB,OAAtB,EAA+B,EAA/B,EAAmC;AACnD,KAAI,CAAC,MAAD,EAAS;AACZ,QAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN,CADY;EAAb;;AAIA,KAAI,OAAO,OAAP,KAAmB,UAAnB,EAA+B;AAClC,OAAK,OAAL,CADkC;AAElC,YAAU,EAAV,CAFkC;EAAnC;;AAKA,KAAI,OAAO,OAAP,KAAmB,QAAnB,IAA+B,YAAY,SAAZ,IAAyB,YAAY,IAAZ,EAAkB;AAC7E,YAAU,EAAE,UAAU,OAAV,EAAZ,CAD6E;EAA9E;;AAIA,KAAI,QAAQ,QAAR,KAAqB,SAArB,EAAgC;AAAE,UAAQ,QAAR,GAAmB,MAAnB,CAAF;EAApC;;AAEA,KAAI,OAAJ,CAhBmD;;AAkBnD,KAAI,CAAC,EAAD,EAAK;AACR,MAAI,OAAJ,EAAa,MAAb,CADQ;AAER,YAAU,IAAI,OAAJ,CAAY,UAAS,IAAT,EAAe,IAAf,EAAqB;AAC1C,aAAU,IAAV,CAD0C;AAE1C,YAAS,IAAT,CAF0C;GAArB,CAAtB,CAFQ;;AAOR,OAAK,UAAU,GAAV,EAAe,IAAf,EAAqB;AACzB,OAAI,GAAJ,EAAS;AAAE,WAAO,OAAO,GAAP,CAAP,CAAF;IAAT;AACA,WAAQ,IAAR,EAFyB;GAArB,CAPG;EAAT;;AAaA,KAAI,OAAO,IAAI,YAAJ,EAAP,CA/B+C;;AAiCnD,MAAK,EAAL,CAAQ,QAAR,EAAkB,YAAY;AAC7B,MAAI,OAAO,OAAO,MAAP,CAAc,KAAK,MAAL,EAAa,KAAK,MAAL,CAAlC,CADyB;;AAG7B,MAAI,QAAQ,QAAR,EAAkB;AACrB,UAAO,KAAK,QAAL,CAAc,QAAQ,QAAR,CAArB,CADqB;GAAtB;;AAIA,KAAG,IAAH,EAAS,IAAT,EAP6B;EAAZ,CAAlB,CAjCmD;;AA2CnD,QAAO,IAAP,CAAY,OAAZ,EAAqB,EAArB,EA3CmD;;AA6CnD,QAAO,IAAP,CAAY,IAAZ,EA7CmD;;AA+CnD,QAAO,OAAP,CA/CmD;CAAnC","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar Writable = require('readable-stream').Writable;\nvar inherits = require('util').inherits;\nvar Promise = require('pinkie-promise');\n\nfunction BufferStream() {\n\tWritable.call(this, { objectMode: true });\n\tthis.buffer = [];\n\tthis.length = 0;\n}\n\ninherits(BufferStream, Writable);\nBufferStream.prototype._write = function(chunk, enc, next) {\n\tif (!Buffer.isBuffer(chunk)) {\n\t\tchunk = new Buffer(chunk);\n\t}\n\n\tthis.buffer.push(chunk);\n\tthis.length += chunk.length;\n\tnext();\n};\n\nmodule.exports = function read(stream, options, cb) {\n\tif (!stream) {\n\t\tthrow new Error('stream argument is required');\n\t}\n\n\tif (typeof options === 'function') {\n\t\tcb = options;\n\t\toptions = {};\n\t}\n\n\tif (typeof options === 'string' || options === undefined || options === null) {\n\t\toptions = { encoding: options };\n\t}\n\n\tif (options.encoding === undefined) { options.encoding = 'utf8'; }\n\n\tvar promise;\n\n\tif (!cb) {\n\t\tvar resolve, reject;\n\t\tpromise = new Promise(function(_res, _rej) {\n\t\t\tresolve = _res;\n\t\t\treject = _rej;\n\t\t});\n\n\t\tcb = function (err, data) {\n\t\t\tif (err) { return reject(err); }\n\t\t\tresolve(data);\n\t\t};\n\t}\n\n\tvar sink = new BufferStream();\n\n\tsink.on('finish', function () {\n\t\tvar data = Buffer.concat(this.buffer, this.length);\n\n\t\tif (options.encoding) {\n\t\t\tdata = data.toString(options.encoding);\n\t\t}\n\n\t\tcb(null, data);\n\t});\n\n\tstream.once('error', cb);\n\n\tstream.pipe(sink);\n\n\treturn promise;\n}\n"]}