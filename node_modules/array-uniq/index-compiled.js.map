{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAKA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACvB,KAAI,MAAM,EAAN,CADmB;;AAGvB,MAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,IAAI,MAAJ,EAAY,GAAhC,EAAqC;AACpC,MAAI,IAAI,OAAJ,CAAY,IAAI,CAAJ,CAAZ,MAAwB,CAAC,CAAD,EAAI;AAC/B,OAAI,IAAJ,CAAS,IAAI,CAAJ,CAAT,EAD+B;GAAhC;EADD;;AAMA,QAAO,GAAP,CATuB;CAAxB;;;AAaA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACrB,KAAI,OAAO,IAAI,GAAJ,EAAP,CADiB;AAErB,QAAO,IAAI,MAAJ,CAAW,UAAU,EAAV,EAAc;AAC/B,MAAI,CAAC,KAAK,GAAL,CAAS,EAAT,CAAD,EAAe;AAClB,QAAK,GAAL,CAAS,EAAT,EADkB;AAElB,UAAO,IAAP,CAFkB;GAAnB;EADiB,CAAlB,CAFqB;CAAtB;;;AAWA,SAAS,kBAAT,CAA4B,GAA5B,EAAiC;AAChC,KAAI,MAAM,EAAN,CAD4B;;AAGhC,KAAK,GAAJ,CAAQ,GAAR,CAAD,CAAe,OAAf,CAAuB,UAAU,EAAV,EAAc;AACpC,MAAI,IAAJ,CAAS,EAAT,EADoC;EAAd,CAAvB,CAHgC;;AAOhC,QAAO,GAAP,CAPgC;CAAjC;;;;AAYA,SAAS,uBAAT,GAAmC;AAClC,KAAI,MAAM,KAAN,CAD8B;;AAGlC,KAAK,GAAJ,CAAQ,CAAC,IAAD,CAAR,CAAD,CAAkB,OAAlB,CAA0B,UAAU,EAAV,EAAc;AACvC,QAAM,EAAN,CADuC;EAAd,CAA1B,CAHkC;;AAOlC,QAAO,QAAQ,IAAR,CAP2B;CAAnC;;AAUA,IAAI,SAAS,MAAT,EAAiB;AACpB,KAAI,OAAO,IAAI,SAAJ,CAAc,OAAd,KAA0B,UAAjC,IAA+C,yBAA/C,EAA0E;AAC7E,SAAO,OAAP,GAAiB,kBAAjB,CAD6E;EAA9E,MAEO;AACN,SAAO,OAAP,GAAiB,OAAjB,CADM;EAFP;CADD,MAMO;AACN,QAAO,OAAP,GAAiB,SAAjB,CADM;CANP","file":"index-compiled.js","sourcesContent":["'use strict';\n\n// there's 3 implementations written in increasing order of efficiency\n\n// 1 - no Set type is defined\nfunction uniqNoSet(arr) {\n\tvar ret = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\tret.push(arr[i]);\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// 2 - a simple Set type is defined\nfunction uniqSet(arr) {\n\tvar seen = new Set();\n\treturn arr.filter(function (el) {\n\t\tif (!seen.has(el)) {\n\t\t\tseen.add(el);\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\n// 3 - a standard Set type is defined and it has a forEach method\nfunction uniqSetWithForEach(arr) {\n\tvar ret = [];\n\n\t(new Set(arr)).forEach(function (el) {\n\t\tret.push(el);\n\t});\n\n\treturn ret;\n}\n\n// V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\nfunction doesForEachActuallyWork() {\n\tvar ret = false;\n\n\t(new Set([true])).forEach(function (el) {\n\t\tret = el;\n\t});\n\n\treturn ret === true;\n}\n\nif ('Set' in global) {\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\tmodule.exports = uniqSetWithForEach;\n\t} else {\n\t\tmodule.exports = uniqSet;\n\t}\n} else {\n\tmodule.exports = uniqNoSet;\n}\n"]}