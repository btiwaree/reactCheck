{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,eAAR,CAAT;AACJ,IAAI,UAAU,QAAQ,SAAR,CAAV;AACJ,IAAI,cAAc,QAAQ,sBAAR,CAAd;AACJ,IAAI,eAAe,QAAQ,qBAAR,CAAf;AACJ,IAAI,eAAe,QAAQ,qBAAR,CAAf;AACJ,IAAI,aAAa,QAAQ,mBAAR,CAAb;;AAEJ,SAAS,SAAT,CAAmB,IAAnB,EAAyB;AACrB,WAAO,OAAO;AACV,4BAAoB,IAApB;AACA,0BAAkB,IAAlB;AACA,sBAAc,IAAd;KAHG,EAIJ,IAJI,CAAP,CADqB;;AAOrB,WAAO,UAAU,IAAV,EAAgB;AACnB,YAAI,IAAJ,CADmB;;AAGnB,YAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AACtB,gBAAI,KAAK,IAAL,KAAc,aAAd,EAA6B;AAC7B,qBAAK,KAAL,GAAa,aAAa,KAAK,KAAL,EAAY,IAAzB,CAAb,CAD6B;aAAjC,MAEO,IAAI,KAAK,IAAL,KAAc,aAAd,EAA6B;AACpC,uBAAO,YAAY,KAAK,KAAL,CAAnB,CADoC;AAEpC,qBAAK,KAAL,GAAa,aAAa,KAAK,KAAL,EAAY,IAAzB,CAAb,CAFoC;AAGpC,qBAAK,KAAL,GAAa,KAAK,QAAL,EAAb,CAHoC;aAAjC,MAIA,IAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AAC7B,uBAAO,YAAY,KAAK,KAAL,CAAnB,CAD6B;AAE7B,qBAAK,KAAL,GAAa,WAAW,KAAK,KAAL,EAAY,IAAvB,CAAb,CAF6B;AAG7B,qBAAK,KAAL,GAAa,KAAK,QAAL,EAAb,CAH6B;aAA1B;SAPX;KAHG,CAPc;CAAzB;;AA0BA,OAAO,OAAP,GAAiB,QAAQ,MAAR,CAAe,4BAAf,EAA6C,UAAU,IAAV,EAAgB;AAC1E,WAAO,UAAU,GAAV,EAAe;AAClB,YAAI,IAAJ,CAAS,UAAU,IAAV,CAAT,EADkB;KAAf,CADmE;CAAhB,CAA9D","file":"index-compiled.js","sourcesContent":["var assign = require('object-assign');\r\nvar postcss = require('postcss');\r\nvar valueParser = require('postcss-value-parser');\r\nvar minifyWeight = require('./lib/minify-weight');\r\nvar minifyFamily = require('./lib/minify-family');\r\nvar minifyFont = require('./lib/minify-font');\r\n\r\nfunction transform(opts) {\r\n    opts = assign({\r\n        removeAfterKeyword: true,\r\n        removeDuplicates: true,\r\n        removeQuotes: true\r\n    }, opts);\r\n\r\n    return function (decl) {\r\n        var tree;\r\n\r\n        if (decl.type === 'decl') {\r\n            if (decl.prop === 'font-weight') {\r\n                decl.value = minifyWeight(decl.value, opts);\r\n            } else if (decl.prop === 'font-family') {\r\n                tree = valueParser(decl.value);\r\n                tree.nodes = minifyFamily(tree.nodes, opts);\r\n                decl.value = tree.toString();\r\n            } else if (decl.prop === 'font') {\r\n                tree = valueParser(decl.value);\r\n                tree.nodes = minifyFont(tree.nodes, opts);\r\n                decl.value = tree.toString();\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports = postcss.plugin('postcss-minify-font-values', function (opts) {\r\n    return function (css) {\r\n        css.walk(transform(opts));\r\n    };\r\n});\r\n"]}