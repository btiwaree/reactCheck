{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,UAAU,QAAQ,UAAR,CAAV;AACJ,IAAI,KAAK,QAAQ,aAAR,CAAL;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,OAAO,QAAQ,OAAR,CAAP;AACJ,IAAI,UAAU,QAAQ,oBAAR,CAAV;AACJ,IAAI,WAAW,QAAQ,WAAR,CAAX;;AAEJ,IAAI,cAAc,gBAAd;AACJ,IAAI,WAAW,iCAAX;;;;;AAKJ,OAAO,OAAP,CAAe,IAAf,GAAsB,SAAS,IAAT,CAAc,OAAd,EAAuB;AAC3C,WAAS,aAAT,CAAuB,IAAvB,EAA6B,QAA7B,EAAuC,QAAvC,EAAiD;;;;AAI/C,QAAI,KAAK,MAAL,MAAiB,KAAK,SAAL,EAAgB;AACnC,WAAK,IAAL,CAAU,IAAV,EADmC;AAEnC,aAAO,UAAP,CAFmC;KAArC;;AAKA,QAAI,KAAK,QAAL,EAAJ,EAAqB;AACnB,aAAO,SAAS,IAAI,KAAJ,CAAU,cAAc,gCAAd,CAAnB,CAAP,CADmB;KAArB;;AAIA,QAAI,cAAc,KAAK,QAAL,CAAc,QAAd,EAAd,CAb2C;AAc/C,QAAI,SAAJ,CAd+C;;AAgB/C,QAAI,WAAW,QAAQ,QAAR,EAAkB;AAC/B,UAAI,aAAa,EAAb;;;AAD2B,eAI/B,GAAY,QAAQ,UAAR,CAAmB,WAAnB,CAAZ,CAJ+B;AAK/B,UAAI,SAAJ,EAAe;AACb,oBAAY,UAAU,QAAV,EAAZ;;AADa,kBAGb,GAAa,KAAK,OAAL,CAAa,KAAK,IAAL,CAA1B,CAHa;AAIb,sBAAc,QAAQ,cAAR,CAAuB,WAAvB,CAAd,CAJa;OAAf,MAKO;;AAEL,YAAI,aAAa,QAAQ,mBAAR,CAA4B,IAA5B,CAAiC,WAAjC,CAAb,CAFC;;AAIL,YAAI,OAAJ,CAJK;AAKL,YAAI,UAAJ,EAAgB;AACd,oBAAU,KAAK,OAAL,CAAa,KAAK,OAAL,CAAa,KAAK,IAAL,CAA1B,EAAsC,WAAW,CAAX,KAAiB,WAAW,CAAX,CAAjB,CAAhD,CADc;AAEd,wBAAc,QAAQ,qBAAR,CAA8B,WAA9B,CAAd;;AAFc,SAAhB,MAIO;AACL,sBAAU,KAAK,IAAL,GAAY,MAAZ,CADL;WAJP;;;AALK,kBAcL,GAAa,KAAK,OAAL,CAAa,OAAb,CAAb,CAdK;;AAgBL,YAAI;AACF,sBAAY,KAAK,KAAL,CAAW,SAAS,GAAG,YAAH,CAAgB,OAAhB,EAAyB,MAAzB,CAAT,CAAX,CAAZ,CADE;SAAJ,CAEE,OAAM,CAAN,EAAS,EAAT;OAvBJ;;;AAL+B,UAgC3B,SAAJ,EAAe;AACb,kBAAU,cAAV,GAA2B,UAAU,cAAV,IAA4B,EAA5B,CADd;AAEb,kBAAU,OAAV,CAAkB,OAAlB,CAA0B,UAAS,MAAT,EAAiB,CAAjB,EAAoB;AAC5C,cAAI,OAAO,KAAP,CAAa,QAAb,CAAJ,EAA4B;AAC1B,sBAAU,cAAV,CAAyB,CAAzB,IAA8B,UAAU,cAAV,CAAyB,CAAzB,KAA+B,IAA/B,CADJ;AAE1B,mBAF0B;WAA5B;AAIA,cAAI,UAAU,KAAK,OAAL,CAAa,UAAb,EAAyB,MAAzB,CAAV,CALwC;AAM5C,oBAAU,OAAV,CAAkB,CAAlB,IAAuB,cAAc,KAAK,QAAL,CAAc,KAAK,IAAL,EAAW,OAAzB,CAAd,CAAvB,CAN4C;;AAQ5C,cAAI,CAAC,UAAU,cAAV,CAAyB,CAAzB,CAAD,EAA8B;AAChC,gBAAI,gBAAgB,IAAhB,CAD4B;AAEhC,gBAAI,UAAU,UAAV,EAAsB;AACxB,kBAAI,UAAU,UAAV,CAAqB,KAArB,CAA2B,QAA3B,CAAJ,EAA0C;AACxC,0BAAU,cAAV,CAAyB,CAAzB,IAA8B,IAA9B,CADwC;AAExC,uBAFwC;eAA1C;AAIA,wBAAU,KAAK,OAAL,CAAa,UAAb,EAAyB,UAAU,UAAV,EAAsB,MAA/C,CAAV,CALwB;aAA1B;;;AAFgC,gBAW5B,YAAY,KAAK,IAAL,EAAW;AACzB,8BAAgB,WAAhB;;;AADyB,aAA3B,MAIO;AACL,oBAAI;AACF,sBAAI,QAAQ,KAAR,EACF,QAAQ,GAAR,CAAY,cAAc,gCAAd,GAAiD,MAAjD,GAA0D,uBAA1D,CAAZ,CADF;AAEA,kCAAgB,SAAS,GAAG,YAAH,CAAgB,OAAhB,EAAyB,MAAzB,CAAT,CAAhB,CAHE;iBAAJ,CAIE,OAAO,CAAP,EAAU;AACV,sBAAI,QAAQ,KAAR,EACF,QAAQ,IAAR,CAAa,cAAc,gCAAd,GAAiD,OAAjD,CAAb,CADF;iBADA;eATJ;AAcA,sBAAU,cAAV,CAAyB,CAAzB,IAA8B,aAA9B,CAzBgC;WAAlC;SARwB,CAA1B;;;AAFa,YAwCb,CAAK,QAAL,GAAgB,IAAI,MAAJ,CAAW,WAAX,EAAwB,MAAxB,CAAhB,CAxCa;OAAf;KAhCF;;AA4EA,QAAI,CAAC,SAAD,EAAY;;AAEd,kBAAY;AACV,iBAAU,CAAV;AACA,eAAO,EAAP;AACA,kBAAU,EAAV;AACA,iBAAS,CAAC,cAAc,KAAK,QAAL,CAAf,CAAT;AACA,wBAAgB,CAAC,WAAD,CAAhB;OALF,CAFc;KAAhB;;AAWA,cAAU,IAAV,GAAiB,cAAc,KAAK,QAAL,CAA/B,CAvG+C;AAwG/C,SAAK,SAAL,GAAiB,SAAjB,CAxG+C;;AA0G/C,SAAK,IAAL,CAAU,IAAV,EA1G+C;AA2G/C,eA3G+C;GAAjD;;AA8GA,SAAO,QAAQ,GAAR,CAAY,aAAZ,CAAP,CA/G2C;CAAvB;;;;;;;;AAwHtB,OAAO,OAAP,CAAe,KAAf,GAAuB,SAAS,KAAT,CAAe,QAAf,EAAyB,OAAzB,EAAkC;AACvD,MAAI,YAAY,SAAZ,IAAyB,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,QAA/B,MAA6C,iBAA7C,EAAgE;AAC3F,cAAU,QAAV,CAD2F;AAE3F,eAAW,SAAX,CAF2F;GAA7F;AAIA,YAAU,WAAW,EAAX;;;AAL6C,MAQnD,QAAQ,cAAR,KAA2B,SAA3B,EACF,QAAQ,cAAR,GAAyB,IAAzB,CADF;AAEA,MAAI,QAAQ,UAAR,KAAuB,SAAvB,EACF,QAAQ,UAAR,GAAqB,IAArB,CADF;;AAGA,WAAS,cAAT,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD;;;AAGhD,QAAI,KAAK,MAAL,MAAiB,CAAC,KAAK,SAAL,EAAgB;AACpC,WAAK,IAAL,CAAU,IAAV,EADoC;AAEpC,aAAO,UAAP,CAFoC;KAAtC;;AAKA,QAAI,KAAK,QAAL,EAAJ,EAAqB;AACnB,aAAO,SAAS,IAAI,KAAJ,CAAU,cAAc,iCAAd,CAAnB,CAAP,CADmB;KAArB;;AAIA,QAAI,YAAY,KAAK,SAAL;;AAZgC,aAchD,CAAU,IAAV,GAAiB,cAAc,KAAK,QAAL,CAA/B,CAdgD;AAehD,cAAU,OAAV,GAAoB,UAAU,OAAV,CAAkB,GAAlB,CAAsB,UAAS,QAAT,EAAmB;AAC3D,aAAO,cAAc,QAAd,CAAP,CAD2D;KAAnB,CAA1C,CAfgD;;AAmBhD,QAAI,OAAO,QAAQ,UAAR,KAAuB,UAA9B,EAA0C;AAC5C,gBAAU,UAAV,GAAuB,QAAQ,UAAR,CAAmB,IAAnB,CAAvB,CAD4C;KAA9C,MAEO;AACL,gBAAU,UAAV,GAAuB,QAAQ,UAAR,CADlB;KAFP;;AAMA,QAAI,QAAQ,cAAR,EAAwB;AAC1B,gBAAU,cAAV,GAA2B,UAAU,cAAV,IAA4B,EAA5B;;;AADD,WAIrB,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,SAAL,CAAe,OAAf,CAAuB,MAAvB,EAA+B,GAAnD,EAAwD;AACtD,YAAI,CAAC,UAAU,cAAV,CAAyB,CAAzB,CAAD,EAA8B;AAChC,cAAI,aAAa,KAAK,OAAL,CAAa,UAAU,UAAV,IAAwB,KAAK,IAAL,EAAW,UAAU,OAAV,CAAkB,CAAlB,CAAhD,CAAb,CAD4B;AAEhC,cAAI;AACF,gBAAI,QAAQ,KAAR,EACF,QAAQ,GAAR,CAAY,cAAc,iCAAd,GAAkD,UAAU,OAAV,CAAkB,CAAlB,CAAlD,GAAyE,uBAAzE,CAAZ,CADF;AAEA,sBAAU,cAAV,CAAyB,CAAzB,IAA8B,SAAS,GAAG,YAAH,CAAgB,UAAhB,EAA4B,MAA5B,CAAT,CAA9B,CAHE;WAAJ,CAIE,OAAO,CAAP,EAAU;AACV,gBAAI,QAAQ,KAAR,EACF,QAAQ,IAAR,CAAa,cAAc,iCAAd,GAAkD,UAAlD,CAAb,CADF;WADA;SANJ;OADF;AAaA,UAAI,UAAU,UAAV,KAAyB,SAAzB,EAAoC;AACtC,kBAAU,UAAV,GAAuB,UAAvB,CADsC;OAAxC,MAEO,IAAI,UAAU,UAAV,KAAyB,IAAzB,EAA+B;AACxC,kBAAU,UAAV,GAAuB,SAAvB,CADwC;OAAnC;KAnBT,MAsBO;AACL,aAAO,UAAU,cAAV,CADF;KAtBP;;AA0BA,QAAI,YAAY,KAAK,QAAL,CAAc,KAAd,CAAoB,GAApB,EAAyB,GAAzB,EAAZ,CAnD4C;AAoDhD,QAAI,gBAAJ,CApDgD;;AAsDhD,YAAQ,SAAR;AACE,WAAK,KAAL;AACE,2BAAmB,UAAS,GAAT,EAAc;AAAE,iBAAO,4BAA4B,GAA5B,GAAkC,OAAlC,CAAT;SAAd,CADrB;AAEE,cAFF;AADF,WAIO,IAAL;AACE,2BAAmB,UAAS,GAAT,EAAc;AAAE,iBAAO,4BAA4B,GAA5B,GAAkC,IAAlC,CAAT;SAAd,CADrB;AAEE,cAFF;AAJF;AAQI,2BAAmB,UAAS,GAAT,EAAc;AAAE,iBAAO,EAAP,CAAF;SAAd,CADrB;AAPF,KAtDgD;;AAiEhD,QAAI,OAAJ,EAAa,sBAAb,CAjEgD;AAkEhD,QAAI,CAAC,QAAD,EAAW;;AAEb,UAAI,YAAY,IAAI,MAAJ,CAAW,KAAK,SAAL,CAAe,SAAf,CAAX,EAAsC,QAAtC,CAA+C,QAA/C,CAAZ,CAFS;AAGb,gBAAU,iBAAiB,kCAAkC,SAAlC,CAA3B,CAHa;KAAf,MAIO;AACL,UAAI,gBAAgB,KAAK,IAAL,CAAU,KAAK,IAAL,EAAW,QAArB,EAA+B,KAAK,QAAL,CAA/B,GAAgD,MAAhD;;AADf,UAGD,gBAAgB,IAAI,IAAJ,CAAS;AAC3B,aAAK,KAAK,GAAL;AACL,cAAM,KAAK,IAAL;AACN,cAAM,aAAN;AACA,kBAAU,IAAI,MAAJ,CAAW,KAAK,SAAL,CAAe,SAAf,CAAX,CAAV;AACA,cAAM;AACJ,kBAAQ,YAAY;AAAE,mBAAO,IAAP,CAAF;WAAZ;AACR,uBAAa,YAAY;AAAE,mBAAO,KAAP,CAAF;WAAZ;AACb,yBAAe,YAAY;AAAE,mBAAO,KAAP,CAAF;WAAZ;AACf,6BAAmB,YAAY;AAAE,mBAAO,KAAP,CAAF;WAAZ;AACnB,0BAAgB,YAAY;AAAE,mBAAO,KAAP,CAAF;WAAZ;AAChB,kBAAQ,YAAY;AAAE,mBAAO,KAAP,CAAF;WAAZ;AACR,oBAAU,YAAY;AAAE,mBAAO,KAAP,CAAF;WAAZ;SAPZ;OALkB,CAAhB,CAHC;AAkBL,WAAK,IAAL,CAAU,aAAV,EAlBK;;AAoBL,UAAI,wBAAwB,KAAK,QAAL,CAAc,KAAK,OAAL,CAAa,KAAK,IAAL,CAA3B,EAAuC,aAAvC,CAAxB,CApBC;;AAsBL,UAAI,QAAQ,sBAAR,EAAgC;AAClC,YAAI,SAAS,EAAT,CAD8B;AAElC,YAAI,OAAO,QAAQ,sBAAR,KAAmC,UAA1C,EAAsD;AACxD,mBAAS,QAAQ,sBAAR,CAA+B,IAA/B,CAAT,CADwD;SAA1D,MAEO;AACL,mBAAS,QAAQ,sBAAR,CADJ;SAFP;AAKA,gCAAwB,SAAO,KAAK,IAAL,CAAU,GAAV,EAAe,qBAAf,CAAP,CAPU;OAApC;AASA,gBAAU,iBAAiB,cAAc,qBAAd,CAAjB,CAAV,CA/BK;;AAiCL,UAAI,QAAQ,gBAAR,IAA4B,OAAO,QAAQ,gBAAR,KAA6B,UAApC,EAAgD;AAC9E,kBAAU,iBAAiB,QAAQ,gBAAR,CAAyB,IAAzB,CAAjB,CAAV,CAD8E;OAAhF;KArCF;;;AAlEgD,QA6G5C,QAAQ,UAAR,EACF,KAAK,QAAL,GAAgB,OAAO,MAAP,CAAc,CAAC,KAAK,QAAL,EAAe,IAAI,MAAJ,CAAW,OAAX,CAAhB,CAAd,CAAhB,CADF;;AAGA,SAAK,IAAL,CAAU,IAAV,EAhHgD;AAiHhD,eAjHgD;GAAlD;;AAoHA,SAAO,QAAQ,GAAR,CAAY,cAAZ,CAAP,CAjIuD;CAAlC;;AAoIvB,SAAS,aAAT,CAAuB,QAAvB,EAAiC;AAC/B,SAAO,SAAS,KAAT,CAAe,KAAK,GAAL,CAAf,CAAyB,IAAzB,CAA8B,GAA9B,CAAP,CAD+B;CAAjC","file":"index-compiled.js","sourcesContent":["'use strict';\nvar through = require('through2');\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar File = require('vinyl');\nvar convert = require('convert-source-map');\nvar stripBom = require('strip-bom');\n\nvar PLUGIN_NAME = 'gulp-sourcemap';\nvar urlRegex = /^(https?|webpack(-[^:]+)?):\\/\\//;\n\n/**\n * Initialize source mapping chain\n */\nmodule.exports.init = function init(options) {\n  function sourceMapInit(file, encoding, callback) {\n    /*jshint validthis:true */\n\n    // pass through if file is null or already has a source map\n    if (file.isNull() || file.sourceMap) {\n      this.push(file);\n      return callback();\n    }\n\n    if (file.isStream()) {\n      return callback(new Error(PLUGIN_NAME + '-init: Streaming not supported'));\n    }\n\n    var fileContent = file.contents.toString();\n    var sourceMap;\n\n    if (options && options.loadMaps) {\n      var sourcePath = ''; //root path for the sources in the map\n\n      // Try to read inline source map\n      sourceMap = convert.fromSource(fileContent);\n      if (sourceMap) {\n        sourceMap = sourceMap.toObject();\n        // sources in map are relative to the source file\n        sourcePath = path.dirname(file.path);\n        fileContent = convert.removeComments(fileContent);\n      } else {\n        // look for source map comment referencing a source map file\n        var mapComment = convert.mapFileCommentRegex.exec(fileContent);\n\n        var mapFile;\n        if (mapComment) {\n          mapFile = path.resolve(path.dirname(file.path), mapComment[1] || mapComment[2]);\n          fileContent = convert.removeMapFileComments(fileContent);\n        // if no comment try map file with same name as source file\n        } else {\n          mapFile = file.path + '.map';\n        }\n\n        // sources in external map are relative to map file\n        sourcePath = path.dirname(mapFile);\n\n        try {\n          sourceMap = JSON.parse(stripBom(fs.readFileSync(mapFile, 'utf8')));\n        } catch(e) {}\n      }\n\n      // fix source paths and sourceContent for imported source map\n      if (sourceMap) {\n        sourceMap.sourcesContent = sourceMap.sourcesContent || [];\n        sourceMap.sources.forEach(function(source, i) {\n          if (source.match(urlRegex)) {\n            sourceMap.sourcesContent[i] = sourceMap.sourcesContent[i] || null;\n            return;\n          }\n          var absPath = path.resolve(sourcePath, source);\n          sourceMap.sources[i] = unixStylePath(path.relative(file.base, absPath));\n\n          if (!sourceMap.sourcesContent[i]) {\n            var sourceContent = null;\n            if (sourceMap.sourceRoot) {\n              if (sourceMap.sourceRoot.match(urlRegex)) {\n                sourceMap.sourcesContent[i] = null;\n                return;\n              }\n              absPath = path.resolve(sourcePath, sourceMap.sourceRoot, source);\n            }\n\n            // if current file: use content\n            if (absPath === file.path) {\n              sourceContent = fileContent;\n\n            // else load content from file\n            } else {\n              try {\n                if (options.debug)\n                  console.log(PLUGIN_NAME + '-init: No source content for \"' + source + '\". Loading from file.');\n                sourceContent = stripBom(fs.readFileSync(absPath, 'utf8'));\n              } catch (e) {\n                if (options.debug)\n                  console.warn(PLUGIN_NAME + '-init: source file not found: ' + absPath);\n              }\n            }\n            sourceMap.sourcesContent[i] = sourceContent;\n          }\n        });\n\n        // remove source map comment from source\n        file.contents = new Buffer(fileContent, 'utf8');\n      }\n    }\n\n    if (!sourceMap) {\n      // Make an empty source map\n      sourceMap = {\n        version : 3,\n        names: [],\n        mappings: '',\n        sources: [unixStylePath(file.relative)],\n        sourcesContent: [fileContent]\n      };\n    }\n\n    sourceMap.file = unixStylePath(file.relative);\n    file.sourceMap = sourceMap;\n\n    this.push(file);\n    callback();\n  }\n\n  return through.obj(sourceMapInit);\n};\n\n/**\n * Write the source map\n *\n * @param options options to change the way the source map is written\n *\n */\nmodule.exports.write = function write(destPath, options) {\n  if (options === undefined && Object.prototype.toString.call(destPath) === '[object Object]') {\n    options = destPath;\n    destPath = undefined;\n  }\n  options = options || {};\n\n  // set defaults for options if unset\n  if (options.includeContent === undefined)\n    options.includeContent = true;\n  if (options.addComment === undefined)\n    options.addComment = true;\n\n  function sourceMapWrite(file, encoding, callback) {\n    /*jshint validthis:true */\n\n    if (file.isNull() || !file.sourceMap) {\n      this.push(file);\n      return callback();\n    }\n\n    if (file.isStream()) {\n      return callback(new Error(PLUGIN_NAME + '-write: Streaming not supported'));\n    }\n\n    var sourceMap = file.sourceMap;\n    // fix paths if Windows style paths\n    sourceMap.file = unixStylePath(file.relative);\n    sourceMap.sources = sourceMap.sources.map(function(filePath) {\n      return unixStylePath(filePath);\n    });\n\n    if (typeof options.sourceRoot === 'function') {\n      sourceMap.sourceRoot = options.sourceRoot(file);\n    } else {\n      sourceMap.sourceRoot = options.sourceRoot;\n    }\n\n    if (options.includeContent) {\n      sourceMap.sourcesContent = sourceMap.sourcesContent || [];\n\n      // load missing source content\n      for (var i = 0; i < file.sourceMap.sources.length; i++) {\n        if (!sourceMap.sourcesContent[i]) {\n          var sourcePath = path.resolve(sourceMap.sourceRoot || file.base, sourceMap.sources[i]);\n          try {\n            if (options.debug)\n              console.log(PLUGIN_NAME + '-write: No source content for \"' + sourceMap.sources[i] + '\". Loading from file.');\n            sourceMap.sourcesContent[i] = stripBom(fs.readFileSync(sourcePath, 'utf8'));\n          } catch (e) {\n            if (options.debug)\n              console.warn(PLUGIN_NAME + '-write: source file not found: ' + sourcePath);\n          }\n        }\n      }\n      if (sourceMap.sourceRoot === undefined) {\n        sourceMap.sourceRoot = '/source/';\n      } else if (sourceMap.sourceRoot === null) {\n        sourceMap.sourceRoot = undefined;\n      }\n    } else {\n      delete sourceMap.sourcesContent;\n    }\n\n    var extension = file.relative.split('.').pop();\n    var commentFormatter;\n\n    switch (extension) {\n      case 'css':\n        commentFormatter = function(url) { return \"\\n/*# sourceMappingURL=\" + url + \" */\\n\"; };\n        break;\n      case 'js':\n        commentFormatter = function(url) { return \"\\n//# sourceMappingURL=\" + url + \"\\n\"; };\n        break;\n      default:\n        commentFormatter = function(url) { return \"\"; };\n    }\n\n    var comment, sourceMappingURLPrefix;\n    if (!destPath) {\n      // encode source map into comment\n      var base64Map = new Buffer(JSON.stringify(sourceMap)).toString('base64');\n      comment = commentFormatter('data:application/json;base64,' + base64Map);\n    } else {\n      var sourceMapPath = path.join(file.base, destPath, file.relative) + '.map';\n      // add new source map file to stream\n      var sourceMapFile = new File({\n        cwd: file.cwd,\n        base: file.base,\n        path: sourceMapPath,\n        contents: new Buffer(JSON.stringify(sourceMap)),\n        stat: {\n          isFile: function () { return true; },\n          isDirectory: function () { return false; },\n          isBlockDevice: function () { return false; },\n          isCharacterDevice: function () { return false; },\n          isSymbolicLink: function () { return false; },\n          isFIFO: function () { return false; },\n          isSocket: function () { return false; }\n        }\n      });\n      this.push(sourceMapFile);\n\n      var sourceMapPathRelative = path.relative(path.dirname(file.path), sourceMapPath);\n\n      if (options.sourceMappingURLPrefix) {\n        var prefix = '';\n        if (typeof options.sourceMappingURLPrefix === 'function') {\n          prefix = options.sourceMappingURLPrefix(file);\n        } else {\n          prefix = options.sourceMappingURLPrefix;\n        }\n        sourceMapPathRelative = prefix+path.join('/', sourceMapPathRelative);\n      }\n      comment = commentFormatter(unixStylePath(sourceMapPathRelative));\n\n      if (options.sourceMappingURL && typeof options.sourceMappingURL === 'function') {\n        comment = commentFormatter(options.sourceMappingURL(file));\n      }\n    }\n\n    // append source map comment\n    if (options.addComment)\n      file.contents = Buffer.concat([file.contents, new Buffer(comment)]);\n\n    this.push(file);\n    callback();\n  }\n\n  return through.obj(sourceMapWrite);\n};\n\nfunction unixStylePath(filePath) {\n  return filePath.split(path.sep).join('/');\n}\n"]}