{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\n\nvar _hasOwn = require('has-own');\n\nvar _hasOwn2 = _interopRequireDefault(_hasOwn);\n\nvar _postcss = require('postcss');\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction canonical(obj) {\n    return function recurse(key) {\n        if ((0, _hasOwn2.default)(key, obj) && obj[key] !== key) {\n            return recurse(obj[key]);\n        }\n        return key;\n    };\n}\n\nfunction mergeAtRules(css, pairs) {\n    pairs.forEach(function (pair) {\n        pair.cache = [];\n        pair.replacements = [];\n        pair.decls = [];\n    });\n\n    var relevant = undefined;\n\n    css.walk(function (node) {\n        if (node.type === 'atrule') {\n            relevant = pairs.filter(function (pair) {\n                return pair.atrule.test(node.name);\n            })[0];\n            if (!relevant) {\n                return;\n            }\n            if (relevant.cache.length < 1) {\n                relevant.cache.push(node);\n                return;\n            } else {\n                var _ret = function () {\n                    var toString = node.nodes.toString();\n                    relevant.cache.forEach(function (cached) {\n                        if (cached.name === node.name && cached.nodes.toString() === toString) {\n                            cached.remove();\n                            relevant.replacements[cached.params] = node.params;\n                        }\n                    });\n                    relevant.cache.push(node);\n                    return {\n                        v: undefined\n                    };\n                }();\n\n                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n            }\n        }\n        if (node.type === 'decl') {\n            relevant = pairs.filter(function (pair) {\n                return pair.decl.test(node.prop);\n            })[0];\n            if (!relevant) {\n                return;\n            }\n            relevant.decls.push(node);\n        }\n    });\n\n    pairs.forEach(function (pair) {\n        var canon = canonical(pair.replacements);\n        pair.decls.forEach(function (decl) {\n            decl.value = (0, _postcssValueParser2.default)(decl.value).walk(function (node) {\n                if (node.type === 'word') {\n                    node.value = canon(node.value);\n                }\n                if (node.type === 'space') {\n                    node.value = ' ';\n                }\n                if (node.type === 'div') {\n                    node.before = node.after = '';\n                }\n            }).toString();\n        });\n    });\n}\n\nexports.default = (0, _postcss.plugin)('postcss-merge-idents', function () {\n    return function (css) {\n        mergeAtRules(css, [{\n            atrule: /keyframes/,\n            decl: /animation/\n        }, {\n            atrule: /counter-style/,\n            decl: /(list-style|system)/\n        }]);\n    };\n});\nmodule.exports = exports['default'];"]}