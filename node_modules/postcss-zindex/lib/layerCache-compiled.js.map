{"version":3,"sources":["layerCache.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,OAAR,CAAP;;AAEJ,SAAS,UAAT,GAAuB;AACnB,QAAI,EAAE,gBAAgB,UAAhB,CAAF,EAA+B;AAC/B,eAAO,IAAI,UAAJ,EAAP,CAD+B;KAAnC;AAGA,SAAK,OAAL,GAAe,EAAf,CAJmB;CAAvB;;AAOA,SAAS,aAAT,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B;AAC1B,WAAO,IAAI,CAAJ,CADmB;CAA9B;;AAIA,SAAS,SAAT,CAAoB,KAApB,EAA2B,KAA3B,EAAkC;AAC9B,WAAO;AACH,cAAM,KAAN;AACA,YAAI,QAAQ,CAAR;KAFR,CAD8B;CAAlC;;AAOA,WAAW,SAAX,CAAqB,UAArB,GAAkC,UAAU,KAAV,EAAiB;AAC/C,QAAI,SAAS,KAAK,OAAL,CAAa,MAAb,CADkC;AAE/C,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,MAAJ,EAAY,EAAE,CAAF,EAAK;AAC7B,YAAI,KAAK,OAAL,CAAa,CAAb,EAAgB,IAAhB,KAAyB,KAAzB,EAAgC;AAChC,mBAAO,KAAK,OAAL,CAAa,CAAb,CAAP,CADgC;SAApC;KADJ;AAKA,WAAO,KAAP,CAP+C;CAAjB;;AAUlC,WAAW,SAAX,CAAqB,cAArB,GAAsC,YAAY;AAC9C,QAAI,SAAS,KAAK,KAAK,OAAL,CAAL,CACR,IADQ,CACH,aADG,EAER,GAFQ,CAEJ,SAFI,CAAT,CAD0C;;AAK9C,SAAK,OAAL,GAAe,MAAf,CAL8C;CAAZ;;AAQtC,WAAW,SAAX,CAAqB,QAArB,GAAgC,UAAU,KAAV,EAAiB;AAC7C,QAAI,cAAc,SAAS,KAAT,EAAgB,EAAhB,CAAd;;AADyC,QAGzC,CAAC,WAAD,IAAgB,cAAc,CAAd,EAAiB;AACjC,eADiC;KAArC;AAGA,SAAK,OAAL,CAAa,IAAb,CAAkB,WAAlB,EAN6C;CAAjB;;AAShC,WAAW,SAAX,CAAqB,QAArB,GAAgC,UAAU,KAAV,EAAiB;AAC7C,QAAI,cAAc,SAAS,KAAT,EAAgB,EAAhB,CAAd,CADyC;AAE7C,QAAI,QAAQ,KAAK,UAAL,CAAgB,WAAhB,CAAR,CAFyC;AAG7C,WAAO,SAAS,MAAM,EAAN,IAAY,KAArB,CAHsC;CAAjB;;AAMhC,OAAO,OAAP,GAAiB,UAAjB","file":"layerCache-compiled.js","sourcesContent":["'use strict';\n\nvar uniq = require('uniqs');\n\nfunction LayerCache () {\n    if (!(this instanceof LayerCache)) {\n        return new LayerCache();\n    }\n    this._values = [];\n}\n\nfunction sortAscending (a, b) {\n    return a - b;\n}\n\nfunction mapValues (value, index) {\n    return {\n        from: value,\n        to: index + 1\n    };\n}\n\nLayerCache.prototype._findValue = function (value) {\n    var length = this._values.length;\n    for (var i = 0; i < length; ++i) {\n        if (this._values[i].from === value) {\n            return this._values[i];\n        }\n    }\n    return false;\n};\n\nLayerCache.prototype.optimizeValues = function () {\n    var values = uniq(this._values)\n        .sort(sortAscending)\n        .map(mapValues);\n\n    this._values = values;\n};\n\nLayerCache.prototype.addValue = function (value) {\n    var parsedValue = parseInt(value, 10);\n    // pass only valid values\n    if (!parsedValue || parsedValue < 0) {\n        return;\n    }\n    this._values.push(parsedValue);\n};\n\nLayerCache.prototype.getValue = function (value) {\n    var parsedValue = parseInt(value, 10);\n    var match = this._findValue(parsedValue);\n    return match && match.to || value;\n};\n\nmodule.exports = LayerCache;\n"]}