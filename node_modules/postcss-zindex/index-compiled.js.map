{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,UAAU,QAAQ,SAAR,CAAV;;AAEJ,OAAO,OAAP,GAAiB,QAAQ,MAAR,CAAe,gBAAf,EAAiC,YAAY;AAC1D,WAAO,UAAU,GAAV,EAAe;AAClB,YAAI,QAAQ,QAAQ,kBAAR,GAAR,CADc;AAElB,YAAI,QAAQ,EAAR,CAFc;AAGlB,YAAI,QAAQ,KAAR;;AAHc,WAKlB,CAAI,SAAJ,CAAc,SAAd,EAAyB,UAAU,IAAV,EAAgB;AACrC,gBAAI,KAAJ,EAAW;AACP,uBADO;aAAX;;;AADqC,gBAMjC,KAAK,KAAL,CAAW,CAAX,MAAkB,GAAlB,EAAuB;AACvB,wBAAQ,IAAR,CADuB;AAEvB,uBAFuB;aAA3B;AAIA,kBAAM,IAAN,CAAW,IAAX,EAVqC;AAWrC,kBAAM,QAAN,CAAe,KAAK,KAAL,CAAf,CAXqC;SAAhB,CAAzB;;;AALkB,YAoBd,KAAJ,EAAW;AACP,mBADO;SAAX;;AAIA,cAAM,cAAN;;;AAxBkB,aA2BlB,CAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;;;AAG1B,gBAAI,QAAQ,MAAM,QAAN,CAAe,KAAK,KAAL,CAAvB,CAHsB;AAI1B,iBAAK,KAAL,GAAa,OAAO,KAAP,CAAb,CAJ0B;SAAhB,CAAd,CA3BkB;KAAf,CADmD;CAAZ,CAAlD","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar postcss = require('postcss');\n\nmodule.exports = postcss.plugin('postcss-zindex', function () {\n    return function (css) {\n        var cache = require('./lib/layerCache')();\n        var nodes = [];\n        var abort = false;\n        // First pass; cache all z indexes\n        css.walkDecls('z-index', function (decl) {\n            if (abort) {\n                return;\n            }\n            // Check that no negative values exist. Rebasing is only\n            // safe if all indices are positive numbers.\n            if (decl.value[0] === '-') {\n                abort = true;\n                return;\n            }\n            nodes.push(decl);\n            cache.addValue(decl.value);\n        });\n        \n        // Abort rebasing altogether due to z-index being found\n        if (abort) {\n            return;\n        }\n\n        cache.optimizeValues();\n\n        // Second pass; optimize\n        nodes.forEach(function (decl) {\n            // Need to coerce to string so that the\n            // AST is updated correctly\n            var value = cache.getValue(decl.value);\n            decl.value = String(value);\n        });\n    };\n});\n"]}