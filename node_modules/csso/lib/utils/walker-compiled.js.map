{"version":3,"sources":["walker.js"],"names":[],"mappings":"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","file":"walker-compiled.js","sourcesContent":["var offset;\nvar process;\n\nfunction walk(token, parent, stack) {\n    process(token, parent, stack);\n    stack.push(token);\n\n    switch (token[offset + 0]) {\n        case 'simpleselector':\n        case 'dimension':\n        case 'selector':\n        case 'property':\n        case 'value':\n        case 'filterv':\n        case 'progid':\n        case 'ruleset':\n        case 'atruleb':\n        case 'atrulerq':\n        case 'atrulers':\n        case 'stylesheet':\n        case 'attrib':\n        case 'important':\n        case 'block':\n        case 'atrules':\n        case 'uri':\n            for (var i = offset + 1; i < token.length; i++) {\n                walk(token[i], token, stack);\n            }\n            break;\n\n        case 'percentage':\n        case 'clazz':\n        case 'atkeyword':\n        case 'pseudoe':\n        case 'pseudoc':\n            walk(token[offset + 1], token, stack);\n            break;\n\n        case 'declaration':\n        case 'filter':\n            walk(token[offset + 1], token, stack);\n            walk(token[offset + 2], token, stack);\n            break;\n\n        case 'atruler':\n            walk(token[offset + 1], token, stack);\n            walk(token[offset + 2], token, stack);\n            walk(token[offset + 3], token, stack);\n            break;\n\n        case 'braces':\n            for (var i = offset + 3; i < token.length; i++) {\n                walk(token[i], token, stack);\n            }\n            break;\n\n        case 'nthselector':\n            process(token[offset + 1], token, stack);\n            for (var i = offset + 2; i < token.length; i++) {\n                walk(token[i], token, stack);\n            }\n            break;\n\n        case 'funktion':\n            process(token[offset + 1], token, stack);\n            process(token[offset + 2], token, stack);\n\n            token = token[offset + 2];\n            stack.push(token);\n            for (var i = offset + 1; i < token.length; i++) {\n                walk(token[i], token, stack);\n            }\n            stack.pop();\n            break;\n    }\n\n    stack.pop();\n}\n\nmodule.exports = function(tree, fn, hasInfo) {\n    offset = hasInfo ? 1 : 0;\n\n    if (typeof fn === 'function') {\n        process = fn;\n\n        walk(tree, null, []);\n    }\n};\n"]}