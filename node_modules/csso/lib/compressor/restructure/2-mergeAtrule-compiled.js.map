{"version":3,"sources":["2-mergeAtrule.js"],"names":[],"mappings":"AAAA,IAAI,yBAAyB,QAAQ,gBAAR,EAA0B,UAA1B;;AAE7B,SAAS,WAAT,CAAqB,IAArB,EAA2B;AACvB,WAAO,KAAK,IAAL,KAAc,QAAd,IAA0B,KAAK,IAAL,KAAc,OAAd,CADV;CAA3B;;AAIA,SAAS,aAAT,CAAuB,IAAvB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC;AACrC,QAAI,CAAC,YAAY,IAAZ,CAAD,EAAoB;AACpB,eADoB;KAAxB;;AAIA,QAAI,OAAO,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,IAAV,CALa;;AAOrC,QAAI,CAAC,IAAD,IAAS,CAAC,YAAY,IAAZ,CAAD,EAAoB;AAC7B,eAD6B;KAAjC;;;AAPqC,QAYjC,KAAK,UAAL,CAAgB,EAAhB,KAAuB,KAAK,UAAL,CAAgB,EAAhB,EAAoB;AAC3C,aAAK,KAAL,CAAW,KAAX,CAAiB,UAAjB,CAA4B,KAAK,KAAL,CAAW,KAAX,CAA5B,CAD2C;AAE3C,aAAK,IAAL,GAAY;AACR,qBAAS,KAAK,IAAL;AACT,oBAAQ,KAAK,IAAL;SAFZ,CAF2C;AAM3C,aAAK,MAAL,CAAY,IAAZ,EAN2C;KAA/C;CAZJ;;AAsBA,OAAO,OAAP,GAAiB,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACxC,2BAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B;AACnD,YAAI,KAAK,IAAL,KAAc,QAAd,EAAwB;AACxB,0BAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EADwB;SAA5B;KADwB,CAA5B,CADwC;CAA3B","file":"2-mergeAtrule-compiled.js","sourcesContent":["var internalWalkRulesRight = require('../ast/walk.js').rulesRight;\n\nfunction isMediaRule(node) {\n    return node.type === 'Atrule' && node.name === 'media';\n}\n\nfunction processAtrule(node, item, list) {\n    if (!isMediaRule(node)) {\n        return;\n    }\n\n    var prev = item.prev && item.prev.data;\n\n    if (!prev || !isMediaRule(prev)) {\n        return;\n    }\n\n    // merge @media with same query\n    if (node.expression.id === prev.expression.id) {\n        prev.block.rules.appendList(node.block.rules);\n        prev.info = {\n            primary: prev.info,\n            merged: node.info\n        };\n        list.remove(item);\n    }\n};\n\nmodule.exports = function rejoinAtrule(ast) {\n    internalWalkRulesRight(ast, function(node, item, list) {\n        if (node.type === 'Atrule') {\n            processAtrule(node, item, list);\n        }\n    });\n};\n"]}