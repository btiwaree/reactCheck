{"version":3,"sources":["processSelector.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,wBAAR,CAAZ;AACJ,IAAI,cAAc,QAAQ,kBAAR,CAAd;;AAEJ,IAAI,0BAA0B;AAC1B,oBAAgB,IAAhB;AACA,kBAAc,IAAd;AACA,aAAS,IAAT;AACA,cAAU,IAAV;CAJA;AAMJ,IAAI,yBAAyB;AACzB,YAAQ,IAAR;AACA,eAAW,IAAX;AACA,aAAS,IAAT;AACA,cAAU,IAAV;AACA,oBAAgB,IAAhB;AACA,kBAAc,IAAd;AACA,aAAS,IAAT;AACA,cAAU,IAAV;CARA;;AAWJ,OAAO,OAAP,GAAiB,SAAS,MAAT,CAAgB,IAAhB,EAAsB,SAAtB,EAAiC;AAC9C,QAAI,UAAU,OAAO,MAAP,CAAc,IAAd,CAAV,CAD0C;AAE9C,QAAI,YAAY,KAAZ,CAF0C;;AAI9C,SAAK,QAAL,CAAc,SAAd,CAAwB,IAAxB,CAA6B,UAAS,cAAT,EAAyB;AAClD,YAAI,UAAU,GAAV,CAD8C;AAElD,YAAI,QAAQ,CAAR,CAF8C;;AAIlD,uBAAe,QAAf,CAAwB,IAAxB,CAA6B,UAAS,IAAT,EAAe;AACxC,oBAAQ,KAAK,IAAL;AACJ,qBAAK,OAAL;AACI,wBAAI,aAAa,UAAU,MAAV,EAAkB;AAC/B,4BAAI,aAAa,UAAU,MAAV,CAAiB,KAAK,IAAL,CAAjB,IAA+B,CAA/B,CADc;;AAG/B,4BAAI,UAAU,CAAV,IAAe,eAAe,KAAf,EAAsB;AACrC,kCAAM,IAAI,KAAJ,CAAU,wDAAwD,UAAU,cAAV,CAAxD,CAAhB,CADqC;yBAAzC;;AAIA,gCAAQ,UAAR,CAP+B;qBAAnC;AASA,0BAVJ;;AADJ,qBAaS,aAAL;AACI,wBAAI,CAAC,uBAAuB,cAAvB,CAAsC,KAAK,IAAL,CAAvC,EAAmD;AACnD,gCAAQ,KAAK,IAAL,CAAR,GAAqB,IAArB,CADmD;AAEnD,oCAAY,IAAZ,CAFmD;qBAAvD;AAIA,0BALJ;;AAbJ,qBAoBS,eAAL;AACI,wBAAI,CAAC,wBAAwB,cAAxB,CAAuC,KAAK,IAAL,CAAxC,EAAoD;AACpD,gCAAQ,KAAK,IAAL,CAAR,GAAqB,IAArB,CADoD;AAEpD,oCAAY,IAAZ,CAFoD;qBAAxD;AAIA,0BALJ;;AApBJ,qBA2BS,kBAAL;AACI,4BAAQ,KAAK,IAAL,CAAR,GAAqB,IAArB,CADJ;AAEI,gCAAY,IAAZ,CAFJ;AAGI,0BAHJ;;AA3BJ,qBAgCS,UAAL;AACI,4BAAQ,GAAR,GAAc,IAAd,CADJ;AAEI,gCAAY,IAAZ,CAFJ;AAGI,0BAHJ;;AAhCJ,qBAqCS,YAAL;AACI,8BAAU,KAAK,IAAL,CADd;AAEI,0BAFJ;;AArCJ,qBAyCS,YAAL;AACI,8BAAU,GAAV,CADJ;AAEI,0BAFJ;AAzCJ,aADwC;SAAf,CAA7B,CAJkD;;AAoDlD,uBAAe,EAAf,GAAoB,UAAU,cAAV,CAApB,CApDkD;AAqDlD,uBAAe,aAAf,GAA+B,YAAY,cAAZ,EAA4B,QAA5B,EAA/B,CArDkD;;AAuDlD,YAAI,KAAJ,EAAW;AACP,2BAAe,aAAf,IAAgC,MAAM,KAAN,CADzB;SAAX;;AAIA,YAAI,YAAY,GAAZ,EAAiB;AACjB,2BAAe,aAAf,IAAgC,MAAM,OAAN,CADf;SAArB;KA3DyB,CAA7B,CAJ8C;;AAoE9C,QAAI,SAAJ,EAAe;AACX,aAAK,eAAL,GAAuB,OAAO,IAAP,CAAY,OAAZ,EAAqB,IAArB,GAA4B,IAA5B,CAAiC,GAAjC,CAAvB,CADW;KAAf;CApEa","file":"processSelector-compiled.js","sourcesContent":["var translate = require('../../ast/translate.js');\nvar specificity = require('./specificity.js');\n\nvar nonFreezePseudoElements = {\n    'first-letter': true,\n    'first-line': true,\n    'after': true,\n    'before': true\n};\nvar nonFreezePseudoClasses = {\n    'link': true,\n    'visited': true,\n    'hover': true,\n    'active': true,\n    'first-letter': true,\n    'first-line': true,\n    'after': true,\n    'before': true\n};\n\nmodule.exports = function freeze(node, usageData) {\n    var pseudos = Object.create(null);\n    var hasPseudo = false;\n\n    node.selector.selectors.each(function(simpleSelector) {\n        var tagName = '*';\n        var scope = 0;\n\n        simpleSelector.sequence.some(function(node) {\n            switch (node.type) {\n                case 'Class':\n                    if (usageData && usageData.scopes) {\n                        var classScope = usageData.scopes[node.name] || 0;\n\n                        if (scope !== 0 && classScope !== scope) {\n                            throw new Error('Selector can\\'t has classes from different scopes: ' + translate(simpleSelector));\n                        }\n\n                        scope = classScope;\n                    }\n                    break;\n\n                case 'PseudoClass':\n                    if (!nonFreezePseudoClasses.hasOwnProperty(node.name)) {\n                        pseudos[node.name] = true;\n                        hasPseudo = true;\n                    }\n                    break;\n\n                case 'PseudoElement':\n                    if (!nonFreezePseudoElements.hasOwnProperty(node.name)) {\n                        pseudos[node.name] = true;\n                        hasPseudo = true;\n                    }\n                    break;\n\n                case 'FunctionalPseudo':\n                    pseudos[node.name] = true;\n                    hasPseudo = true;\n                    break;\n\n                case 'Negation':\n                    pseudos.not = true;\n                    hasPseudo = true;\n                    break;\n\n                case 'Identifier':\n                    tagName = node.name;\n                    break;\n\n                case 'Combinator':\n                    tagName = '*';\n                    break;\n            }\n        });\n\n        simpleSelector.id = translate(simpleSelector);\n        simpleSelector.compareMarker = specificity(simpleSelector).toString();\n\n        if (scope) {\n            simpleSelector.compareMarker += ':' + scope;\n        }\n\n        if (tagName !== '*') {\n            simpleSelector.compareMarker += ',' + tagName;\n        }\n    });\n\n    if (hasPseudo) {\n        node.pseudoSignature = Object.keys(pseudos).sort().join(',');\n    }\n};\n"]}