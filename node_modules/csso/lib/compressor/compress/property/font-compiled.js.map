{"version":3,"sources":["font.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AACzC,QAAI,OAAO,KAAK,QAAL,CAD8B;;AAGzC,SAAK,SAAL,CAAe,UAAS,IAAT,EAAe,IAAf,EAAqB;AAChC,YAAI,KAAK,IAAL,KAAc,YAAd,EAA4B;AAC5B,gBAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AACtB,qBAAK,IAAL,GAAY;AACR,0BAAM,QAAN;AACA,0BAAM,KAAK,IAAL;AACN,2BAAO,KAAP;iBAHJ,CADsB;aAA1B,MAMO,IAAI,KAAK,IAAL,KAAc,QAAd,EAAwB;AAC/B,oBAAI,OAAO,KAAK,IAAL,CADoB;;AAG/B,oBAAI,QAAQ,KAAK,IAAL,CAAU,IAAV,KAAmB,UAAnB,IAAiC,KAAK,IAAL,CAAU,KAAV,KAAoB,GAApB,EAAyB;AAClE,yBAAK,MAAL,CAAY,IAAZ,EADkE;iBAAtE;;AAIA,qBAAK,MAAL,CAAY,IAAZ,EAP+B;aAA5B,MAQA,IAAI,KAAK,IAAL,KAAc,QAAd,EAAwB;AAC/B,oBAAI,OAAO,KAAK,IAAL,CADoB;;AAG/B,oBAAI,CAAC,IAAD,IAAS,KAAK,IAAL,CAAU,IAAV,KAAmB,UAAnB,EAA+B;AACxC,yBAAK,MAAL,CAAY,IAAZ,EADwC;iBAA5C;aAHG;SAfX;KADW,CAAf;;;AAHyC,QA8BzC,CAAK,IAAL,CAAU,UAAS,IAAT,EAAe,IAAf,EAAqB;AAC3B,YAAI,KAAK,IAAL,KAAc,OAAd,EAAuB;AACvB,gBAAI,CAAC,KAAK,IAAL,IAAa,CAAC,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,KAAwB,OAAxB,EAAiC;AAC7D,qBAAK,MAAL,CAAY,IAAZ,EAD6D;aAAjE;SADJ;KADM,CAAV,CA9ByC;;AAsCzC,QAAI,KAAK,OAAL,EAAJ,EAAoB;AAChB,aAAK,MAAL,CAAY,KAAK,UAAL,CAAgB;AACxB,kBAAM,YAAN;AACA,kBAAM,QAAN;SAFQ,CAAZ,EADgB;KAApB;CAtCa","file":"font-compiled.js","sourcesContent":["module.exports = function compressFont(node) {\n    var list = node.sequence;\n\n    list.eachRight(function(node, item) {\n        if (node.type === 'Identifier') {\n            if (node.name === 'bold') {\n                item.data = {\n                    type: 'Number',\n                    info: node.info,\n                    value: '700'\n                };\n            } else if (node.name === 'normal') {\n                var prev = item.prev;\n\n                if (prev && prev.data.type === 'Operator' && prev.data.value === '/') {\n                    this.remove(prev);\n                }\n\n                this.remove(item);\n            } else if (node.name === 'medium') {\n                var next = item.next;\n\n                if (!next || next.data.type !== 'Operator') {\n                    this.remove(item);\n                }\n            }\n        }\n    });\n\n    // remove redundant spaces\n    list.each(function(node, item) {\n        if (node.type === 'Space') {\n            if (!item.prev || !item.next || item.next.data.type === 'Space') {\n                this.remove(item);\n            }\n        }\n    });\n\n    if (list.isEmpty()) {\n        list.insert(list.createItem({\n            type: 'Identifier',\n            name: 'normal'\n        }));\n    }\n};\n"]}