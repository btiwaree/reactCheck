{"version":3,"sources":["internalToGonzales.js"],"names":[],"mappings":"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","file":"internalToGonzales-compiled.js","sourcesContent":["function eachDelim(node, type, itemsProperty, delimeter) {\n    var result = [node.info, type];\n    var list = node[itemsProperty];\n\n    list.each(function(data, item) {\n        result.push(toGonzales(data));\n\n        if (item.next) {\n            result.push(delimeter.slice());\n        }\n    });\n\n    return result;\n}\n\nfunction buildArguments(body, args) {\n    args.each(function(data, item) {\n        body.push.apply(body, data.sequence.map(toGonzales));\n        if (item.next) {\n            body.push([{}, 'operator', ',']);\n        }\n    });\n}\n\nfunction toGonzales(node) {\n    switch (node.type) {\n        case 'StyleSheet':\n            return [\n                node.info || {},\n                'stylesheet'\n            ].concat(node.rules.map(toGonzales).filter(Boolean));\n\n        case 'Atrule':\n            var type = 'atruler';\n\n            if (!node.block) {\n                type = 'atrules';\n            } else {\n                if (node.block.type === 'Block') {\n                    type = 'atruleb';\n                }\n            }\n\n            var result = [\n                node.info,\n                type,\n                [{}, 'atkeyword', [{}, 'ident', node.name]]\n            ];\n\n            if (node.expression && !node.expression.sequence.isEmpty()) {\n                if (type === 'atruler') {\n                    result.push([\n                        node.expression.info,\n                        'atrulerq',\n                        [{}, 's', ' ']\n                    ].concat(node.expression.sequence.map(toGonzales)));\n                } else {\n                    result.push([{}, 's', ' ']);\n                    result = result.concat(node.expression.sequence.map(toGonzales));\n                }\n            } else {\n                if (type === 'atruler') {\n                    result.push([\n                        {},\n                        'atrulerq'\n                    ]);\n                }\n            }\n\n            if (node.block) {\n                if (type === 'atruler') {\n                    result.push([\n                        node.block.info,\n                        'atrulers'\n                    ].concat(node.block.rules.map(toGonzales)));\n                } else {\n                    result.push(toGonzales(node.block));\n                }\n            }\n\n            return result;\n\n        case 'Ruleset':\n            return [\n                node.info,\n                'ruleset',\n                toGonzales(node.selector),\n                toGonzales(node.block)\n            ];\n\n        case 'Selector':\n            return eachDelim(node, 'selector', 'selectors', [{}, 'delim']);\n\n        case 'SimpleSelector':\n            var result = [\n                node.info,\n                'simpleselector'\n            ];\n\n            node.sequence.each(function(data) {\n                var node = toGonzales(data);\n\n                // add extra spaces around /deep/ combinator since comment beginning/ending may to be produced\n                if (data.type === 'Combinator' && data.name === '/deep/') {\n                    result.push(\n                        [{}, 's', ' '],\n                        node,\n                        [{}, 's', ' ']\n                    );\n                } else {\n                    result.push(node);\n                }\n            });\n\n            return result;\n\n        case 'Negation':\n            var body = eachDelim(node, 'functionBody', 'sequence', [{}, 'delim']);\n\n            return [\n                node.info,\n                'pseudoc',\n                [\n                    {},\n                    'funktion',\n                    [{}, 'ident', 'not'],\n                    body\n                ]\n            ];\n\n        case 'Attribute':\n            var result = [\n                node.info,\n                'attrib'\n            ];\n\n            result.push([{}, 'ident', node.name.name]);\n\n            if (node.operator !== null) {\n                result.push([{}, 'attrselector', node.operator]);\n\n                if (node.value !== null) {\n                    result.push(toGonzales(node.value));\n\n                    if (node.flags !== null) {\n                        if (node.value.type !== 'String') {\n                            result.push([{}, 's', ' ']);\n                        }\n\n                        result.push([{}, 'attribFlags', node.flags]);\n                    }\n                }\n            }\n            return result;\n\n        case 'FunctionalPseudo':\n            if (/^nth-/.test(node.name)) {\n                var result = [\n                    node.info,\n                    'nthselector',\n                    [{}, 'ident', node.name]\n                ];\n\n                buildArguments(result, node.arguments);\n\n                return result;\n            } else {\n                var body = [\n                    {},\n                    'functionBody'\n                ];\n\n                buildArguments(body, node.arguments);\n\n                return [\n                    node.info,\n                    'pseudoc',\n                    [\n                        {},\n                        'funktion',\n                        [{}, 'ident', node.name],\n                        body\n                    ]\n                ];\n            }\n\n        case 'Function':\n            var body = [\n                {},\n                'functionBody'\n            ];\n\n            buildArguments(body, node.arguments);\n\n            if (node.name === 'expression') {\n                return [{}, 'functionExpression', body[2][2]];\n            }\n\n            return [\n                node.info,\n                'funktion',\n                [{}, 'ident', node.name],\n                body\n            ];\n\n        case 'Block':\n            return eachDelim(node, 'block', 'declarations', [{}, 'decldelim']);\n\n        case 'Declaration':\n            return [\n                node.info,\n                !node.value.sequence.isEmpty() &&\n                node.value.sequence.first().type === 'Progid' &&\n                /(-[a-z]+-|[\\*-_])?filter$/.test(node.property.name)\n                    ? 'filter'\n                    : 'declaration',\n                toGonzales(node.property),\n                toGonzales(node.value)\n            ];\n\n        case 'Braces':\n            return [\n                node.info,\n                'braces',\n                node.open,\n                node.close\n            ].concat(node.sequence.map(toGonzales));\n\n        case 'Value':\n            var result = [\n                node.info,\n                !node.sequence.isEmpty() &&\n                node.sequence.first().type === 'Progid'\n                    ? 'filterv'\n                    : 'value'\n            ].concat(node.sequence.map(toGonzales));\n\n            if (node.important) {\n                result.push([{}, 'important']);\n            }\n\n            return result;\n\n        case 'Url':\n            return [node.info, 'uri', toGonzales(node.value)];\n\n        case 'Progid':\n            return [node.info, 'progid', toGonzales(node.value)];\n\n        case 'Property':\n            return [node.info, 'property', [{}, 'ident', node.name]];\n\n        case 'Combinator':\n            return node.name === ' '\n                ? [node.info, 's', node.name]\n                : [node.info, 'combinator', node.name];\n\n        case 'Identifier':\n            return [node.info, 'ident', node.name];\n\n        case 'PseudoElement':\n            return [node.info, 'pseudoe', [{}, 'ident', node.name]];\n\n        case 'PseudoClass':\n            return [node.info, 'pseudoc', [{}, 'ident', node.name]];\n\n        case 'Class':\n            return [node.info, 'clazz', [{}, 'ident', node.name]];\n\n        case 'Id':\n            return [node.info, 'shash', node.name];\n\n        case 'Nth':\n            return [node.info, 'nth', node.value];\n\n        case 'Hash':\n            return [node.info, 'vhash', node.value];\n\n        case 'Number':\n            return [node.info, 'number', node.value];\n\n        case 'Dimension':\n            return [\n                node.info,\n                'dimension',\n                [{}, 'number', node.value],\n                [{}, 'ident', node.unit]\n            ];\n\n        case 'Operator':\n            return [\n                node.info,\n                node.value === '+' || node.value === '-' ? 'unary' : 'operator',\n                node.value\n            ];\n\n        case 'Raw':\n            return [node.info, node.value && /\\S/.test(node.value) ? 'raw' : 's', node.value];\n\n        case 'String':\n            return [node.info, 'string', node.value];\n\n        case 'Percentage':\n            return [node.info, 'percentage', [{}, 'number', node.value]];\n\n        case 'Space':\n            return [node.info, 's', ' '];\n\n        case 'Comment':\n            return [node.info, 'comment', node.value];\n\n        // nothing to do\n        // case 'Argument':\n\n        default:\n            throw new Error('Unknown node type: ' + node.type);\n    }\n}\n\nmodule.exports = toGonzales;\n"]}