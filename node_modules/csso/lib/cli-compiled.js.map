{"version":3,"sources":["cli.js"],"names":[],"mappings":"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","file":"cli-compiled.js","sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar cli = require('clap');\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar csso = require('./index.js');\n\nfunction readFromStream(stream, minify) {\n    var buffer = [];\n\n    // FIXME: don't chain until node.js 0.10 drop, since setEncoding isn't chainable in 0.10\n    stream.setEncoding('utf8');\n    stream\n        .on('data', function(chunk) {\n            buffer.push(chunk);\n        })\n        .on('end', function() {\n            minify(buffer.join(''));\n        });\n}\n\nfunction showStat(filename, source, result, inputMap, map, time, mem) {\n    function fmt(size) {\n        return String(size).split('').reverse().reduce(function(size, digit, idx) {\n            if (idx && idx % 3 === 0) {\n                size = ' ' + size;\n            }\n            return digit + size;\n        }, '');\n    }\n\n    map = map || 0;\n    result -= map;\n\n    console.error('Source:    ', filename === '<stdin>' ? filename : path.relative(process.cwd(), filename));\n    if (inputMap) {\n        console.error('Map source:', inputMap);\n    }\n    console.error('Original:  ', fmt(source), 'bytes');\n    console.error('Compressed:', fmt(result), 'bytes', '(' + (100 * result / source).toFixed(2) + '%)');\n    console.error('Saving:    ', fmt(source - result), 'bytes', '(' + (100 * (source - result) / source).toFixed(2) + '%)');\n    if (map) {\n        console.error('Source map:', fmt(map), 'bytes', '(' + (100 * map / (result + map)).toFixed(2) + '% of total)');\n        console.error('Total:     ', fmt(map + result), 'bytes');\n    }\n    console.error('Time:      ', time, 'ms');\n    console.error('Memory:    ', (mem / (1024 * 1024)).toFixed(3), 'MB');\n}\n\nfunction showParseError(source, filename, details, message) {\n    function processLines(start, end) {\n        return lines.slice(start, end).map(function(line, idx) {\n            var num = String(start + idx + 1);\n\n            while (num.length < maxNumLength) {\n                num = ' ' + num;\n            }\n\n            return num + ' |' + line;\n        }).join('\\n');\n    }\n\n    var lines = source.split(/\\n|\\r\\n?|\\f/);\n    var column = details.column;\n    var line = details.line;\n    var startLine = Math.max(1, line - 2);\n    var endLine = Math.min(line + 2, lines.length + 1);\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\n\n    console.error('\\nParse error ' + filename + ': ' + message);\n    console.error(processLines(startLine - 1, line));\n    console.error(new Array(column + maxNumLength + 2).join('-') + '^');\n    console.error(processLines(line, endLine));\n    console.error();\n}\n\nfunction debugLevel(level) {\n    // level is undefined when no param -> 1\n    return isNaN(level) ? 1 : Math.max(Number(level), 0);\n}\n\nfunction resolveSourceMap(source, inputMap, map, inputFile, outputFile) {\n    var inputMapContent = null;\n    var inputMapFile = null;\n    var outputMapFile = null;\n\n    switch (map) {\n        case 'none':\n            // don't generate source map\n            map = false;\n            inputMap = 'none';\n            break;\n\n        case 'inline':\n            // nothing to do\n            break;\n\n        case 'file':\n            if (!outputFile) {\n                console.error('Output filename should be specified when `--map file` is used');\n                process.exit(2);\n            }\n\n            outputMapFile = outputFile + '.map';\n            break;\n\n        default:\n            // process filename\n            if (map) {\n                // check path is reachable\n                if (!fs.existsSync(path.dirname(map))) {\n                    console.error('Directory for map file should exists:', path.dirname(path.resolve(map)));\n                    process.exit(2);\n                }\n\n                // resolve to absolute path\n                outputMapFile = path.resolve(process.cwd(), map);\n            }\n    }\n\n    switch (inputMap) {\n        case 'none':\n            // nothing to do\n            break;\n\n        case 'auto':\n            if (map) {\n                // try fetch source map from source\n                var inputMapComment = source.match(/\\/\\*# sourceMappingURL=(\\S+)\\s*\\*\\/\\s*$/);\n\n                if (inputFile === '<stdin>') {\n                    inputFile = false;\n                }\n\n                if (inputMapComment) {\n                    // if comment found – value is filename or base64-encoded source map\n                    inputMapComment = inputMapComment[1];\n\n                    if (inputMapComment.substr(0, 5) === 'data:') {\n                        // decode source map content from comment\n                        inputMapContent = new Buffer(inputMapComment.substr(inputMapComment.indexOf('base64,') + 7), 'base64').toString();\n                    } else {\n                        // value is filename – resolve it as absolute path\n                        if (inputFile) {\n                            inputMapFile = path.resolve(path.dirname(inputFile), inputMapComment);\n                        }\n                    }\n                } else {\n                    // comment doesn't found - look up file with `.map` extension nearby input file\n                    if (inputFile && fs.existsSync(inputFile + '.map')) {\n                        inputMapFile = inputFile + '.map';\n                    }\n                }\n\n            }\n            break;\n\n        default:\n            if (inputMap) {\n                inputMapFile = inputMap;\n            }\n    }\n\n    // source map placed in external file\n    if (inputMapFile) {\n        inputMapContent = fs.readFileSync(inputMapFile, 'utf8');\n    }\n\n    return {\n        input: inputMapContent,\n        inputFile: inputMapFile || (inputMapContent ? '<inline>' : false),\n        output: map,\n        outputFile: outputMapFile\n    };\n}\n\nvar command = cli.create('csso', '[input] [output]')\n    .version(require('../package.json').version)\n    .option('-i, --input <filename>', 'Input file')\n    .option('-o, --output <filename>', 'Output file (result outputs to stdout if not set)')\n    .option('-m, --map <destination>', 'Generate source map: none (default), inline, file or <filename>', 'none')\n    .option('-u, --usage <filenane>', 'Usage data file')\n    .option('--input-map <source>', 'Input source map: none, auto (default) or <filename>', 'auto')\n    .option('--restructure-off', 'Turns structure minimization off')\n    .option('--stat', 'Output statistics in stderr')\n    .option('--debug [level]', 'Output intermediate state of CSS during compression', debugLevel, 0)\n    .action(function(args) {\n        var options = this.values;\n        var inputFile = options.input || args[0];\n        var outputFile = options.output || args[1];\n        var usageFile = options.usage;\n        var usageData = false;\n        var map = options.map;\n        var inputMap = options.inputMap;\n        var structureOptimisationOff = options.restructureOff;\n        var debug = options.debug;\n        var statistics = options.stat;\n        var inputStream;\n\n        if (process.stdin.isTTY && !inputFile && !outputFile) {\n            this.showHelp();\n            return;\n        }\n\n        if (!inputFile) {\n            inputFile = '<stdin>';\n            inputStream = process.stdin;\n        } else {\n            inputFile = path.resolve(process.cwd(), inputFile);\n            inputStream = fs.createReadStream(inputFile);\n        }\n\n        if (outputFile) {\n            outputFile = path.resolve(process.cwd(), outputFile);\n        }\n\n        if (usageFile) {\n            if (!fs.existsSync(usageFile)) {\n                console.error('Usage data file doesn\\'t found (%s)', usageFile);\n                process.exit(2);\n            }\n\n            usageData = fs.readFileSync(usageFile, 'utf-8');\n\n            try {\n                usageData = JSON.parse(usageData);\n            } catch (e) {\n                console.error('Usage data parse error (%s)', usageFile);\n                process.exit(2);\n            }\n        }\n\n        readFromStream(inputStream, function(source) {\n            var time = process.hrtime();\n            var mem = process.memoryUsage().heapUsed;\n            var sourceMap = resolveSourceMap(source, inputMap, map, inputFile, outputFile);\n            var sourceMapAnnotation = '';\n            var result;\n\n            // main action\n            try {\n                result = csso.minify(source, {\n                    filename: inputFile,\n                    sourceMap: sourceMap.output,\n                    usage: usageData,\n                    restructure: !structureOptimisationOff,\n                    debug: debug\n                });\n\n                // for backward capability minify returns a string\n                if (typeof result === 'string') {\n                    result = {\n                        css: result,\n                        map: null\n                    };\n                }\n            } catch (e) {\n                if (e.parseError) {\n                    showParseError(source, inputFile, e.parseError, e.message);\n                    if (!debug) {\n                        process.exit(2);\n                    }\n                }\n\n                throw e;\n            }\n\n            if (sourceMap.output && result.map) {\n                // apply input map\n                if (sourceMap.input) {\n                    result.map.applySourceMap(\n                        new SourceMapConsumer(sourceMap.input),\n                        inputFile\n                    );\n                }\n\n                // add source map to result\n                if (sourceMap.outputFile) {\n                    // write source map to file\n                    fs.writeFileSync(sourceMap.outputFile, result.map.toString(), 'utf-8');\n                    sourceMapAnnotation = '\\n' +\n                        '/*# sourceMappingURL=' +\n                        path.relative(outputFile ? path.dirname(outputFile) : process.cwd(), sourceMap.outputFile) +\n                        ' */';\n                } else {\n                    // inline source map\n                    sourceMapAnnotation = '\\n' +\n                        '/*# sourceMappingURL=data:application/json;base64,' +\n                        new Buffer(result.map.toString()).toString('base64') +\n                        ' */';\n                }\n\n                result.css += sourceMapAnnotation;\n            }\n\n            // output result\n            if (outputFile) {\n                fs.writeFileSync(outputFile, result.css, 'utf-8');\n            } else {\n                console.log(result.css);\n            }\n\n            // output statistics\n            if (statistics) {\n                var timeDiff = process.hrtime(time);\n                showStat(\n                    path.relative(process.cwd(), inputFile),\n                    source.length,\n                    result.css.length,\n                    sourceMap.inputFile,\n                    sourceMapAnnotation.length,\n                    parseInt(timeDiff[0] * 1e3 + timeDiff[1] / 1e6),\n                    process.memoryUsage().heapUsed - mem\n                );\n            }\n        });\n    });\n\nmodule.exports = {\n    run: command.run.bind(command),\n    isCliError: function(err) {\n        return err instanceof cli.Error;\n    }\n};\n"]}