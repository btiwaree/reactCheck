{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar TokenType = require('./const.js').TokenType;\nvar NodeType = require('./const.js').NodeType;\nvar tokenize = require('./tokenize.js');\nvar cleanInfo = require('../utils/cleanInfo.js');\nvar needPositions;\nvar filename;\nvar tokens;\nvar pos;\n\nvar SCOPE_ATRULE_EXPRESSION = 1;\nvar SCOPE_SELECTOR = 2;\nvar SCOPE_VALUE = 3;\n\nvar specialFunctions = {};\nspecialFunctions[SCOPE_ATRULE_EXPRESSION] = {\n    url: getUri\n};\nspecialFunctions[SCOPE_SELECTOR] = {\n    url: getUri,\n    not: getNotFunction\n};\nspecialFunctions[SCOPE_VALUE] = {\n    url: getUri,\n    expression: getOldIEExpression,\n    var: getVarFunction\n};\n\nvar rules = {\n    'atkeyword': getAtkeyword,\n    'atrule': getAtrule,\n    'attribute': getAttribute,\n    'block': getBlockWithBrackets,\n    'braces': getBraces,\n    'class': getClass,\n    'combinator': getCombinator,\n    'comment': getComment,\n    'declaration': getDeclaration,\n    'declarations': getBlock,\n    'dimension': getDimension,\n    'function': getFunction,\n    'ident': getIdentifier,\n    'important': getImportant,\n    'nth': getNth,\n    'nthselector': getNthSelector,\n    'number': getNumber,\n    'operator': getOperator,\n    'percentage': getPercentage,\n    'progid': getProgid,\n    'property': getProperty,\n    'pseudoClass': getPseudoClass,\n    'pseudoElement': getPseudoElement,\n    'ruleset': getRuleset,\n    'selector': getSelector,\n    'shash': getShash,\n    'simpleselector': getSimpleSelector,\n    'string': getString,\n    'stylesheet': getStylesheet,\n    'unary': getUnary,\n    'unknown': getUnknown,\n    'uri': getUri,\n    'value': getValue,\n    'vhash': getVhash,\n\n    // TODO: remove in 2.0\n    // for backward capability\n    'atruleb': getAtrule,\n    'atruler': getAtrule,\n    'atrules': getAtrule,\n    'attrib': getAttribute,\n    'attrselector': getAttrselector,\n    'clazz': getClass,\n    'filter': getDeclaration,\n    'functionExpression': getOldIEExpression,\n    'funktion': getFunction,\n    'pseudoc': getPseudoClass,\n    'pseudoe': getPseudoElement\n};\n\nvar blockMode = {\n    'declaration': true,\n    'property': true\n};\n\nfunction parseError(message) {\n    var error = new Error(message);\n    var line = 1;\n    var column = 1;\n    var lines;\n\n    if (tokens.length) {\n        if (pos < tokens.length) {\n            line = tokens[pos].line;\n            column = tokens[pos].column;\n        } else {\n            pos = tokens.length - 1;\n            lines = tokens[pos].value.trimRight().split(/\\n|\\r\\n?|\\f/);\n            line = tokens[pos].line + lines.length - 1;\n            column = lines.length > 1\n                ? lines[lines.length - 1].length + 1\n                : tokens[pos].column + lines[lines.length - 1].length;\n        }\n\n    }\n\n    error.name = 'CssSyntaxError';\n    error.parseError = {\n        line: line,\n        column: column\n    };\n\n    throw error;\n}\n\nfunction eat(tokenType) {\n    if (pos < tokens.length && tokens[pos].type === tokenType) {\n        pos++;\n        return true;\n    }\n\n    parseError(tokenType + ' is expected');\n}\n\nfunction expectIdentifier(name, eat) {\n    if (pos < tokens.length) {\n        var token = tokens[pos];\n        if (token.type === TokenType.Identifier &&\n            token.value.toLowerCase() === name) {\n            if (eat) {\n                pos++;\n            }\n\n            return true;\n        }\n    }\n\n    parseError('Identifier `' + name + '` is expected');\n}\n\nfunction expectAny(what) {\n    if (pos < tokens.length) {\n        for (var i = 1, type = tokens[pos].type; i < arguments.length; i++) {\n            if (type === arguments[i]) {\n                return true;\n            }\n        }\n    }\n\n    parseError(what + ' is expected');\n}\n\nfunction getInfo(idx) {\n    if (needPositions && idx < tokens.length) {\n        var token = tokens[idx];\n\n        return {\n            source: filename,\n            offset: token.offset,\n            line: token.line,\n            column: token.column\n        };\n    }\n\n    return null;\n\n}\n\nfunction getStylesheet(nested) {\n    var stylesheet = [getInfo(pos), NodeType.StylesheetType];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.Space:\n                stylesheet.push(getS());\n                break;\n\n            case TokenType.Comment:\n                stylesheet.push(getComment());\n                break;\n\n            case TokenType.Unknown:\n                stylesheet.push(getUnknown());\n                break;\n\n            case TokenType.CommercialAt:\n                stylesheet.push(getAtrule());\n                break;\n\n            case TokenType.RightCurlyBracket:\n                if (!nested) {\n                    parseError('Unexpected right curly brace');\n                }\n\n                break scan;\n\n            default:\n                stylesheet.push(getRuleset());\n        }\n    }\n\n    return stylesheet;\n}\n\nfunction isBlockAtrule(i) {\n    for (i++; i < tokens.length; i++) {\n        var type = tokens[i].type;\n\n        if (type === TokenType.RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === TokenType.LeftCurlyBracket ||\n            type === TokenType.CommercialAt) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getAtkeyword() {\n    eat(TokenType.CommercialAt);\n\n    return [getInfo(pos - 1), NodeType.AtkeywordType, getIdentifier()];\n}\n\nfunction getAtrule() {\n    var node = [getInfo(pos), NodeType.AtrulesType, getAtkeyword(pos)];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.Semicolon:\n                pos++;\n                break scan;\n\n            case TokenType.LeftCurlyBracket:\n                if (isBlockAtrule(pos)) {\n                    node[1] = NodeType.AtrulebType;\n                    node.push(getBlockWithBrackets());\n                } else {\n                    node[1] = NodeType.AtrulerType;\n                    node.push([\n                        {},\n                        NodeType.AtrulerqType\n                    ].concat(node.splice(3)));\n\n                    pos++;  // {\n\n                    var stylesheet = getStylesheet(true);\n                    stylesheet[1] = NodeType.AtrulersType;\n                    node.push(stylesheet);\n\n                    pos++;  // }\n                }\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.Comma:\n                node.push(getOperator());\n                break;\n\n            case TokenType.Colon:\n                node.push(getPseudo());\n                break;\n\n            case TokenType.LeftParenthesis:\n                node.push(getBraces(SCOPE_ATRULE_EXPRESSION));\n                break;\n\n            default:\n                node.push(getAny(SCOPE_ATRULE_EXPRESSION));\n        }\n    }\n\n    return node;\n}\n\nfunction getRuleset() {\n    return [\n        getInfo(pos),\n        NodeType.RulesetType,\n        getSelector(),\n        getBlockWithBrackets()\n    ];\n}\n\nfunction getSelector() {\n    var selector = [getInfo(pos), NodeType.SelectorType];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.LeftCurlyBracket:\n                break scan;\n\n            case TokenType.Comma:\n                selector.push([\n                    getInfo(pos++),\n                    NodeType.DelimType\n                ]);\n                break;\n\n            default:\n                selector.push(getSimpleSelector());\n        }\n    }\n\n    return selector;\n}\n\nfunction getSimpleSelector(nested) {\n    var node = [getInfo(pos), NodeType.SimpleselectorType];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.Comma:\n                break scan;\n\n            case TokenType.LeftCurlyBracket:\n                if (nested) {\n                    parseError('Unexpected input');\n                }\n\n                break scan;\n\n            case TokenType.RightParenthesis:\n                if (!nested) {\n                    parseError('Unexpected input');\n                }\n\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.PlusSign:\n            case TokenType.GreaterThanSign:\n            case TokenType.Tilde:\n            case TokenType.Solidus:\n                node.push(getCombinator());\n                break;\n\n            case TokenType.FullStop:\n                node.push(getClass());\n                break;\n\n            case TokenType.LeftSquareBracket:\n                node.push(getAttribute());\n                break;\n\n            case TokenType.NumberSign:\n                node.push(getShash());\n                break;\n\n            case TokenType.Colon:\n                node.push(getPseudo());\n                break;\n\n            case TokenType.HyphenMinus:\n            case TokenType.LowLine:\n            case TokenType.Identifier:\n            case TokenType.Asterisk:\n            case TokenType.DecimalNumber:\n                node.push(\n                    tryGetPercentage() ||\n                    getNamespacedIdentifier(false)\n                );\n                break;\n\n            default:\n                parseError('Unexpected input');\n        }\n    }\n\n    return node;\n}\n\nfunction getBlockWithBrackets() {\n    var info = getInfo(pos);\n    var node;\n\n    eat(TokenType.LeftCurlyBracket);\n    node = getBlock(info);\n    eat(TokenType.RightCurlyBracket);\n\n    return node;\n}\n\nfunction getBlock(info) {\n    var node = [info || getInfo(pos), NodeType.BlockType];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.RightCurlyBracket:\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.Semicolon: // ;\n                node.push([\n                    getInfo(pos++),\n                    NodeType.DecldelimType\n                ]);\n                break;\n\n            default:\n                node.push(getDeclaration());\n        }\n    }\n\n    return node;\n}\n\nfunction getDeclaration(nested) {\n    var startPos = pos;\n    var info = getInfo(pos);\n    var property = getProperty();\n\n    eat(TokenType.Colon);\n\n    // check it's a filter\n    for (var j = startPos; j < pos; j++) {\n        if (tokens[j].value.toLowerCase() === 'filter') {\n            if (checkProgid(pos)) {\n                return [\n                    info,\n                    NodeType.FilterType,\n                    property,\n                    getFilterv()\n                ];\n            }\n            break;\n        }\n    }\n\n    return [\n        info,\n        NodeType.DeclarationType,\n        property,\n        getValue(nested)\n    ];\n}\n\nfunction getProperty() {\n    var info = getInfo(pos);\n    var name = '';\n\n    while (pos < tokens.length) {\n        var type = tokens[pos].type;\n\n        if (type !== TokenType.Solidus &&\n            type !== TokenType.Asterisk &&\n            type !== TokenType.DollarSign) {\n            break;\n        }\n\n        name += tokens[pos++].value;\n    }\n\n    return readSC([\n        info,\n        NodeType.PropertyType,\n        [\n            info,\n            NodeType.IdentType,\n            name + readIdent(true)\n        ]\n    ]);\n}\n\nfunction getValue(nested) {\n    var node = [getInfo(pos), NodeType.ValueType];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.RightCurlyBracket:\n            case TokenType.Semicolon:\n                break scan;\n\n            case TokenType.RightParenthesis:\n                if (!nested) {\n                    parseError('Unexpected input');\n                }\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.NumberSign:\n                node.push(getVhash());\n                break;\n\n            case TokenType.Solidus:\n            case TokenType.Comma:\n                node.push(getOperator());\n                break;\n\n            case TokenType.LeftParenthesis:\n            case TokenType.LeftSquareBracket:\n                node.push(getBraces(SCOPE_VALUE));\n                break;\n\n            case TokenType.ExclamationMark:\n                node.push(getImportant());\n                break;\n\n            default:\n                // check for unicode range: U+0F00, U+0F00-0FFF, u+0F00??\n                if (tokens[pos].type === TokenType.Identifier) {\n                    var prefix = tokens[pos].value;\n                    if ((prefix === 'U' || prefix === 'u') &&\n                        pos + 1 < tokens.length &&\n                        tokens[pos + 1].type === TokenType.PlusSign) {\n                        pos += 2;\n\n                        node.push([\n                            getInfo(pos),\n                            NodeType.IdentType,\n                            prefix + '+' + getUnicodeRange(true)\n                        ]);\n                        break;\n                    }\n                }\n\n                node.push(getAny(SCOPE_VALUE));\n        }\n    }\n\n    return node;\n}\n\n// any = string | percentage | dimension | number | uri | functionExpression | funktion | unary | operator | ident\nfunction getAny(scope) {\n    var startPos = pos;\n\n    switch (tokens[pos].type) {\n        case TokenType.String:\n            return getString();\n\n        case TokenType.LowLine:\n        case TokenType.Identifier:\n            break;\n\n        case TokenType.FullStop:\n        case TokenType.DecimalNumber:\n        case TokenType.HyphenMinus:\n        case TokenType.PlusSign:\n            var number = tryGetNumber();\n\n            if (number !== null) {\n                if (pos < tokens.length) {\n                    if (tokens[pos].type === TokenType.PercentSign) {\n                        return getPercentage(startPos, number);\n                    } else if (tokens[pos].type === TokenType.Identifier) {\n                        return getDimension(startPos, number);\n                    }\n                }\n\n                return number;\n            }\n\n            if (tokens[pos].type === TokenType.HyphenMinus &&\n                pos < tokens.length &&\n                (tokens[pos + 1].type === TokenType.Identifier || tokens[pos + 1].type === TokenType.HyphenMinus)) {\n                break;\n            }\n\n            if (tokens[pos].type === TokenType.HyphenMinus ||\n                tokens[pos].type === TokenType.PlusSign) {\n                return getUnary();\n            }\n\n            parseError('Unexpected input');\n\n        default:\n            parseError('Unexpected input');\n    }\n\n    var ident = getIdentifier();\n\n    if (pos < tokens.length && tokens[pos].type === TokenType.LeftParenthesis) {\n        pos = startPos;\n        return getFunction(scope);\n    }\n\n    return ident;\n}\n\n// '[' S* attrib_name ']'\n// '[' S* attrib_name attrib_match [ IDENT | STRING ] S* attrib_flags? ']'\nfunction getAttribute() {\n    var node = [getInfo(pos), NodeType.AttribType];\n\n    eat(TokenType.LeftSquareBracket);\n\n    readSC(node);\n\n    node.push(getNamespacedIdentifier(true));\n\n    readSC(node);\n\n    if (pos < tokens.length && tokens[pos].type !== TokenType.RightSquareBracket) {\n        node.push(getAttrselector());\n        readSC(node);\n\n        if (pos < tokens.length && tokens[pos].type === TokenType.String) {\n            node.push(getString());\n        } else {\n            node.push(getIdentifier());\n        }\n\n        readSC(node);\n\n        // attribute flags\n        if (pos < tokens.length && tokens[pos].type === TokenType.Identifier) {\n            node.push([\n                getInfo(pos),\n                'attribFlags',\n                tokens[pos++].value\n            ]);\n            readSC(node);\n        }\n    }\n\n    eat(TokenType.RightSquareBracket);\n\n    return node;\n}\n\nfunction getAttrselector() {\n    expectAny('Attribute selector (=, ~=, ^=, $=, *=, |=)',\n        TokenType.EqualsSign,        // =\n        TokenType.Tilde,             // ~=\n        TokenType.CircumflexAccent,  // ^=\n        TokenType.DollarSign,        // $=\n        TokenType.Asterisk,          // *=\n        TokenType.VerticalLine       // |=\n    );\n\n    var startPos = pos;\n    var name;\n\n    if (tokens[pos].type === TokenType.EqualsSign) {\n        name = '=';\n        pos++;\n    } else {\n        name = tokens[pos].value + '=';\n        pos++;\n        eat(TokenType.EqualsSign);\n    }\n\n    return [getInfo(startPos), NodeType.AttrselectorType, name];\n}\n\nfunction getBraces(scope) {\n    expectAny('Parenthesis or square bracket',\n        TokenType.LeftParenthesis,\n        TokenType.LeftSquareBracket\n    );\n\n    var close;\n\n    if (tokens[pos].type === TokenType.LeftParenthesis) {\n        close = TokenType.RightParenthesis;\n    } else {\n        close = TokenType.RightSquareBracket;\n    }\n\n    var node = [\n        getInfo(pos),\n        NodeType.BracesType,\n        tokens[pos].value,\n        null\n    ];\n\n    // left brace\n    pos++;\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case close:\n                node[3] = tokens[pos].value;\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.NumberSign: // ??\n                node.push(getVhash());\n                break;\n\n            case TokenType.LeftParenthesis:\n            case TokenType.LeftSquareBracket:\n                node.push(getBraces(scope));\n                break;\n\n            case TokenType.Solidus:\n            case TokenType.Asterisk:\n            case TokenType.Comma:\n            case TokenType.Colon:\n                node.push(getOperator());\n                break;\n\n            default:\n                node.push(getAny(scope));\n        }\n    }\n\n    // right brace\n    eat(close);\n\n    return node;\n}\n\n// '.' ident\nfunction getClass() {\n    var startPos = pos;\n\n    eat(TokenType.FullStop);\n\n    return [\n        getInfo(startPos),\n        NodeType.ClassType,\n        getIdentifier()\n    ];\n}\n\n// '#' ident\n// FIXME: shash node should has structure like other ident's (['shash', ['ident', ident]])\nfunction getShash() {\n    var startPos = pos;\n\n    eat(TokenType.NumberSign);\n\n    return [\n        getInfo(startPos),\n        NodeType.ShashType,\n        readIdent()\n    ];\n}\n\n// + | > | ~ | /deep/\nfunction getCombinator() {\n    var info = getInfo(pos);\n    var combinator;\n\n    switch (tokens[pos].type) {\n        case TokenType.PlusSign:\n        case TokenType.GreaterThanSign:\n        case TokenType.Tilde:\n            combinator = tokens[pos].value;\n            pos++;\n            break;\n\n        case TokenType.Solidus:\n            combinator = '/deep/';\n            pos++;\n\n            expectIdentifier('deep', true);\n\n            eat(TokenType.Solidus);\n            break;\n\n        default:\n            parseError('Combinator (+, >, ~, /deep/) is expected');\n    }\n\n    return [info, NodeType.CombinatorType, combinator];\n}\n\n// '/*' .* '*/'\nfunction getComment() {\n    var value = tokens[pos].value;\n    var len = value.length;\n\n    if (len > 4 && value.charAt(len - 2) === '*' && value.charAt(len - 1) === '/') {\n        len -= 2;\n    }\n\n    return [getInfo(pos++), NodeType.CommentType, value.substring(2, len)];\n}\n\n// special reader for units to avoid adjoined IE hacks (i.e. '1px\\9')\nfunction readUnit() {\n    if (pos < tokens.length && tokens[pos].type === TokenType.Identifier) {\n        var unit = tokens[pos].value;\n        var backSlashPos = unit.indexOf('\\\\');\n\n        // no backslash in unit name\n        if (backSlashPos === -1) {\n            pos++;\n            return unit;\n        }\n\n        // patch token\n        tokens[pos].value = unit.substr(backSlashPos);\n        tokens[pos].offset += backSlashPos;\n        tokens[pos].column += backSlashPos;\n\n        // return unit w/o backslash part\n        return unit.substr(0, backSlashPos);\n    }\n\n    parseError('Identifier is expected');\n}\n\n// number ident\nfunction getDimension(startPos, number) {\n    return [\n        getInfo(startPos || pos),\n        NodeType.DimensionType,\n        number || getNumber(),\n        [getInfo(pos), NodeType.IdentType, readUnit()]\n    ];\n}\n\n// expression '(' raw ')'\nfunction getOldIEExpression(startPos, ident) {\n    var raw = '';\n    var balance = 0;\n    var startPos = pos;\n    var ident = getIdentifier();\n\n    if (ident[2].toLowerCase() !== 'expression') {\n        pos--;\n        parseError('`expression` is expected');\n    }\n\n    eat(TokenType.LeftParenthesis);\n\n    while (pos < tokens.length) {\n        if (tokens[pos].type === TokenType.RightParenthesis) {\n            if (balance === 0) {\n                break;\n            }\n\n            balance--;\n        } else if (tokens[pos].type === TokenType.LeftParenthesis) {\n            balance++;\n        }\n\n        raw += tokens[pos++].value;\n    }\n\n    eat(TokenType.RightParenthesis);\n\n    return [\n        getInfo(startPos),\n        NodeType.FunctionExpressionType,\n        raw\n    ];\n}\n\n// ident '(' functionBody ')' |\n// not '(' <simpleSelector>* ')'\nfunction getFunction(scope) {\n    var body = getFunctionBody;\n\n    // parse special functions\n    if (pos + 1 < tokens.length && tokens[pos].type === TokenType.Identifier) {\n        var name = tokens[pos].value.toLowerCase();\n\n        if (tokens[pos + 1].type === TokenType.LeftParenthesis) {\n            if (specialFunctions.hasOwnProperty(scope)) {\n                if (specialFunctions[scope].hasOwnProperty(name)) {\n                    return specialFunctions[scope][name](scope);\n                }\n            }\n        }\n    }\n\n    return getFunctionInternal(body, scope);\n}\n\nfunction getNotFunction(scope) {\n    return getFunctionInternal(getNotFunctionBody, scope);\n}\n\nfunction getVarFunction(scope) {\n    return getFunctionInternal(getVarFunctionBody, scope);\n}\n\nfunction getFunctionInternal(functionBodyReader, scope) {\n    var startPos = pos;\n    var ident = getIdentifier();\n\n    eat(TokenType.LeftParenthesis);\n\n    var body = functionBodyReader(scope);\n\n    eat(TokenType.RightParenthesis);\n\n    return [getInfo(startPos), NodeType.FunctionType, ident, body];\n}\n\nfunction getFunctionBody(scope) {\n    var node = [getInfo(pos), NodeType.FunctionBodyType];\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.RightParenthesis:\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.NumberSign: // TODO: not sure it should be here\n                node.push(getVhash());\n                break;\n\n            case TokenType.LeftParenthesis:\n            case TokenType.LeftSquareBracket:\n                node.push(getBraces(scope));\n                break;\n\n            case TokenType.Solidus:\n            case TokenType.Asterisk:\n            case TokenType.Comma:\n            case TokenType.Colon:\n            case TokenType.EqualsSign:\n                node.push(getOperator());\n                break;\n\n            default:\n                node.push(getAny(scope));\n        }\n    }\n\n    return node;\n}\n\nfunction getNotFunctionBody() {\n    var node = [getInfo(pos), NodeType.FunctionBodyType];\n    var wasSelector = false;\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.RightParenthesis:\n                if (!wasSelector) {\n                    parseError('Simple selector is expected');\n                }\n\n                break scan;\n\n            case TokenType.Comma:\n                if (!wasSelector) {\n                    parseError('Simple selector is expected');\n                }\n\n                wasSelector = false;\n                node.push([\n                    getInfo(pos++),\n                    NodeType.DelimType\n                ]);\n                break;\n\n            default:\n                wasSelector = true;\n                node.push(getSimpleSelector(true));\n        }\n    }\n\n    return node;\n}\n\n// var '(' ident (',' <declaration-value>)? ')'\nfunction getVarFunctionBody() {\n    var node = [getInfo(pos), NodeType.FunctionBodyType];\n\n    readSC(node);\n    node.push(getIdentifier(true));\n    readSC(node);\n\n    if (pos < tokens.length && tokens[pos].type === TokenType.Comma) {\n        node.push(\n            getOperator(),\n            getValue(true)\n        );\n        readSC(node);\n    }\n\n    return node;\n}\n\n// url '(' ws* (string | raw) ws* ')'\nfunction getUri() {\n    var startPos = pos;\n    var node = [getInfo(startPos), NodeType.UriType];\n    var ident = getIdentifier();\n\n    if (ident[2].toLowerCase() !== 'url') {\n        pos--;\n        parseError('`url` is expected');\n    }\n\n    eat(TokenType.LeftParenthesis); // (\n\n    readSC(node);\n\n    if (tokens[pos].type === TokenType.String) {\n        node.push(getString());\n        readSC(node);\n    } else {\n        var rawStart = pos;\n        var raw = '';\n\n        while (pos < tokens.length) {\n            var type = tokens[pos].type;\n\n            if (type === TokenType.Space ||\n                type === TokenType.LeftParenthesis ||\n                type === TokenType.RightParenthesis) {\n                break;\n            }\n\n            raw += tokens[pos++].value;\n        }\n\n        node.push([\n            getInfo(rawStart),\n            NodeType.RawType,\n            raw\n        ]);\n\n        readSC(node);\n    }\n\n    eat(TokenType.RightParenthesis); // )\n\n    return node;\n}\n\nfunction getUnicodeRange(tryNext) {\n    var hex = '';\n\n    for (; pos < tokens.length; pos++) {\n        if (tokens[pos].type !== TokenType.DecimalNumber &&\n            tokens[pos].type !== TokenType.Identifier) {\n            break;\n        }\n\n        hex += tokens[pos].value;\n    }\n\n    if (!/^[0-9a-f]{1,6}$/i.test(hex)) {\n        parseError('Unexpected input');\n    }\n\n    // U+abc???\n    if (tryNext) {\n        for (; hex.length < 6 && pos < tokens.length; pos++) {\n            if (tokens[pos].type !== TokenType.QuestionMark) {\n                break;\n            }\n\n            hex += tokens[pos].value;\n            tryNext = false;\n        }\n    }\n\n    // U+aaa-bbb\n    if (tryNext) {\n        if (pos < tokens.length && tokens[pos].type === TokenType.HyphenMinus) {\n            pos++;\n            var next = getUnicodeRange(false);\n\n            if (!next) {\n                parseError('Unexpected input');\n            }\n\n            hex += '-' + next;\n        }\n    }\n\n    return hex;\n}\n\nfunction readIdent(varAllowed) {\n    var name = '';\n\n    // optional first -\n    if (pos < tokens.length && tokens[pos].type === TokenType.HyphenMinus) {\n        name = '-';\n        pos++;\n\n        if (varAllowed && pos < tokens.length && tokens[pos].type === TokenType.HyphenMinus) {\n            name = '--';\n            pos++;\n        }\n    }\n\n    expectAny('Identifier',\n        TokenType.LowLine,\n        TokenType.Identifier\n    );\n\n    if (pos < tokens.length) {\n        name += tokens[pos].value;\n        pos++;\n\n        for (; pos < tokens.length; pos++) {\n            var type = tokens[pos].type;\n            if (type !== TokenType.LowLine &&\n                type !== TokenType.Identifier &&\n                type !== TokenType.DecimalNumber &&\n                type !== TokenType.HyphenMinus) {\n                break;\n            }\n\n            name += tokens[pos].value;\n        }\n    }\n\n    return name;\n}\n\nfunction getNamespacedIdentifier(checkColon) {\n    if (pos >= tokens.length) {\n        parseError('Unexpected end of input');\n    }\n\n    var info = getInfo(pos);\n    var name;\n\n    if (tokens[pos].type === TokenType.Asterisk) {\n        checkColon = false;\n        name = '*';\n        pos++;\n    } else {\n        name = readIdent();\n    }\n\n    if (pos < tokens.length) {\n        if (tokens[pos].type === TokenType.VerticalLine &&\n            pos + 1 < tokens.length &&\n            tokens[pos + 1].type !== TokenType.EqualsSign) {\n            name += '|';\n            pos++;\n\n            if (pos < tokens.length) {\n                if (tokens[pos].type === TokenType.HyphenMinus ||\n                    tokens[pos].type === TokenType.Identifier ||\n                    tokens[pos].type === TokenType.LowLine) {\n                    name += readIdent();\n                } else if (tokens[pos].type === TokenType.Asterisk) {\n                    checkColon = false;\n                    name += '*';\n                    pos++;\n                }\n            }\n        }\n    }\n\n    if (checkColon && pos < tokens.length && tokens[pos].type === TokenType.Colon) {\n        pos++;\n        name += ':' + readIdent();\n    }\n\n    return [\n        info,\n        NodeType.IdentType,\n        name\n    ];\n}\n\nfunction getIdentifier(varAllowed) {\n    return [getInfo(pos), NodeType.IdentType, readIdent(varAllowed)];\n}\n\n// ! ws* important\nfunction getImportant() {\n    eat(TokenType.ExclamationMark);\n\n    var node = readSC([getInfo(pos - 1), NodeType.ImportantType]);\n\n    expectIdentifier('important', true);\n\n    return node;\n}\n\n// odd | even | number? n\nfunction getNth() {\n    expectAny('Number, odd or even',\n        TokenType.Identifier,\n        TokenType.DecimalNumber\n    );\n\n    var startPos = pos;\n    var value = tokens[pos].value;\n    var cmpValue;\n\n    if (tokens[pos].type === TokenType.DecimalNumber) {\n        if (pos + 1 < tokens.length &&\n            tokens[pos + 1].type === TokenType.Identifier &&\n            tokens[pos + 1].value.toLowerCase() === 'n') {\n            value += tokens[pos + 1].value;\n            pos++;\n        }\n    } else {\n        var cmpValue = value.toLowerCase();\n        if (cmpValue !== 'odd' && cmpValue !== 'even' && cmpValue !== 'n') {\n            parseError('Unexpected identifier');\n        }\n    }\n\n    pos++;\n\n    return [\n        getInfo(startPos),\n        NodeType.NthType,\n        value\n    ];\n}\n\nfunction getNthSelector() {\n    eat(TokenType.Colon);\n    expectIdentifier('nth', false);\n\n    var node = [getInfo(pos - 1), NodeType.NthselectorType, getIdentifier()];\n\n    eat(TokenType.LeftParenthesis);\n\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.RightParenthesis:\n                break scan;\n\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            case TokenType.HyphenMinus:\n            case TokenType.PlusSign:\n                node.push(getUnary());\n                break;\n\n            default:\n                node.push(getNth());\n        }\n    }\n\n    eat(TokenType.RightParenthesis);\n\n    return node;\n}\n\nfunction tryGetNumber() {\n    var startPos = pos;\n    var wasDigits = false;\n    var number = '';\n    var i = pos;\n\n    if (i < tokens.length && tokens[i].type === TokenType.HyphenMinus) {\n        number = '-';\n        i++;\n    }\n\n    if (i < tokens.length && tokens[i].type === TokenType.DecimalNumber) {\n        wasDigits = true;\n        number += tokens[i].value;\n        i++;\n    }\n\n    if (i < tokens.length && tokens[i].type === TokenType.FullStop) {\n        number += '.';\n        i++;\n    }\n\n    if (i < tokens.length && tokens[i].type === TokenType.DecimalNumber) {\n        wasDigits = true;\n        number += tokens[i].value;\n        i++;\n    }\n\n    if (wasDigits) {\n        pos = i;\n        return [getInfo(startPos), NodeType.NumberType, number];\n    }\n\n    return null;\n}\n\nfunction getNumber() {\n    var number = tryGetNumber();\n\n    if (!number) {\n        parseError('Wrong number');\n    }\n\n    return number;\n}\n\n// '/' | '*' | ',' | ':' | '='\n// TODO: remove '=' since it's wrong operator, but theat as operator\n// to make old things like `filter: alpha(opacity=0)` works\nfunction getOperator() {\n    expectAny('Operator',\n        TokenType.Solidus,\n        TokenType.Asterisk,\n        TokenType.Comma,\n        TokenType.Colon,\n        TokenType.EqualsSign\n    );\n\n    return [getInfo(pos), NodeType.OperatorType, tokens[pos++].value];\n}\n\n// node: Percentage\nfunction tryGetPercentage() {\n    var startPos = pos;\n    var number = tryGetNumber();\n\n    if (!number) {\n        return null;\n    }\n\n    if (pos >= tokens.length || tokens[pos].type !== TokenType.PercentSign) {\n        return null;\n    }\n\n    return getPercentage(startPos, number);\n}\n\nfunction getPercentage(startPos, number) {\n    if (!startPos) {\n        startPos = pos;\n    }\n\n    if (!number) {\n        number = getNumber();\n    }\n\n    eat(TokenType.PercentSign);\n\n    return [getInfo(startPos), NodeType.PercentageType, number];\n}\n\nfunction getFilterv() {\n    var node = [getInfo(pos), NodeType.FiltervType];\n\n    while (checkProgid(pos)) {\n        node.push(getProgid());\n    }\n\n    readSC(node);\n\n    if (pos < tokens.length && tokens[pos].type === TokenType.ExclamationMark) {\n        node.push(getImportant());\n    }\n\n    return node;\n}\n\n// 'progid:' ws* 'DXImageTransform.Microsoft.' ident ws* '(' .* ')'\nfunction checkSC(i) {\n    var start = i;\n\n    while (i < tokens.length) {\n        if (tokens[i].type === TokenType.Space ||\n            tokens[i].type === TokenType.Comment) {\n            i++;\n        } else {\n            break;\n        }\n    }\n\n    return i - start;\n}\n\nfunction checkProgid(i) {\n    var start = i;\n\n    i += checkSC(i);\n\n    if (i + 1 >= tokens.length ||\n        tokens[i + 0].value.toLowerCase() !== 'progid' ||\n        tokens[i + 1].type !== TokenType.Colon) {\n        return false; // fail\n    }\n\n    i += 2;\n    i += checkSC(i);\n\n    if (i + 6 >= tokens.length ||\n        tokens[i + 0].value.toLowerCase() !== 'dximagetransform' ||\n        tokens[i + 1].type !== TokenType.FullStop ||\n        tokens[i + 2].value.toLowerCase() !== 'microsoft' ||\n        tokens[i + 3].type !== TokenType.FullStop ||\n        tokens[i + 4].type !== TokenType.Identifier) {\n        return false; // fail\n    }\n\n    i += 5;\n    i += checkSC(i);\n\n    if (i >= tokens.length ||\n        tokens[i].type !== TokenType.LeftParenthesis) {\n        return false; // fail\n    }\n\n    while (i < tokens.length) {\n        if (tokens[i++].type === TokenType.RightParenthesis) {\n            break;\n        }\n    }\n\n    tokens[start].progidEnd = i;\n\n    return true;\n}\n\nfunction getProgid() {\n    var node = [getInfo(pos), NodeType.ProgidType];\n    var progidEnd = tokens[pos].progidEnd;\n    var value = '';\n\n    if (!progidEnd && !checkProgid(pos)) {\n        parseError('progid is expected');\n    }\n\n    readSC(node);\n\n    var rawStart = pos;\n    for (; pos < progidEnd; pos++) {\n        value += tokens[pos].value;\n    }\n\n    node.push([\n        getInfo(rawStart),\n        NodeType.RawType,\n        value\n    ]);\n\n    readSC(node);\n\n    return node;\n}\n\n// <pseudo-element> | <nth-selector> | <pseudo-class>\nfunction getPseudo() {\n    if (pos >= tokens.length || tokens[pos].type !== TokenType.Colon) {\n        parseError('Colon is expected');\n    }\n\n    if (pos + 1 >= tokens.length) {\n        pos++;\n        parseError('Colon or identifier is expected');\n    }\n\n    var next = tokens[pos + 1];\n\n    if (next.type === TokenType.Colon) {\n        return getPseudoElement();\n    }\n\n    if (next.type === TokenType.Identifier &&\n        next.value.toLowerCase() === 'nth') {\n        return getNthSelector();\n    }\n\n    return getPseudoClass();\n}\n\n// :: ident\nfunction getPseudoElement() {\n    eat(TokenType.Colon);\n    eat(TokenType.Colon);\n\n    return [getInfo(pos - 2), NodeType.PseudoeType, getIdentifier()];\n}\n\n// : ( ident | function )\nfunction getPseudoClass() {\n    var startPos = pos;\n    var node = eat(TokenType.Colon) && getIdentifier();\n\n    if (pos < tokens.length && tokens[pos].type === TokenType.LeftParenthesis) {\n        pos = startPos + 1;\n        node = getFunction(SCOPE_SELECTOR);\n    }\n\n    return [\n        getInfo(startPos),\n        NodeType.PseudocType,\n        node\n    ];\n}\n\n// ws\nfunction getS() {\n    return [getInfo(pos), NodeType.SType, tokens[pos++].value];\n}\n\nfunction readSC(node) {\n    scan:\n    while (pos < tokens.length) {\n        switch (tokens[pos].type) {\n            case TokenType.Space:\n                node.push(getS());\n                break;\n\n            case TokenType.Comment:\n                node.push(getComment());\n                break;\n\n            default:\n                break scan;\n        }\n    }\n\n    return node;\n}\n\n// node: String\nfunction getString() {\n    return [getInfo(pos), NodeType.StringType, tokens[pos++].value];\n}\n\n// '+' | '-'\nfunction getUnary() {\n    expectAny('Unary operator',\n        TokenType.HyphenMinus,\n        TokenType.PlusSign\n    );\n\n    return [getInfo(pos), NodeType.UnaryType, tokens[pos++].value];\n}\n\n// '//' ...\n// TODO: remove it as wrong thing\nfunction getUnknown() {\n    eat(TokenType.Unknown);\n\n    return [getInfo(pos - 1), NodeType.UnknownType, tokens[pos - 1].value];\n}\n\n// # ident\nfunction getVhash() {\n    eat(TokenType.NumberSign);\n\n    expectAny('Number or identifier',\n        TokenType.DecimalNumber,\n        TokenType.Identifier\n    );\n\n    var name = tokens[pos].value;\n\n    if (tokens[pos++].type === TokenType.DecimalNumber) {\n        if (pos < tokens.length && tokens[pos].type === TokenType.Identifier) {\n            name += tokens[pos++].value;\n        }\n    }\n\n    return [getInfo(pos - 1), NodeType.VhashType, name];\n}\n\nmodule.exports = function parse(source, context, options) {\n    var ast;\n\n    options = options || {};\n\n    if (options === true) {\n        options = {\n            positions: true,\n            needInfo: true\n        };\n    }\n\n    if ('positions' in options) {\n        needPositions = options.positions || false;\n    } else {\n        // deprecated option but using for backward capability\n        needPositions = options.needPositions || false;\n    }\n\n    filename = options.filename || '<unknown>';\n    context = context || 'stylesheet';\n    pos = 0;\n\n    tokens = tokenize(source, blockMode.hasOwnProperty(context), options.line, options.column);\n\n    if (tokens.length) {\n        ast = rules[context]();\n    }\n\n    tokens = null; // drop tokens\n\n    if (!ast) {\n        switch (context) {\n            case 'stylesheet':\n                ast = [{}, context];\n                break;\n            // case 'declarations':\n            //     ast = [{}, 'block'];\n            //     break;\n        }\n    }\n\n    if (ast && !options.needInfo) {\n        ast = cleanInfo(ast);\n    }\n\n    // console.log(require('../utils/stringify.js')(require('../utils/cleanInfo.js')(ast), true));\n    return ast;\n};\n"]}