{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,MAAM,QAAQ,SAAR,CAAN;;AAEJ,IAAI,WAAW,CAAX;AACJ,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,MAAM,QAAQ,KAAR,CAAN;;AAEJ,IAAI,KAAK,GAAG,iBAAH,CAAqB,WAArB,CAAL;AACJ,IAAI,EAAJ,EAAQ,UAAS,GAAT,EAAc;AACrB,YADqB;AAErB,QAAO,CAAC,CAAC,GAAD,CAAR,CAFqB;AAGrB,KAAI,CAAC,QAAD,EAAW,QAAQ,IAAR,CAAa,CAAb,EAAf;CAHO,CAAR;AAKA,GAAG,KAAH;;AAEA,IAAI,KAAK,GAAG,gBAAH,CAAoB,aAApB,CAAL;AACJ,IAAI,EAAJ,EAAQ,UAAS,GAAT,EAAc;AACrB,YADqB;AAErB,QAAO,CAAC,CAAC,GAAD,CAAR,CAFqB;AAGrB,KAAI,CAAC,QAAD,EAAW,QAAQ,IAAR,CAAa,CAAb,EAAf;CAHO,CAAR;AAKA,GAAG,KAAH;;AAEA,IAAI,KAAK,GAAG,gBAAH,CAAoB,UAApB,CAAL;AACJ,IAAI,EAAJ,EAAQ,UAAS,GAAT,EAAc;AACrB,YADqB;AAErB,QAAO,CAAC,GAAD,CAAP,CAFqB;AAGrB,KAAI,CAAC,QAAD,EAAW,QAAQ,IAAR,CAAa,CAAb,EAAf;CAHO,CAAR;AAKA,GAAG,IAAH,CAAQ,GAAG,iBAAH,CAAqB,WAArB,CAAR;;AAEA,IAAI,KAAK,GAAG,gBAAH,CAAoB,UAApB,CAAL;AACJ,IAAI,EAAJ,EAAQ,UAAS,GAAT,EAAc;AACrB,OAAM,IAAI,KAAJ,CAAU,OAAV,CAAN,CADqB;CAAd,CAAR;AAGA,GAAG,IAAH,CAAQ,GAAG,iBAAH,CAAqB,WAArB,CAAR;;AAEA,IAAI,SAAS,IAAI,OAAJ,CAAY,KAAZ,CAAT;AACJ,IAAI,MAAJ,EAAY,UAAS,GAAT,EAAc;AACzB,YADyB;AAEzB,QAAO,CAAC,CAAC,GAAD,CAAR,CAFyB;AAGzB,KAAI,CAAC,QAAD,EAAW,QAAQ,IAAR,CAAa,CAAb,EAAf;CAHW,CAAZ;;AAMA,IAAI,SAAS,IAAI,YAAJ,CAAiB,UAAS,MAAT,EAAiB;AAC9C,KAAI,MAAJ,EAAY,YAAW;AACtB,aADsB;AAEtB,MAAI,CAAC,QAAD,EAAW,QAAQ,IAAR,CAAa,CAAb,EAAf;EAFW,CAAZ,CAD8C;AAK9C,QAAO,OAAP,GAL8C;CAAjB,CAAjB,CAMV,MANU,CAMH,KANG,EAMI,YAAW;AAC3B,KAAI,SAAS,IAAI,OAAJ,CAAY,KAAZ,CAAT,CADuB;AAE3B,KAAI,MAAJ,EAAY,YAAW;AACtB,aADsB;AAEtB,MAAI,CAAC,QAAD,EAAW,QAAQ,IAAR,CAAa,CAAb,EAAf;EAFW,CAAZ,CAF2B;CAAX,CANb;;AAcJ,WAAW,YAAW;AACrB,QAAO,aAAa,CAAb,CAAP,CADqB;AAErB,SAAQ,IAAR,CAAa,CAAb,EAFqB;CAAX,EAGR,IAHH","file":"test-compiled.js","sourcesContent":["var assert = require('assert');\nvar eos = require('./index');\n\nvar expected = 6;\nvar fs = require('fs');\nvar net = require('net');\n\nvar ws = fs.createWriteStream('/dev/null');\neos(ws, function(err) {\n\texpected--;\n\tassert(!!err);\n\tif (!expected) process.exit(0);\n});\nws.close();\n\nvar rs = fs.createReadStream('/dev/random');\neos(rs, function(err) {\n\texpected--;\n\tassert(!!err);\n\tif (!expected) process.exit(0);\n});\nrs.close();\n\nvar rs = fs.createReadStream(__filename);\neos(rs, function(err) {\n\texpected--;\n\tassert(!err);\n\tif (!expected) process.exit(0);\n});\nrs.pipe(fs.createWriteStream('/dev/null'));\n\nvar rs = fs.createReadStream(__filename);\neos(rs, function(err) {\n\tthrow new Error('no go')\n})();\nrs.pipe(fs.createWriteStream('/dev/null'));\n\nvar socket = net.connect(50000);\neos(socket, function(err) {\n\texpected--;\n\tassert(!!err);\n\tif (!expected) process.exit(0);\n});\n\nvar server = net.createServer(function(socket) {\n\teos(socket, function() {\n\t\texpected--;\n\t\tif (!expected) process.exit(0);\n\t});\n\tsocket.destroy();\n}).listen(30000, function() {\n\tvar socket = net.connect(30000);\n\teos(socket, function() {\n\t\texpected--;\n\t\tif (!expected) process.exit(0);\n\t});\n});\n\nsetTimeout(function() {\n\tassert(expected === 0);\n\tprocess.exit(0);\n}, 1000);\n"]}