{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * lodash 4.1.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n  ? exports\n  : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n  ? module\n  : undefined;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal ||\n  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n    freeSelf || thisGlobal || Function('return this')();\n\n/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': Map ? new Map : [],\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value != '__proto__') || value == null;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = Stack;\n"]}