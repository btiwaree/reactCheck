{"version":3,"sources":["cli.js"],"names":[],"mappings":";;AAEA,IAAI,eAAe,QAAQ,IAAR,CAAf;AACJ,IAAI,MAAe,QAAQ,gBAAR,CAAf;AACJ,IAAI,OAAe,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAAf;;AAEJ,SAAS,KAAT,CAAe,GAAf,EAAoB;AAChB,WAAO,KAAK,IAAL,CAAU,UAAU,GAAV,EAAe;AAC5B,eAAO,QAAQ,GAAR,IAAe,IAAI,OAAJ,CAAY,MAAM,GAAN,CAAZ,KAA2B,CAA3B,CADM;KAAf,CAAjB,CADgB;CAApB;;AAMA,SAAS,WAAT,CAAqB,GAArB,EAA0B;AACtB,QAAI,QAAQ,KAAK,MAAL,CAAY,UAAU,GAAV,EAAe;AACnC,eAAO,IAAI,OAAJ,CAAY,MAAM,GAAN,CAAZ,KAA2B,CAA3B,CAD4B;KAAf,CAAZ,CAET,CAFS,CAAR,CADkB;AAItB,QAAI,QAAQ,SAAS,MAAM,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAT,CAJU;AAKtB,WAAO,SAAS,MAAM,OAAN,CAAc,cAAd,EAA8B,EAA9B,CAAT,CALe;CAA1B;;AAQA,SAAS,KAAT,CAAe,GAAf,EAAoB;AAChB,YAAQ,MAAR,CAAe,KAAf,CAAqB,IAAI,IAAJ,GAAW,IAAX,GAAkB,GAAlB,GAAwB,IAAxB,CAArB,CADgB;AAEhB,YAAQ,IAAR,CAAa,CAAb,EAFgB;CAApB;;AAKA,SAAS,KAAT,CAAe,OAAf,EAAwB;AACpB,QAAI;AACA,eAAO,aAAa,OAAb,CAAP,CADA;KAAJ,CAEE,OAAO,CAAP,EAAU;AACR,YAAK,EAAE,IAAF,KAAW,mBAAX,EAAiC;AAClC,mBAAO,MAAM,EAAE,OAAF,CAAb,CADkC;SAAtC,MAEO;AACH,kBAAM,CAAN,CADG;SAFP;KADF;CAHN;;AAYA,IAAK,KAAK,MAAL,KAAgB,CAAhB,IAAqB,MAAM,QAAN,CAArB,IAAwC,MAAM,IAAN,CAAxC,EAAsD;AACvD,YAAQ,MAAR,CAAe,KAAf,CAAqB,CACjB,IAAI,WAAJ,EACA,EAFiB,EAGjB,QAHiB,EAIjB,OAAO,IAAI,IAAJ,GAAW,YAAlB,EACA,OAAO,IAAI,IAAJ,GAAW,uBAAlB,EACA,OAAO,IAAI,IAAJ,GAAW,0BAAlB,CANiB,CAOnB,IAPmB,CAOd,IAPc,IAON,IAPM,CAArB,CADuD;CAA3D,MAUO,IAAK,MAAM,WAAN,KAAsB,MAAM,IAAN,CAAtB,EAAoC;AAC5C,YAAQ,MAAR,CAAe,KAAf,CAAqB,IAAI,IAAJ,GAAW,GAAX,GAAiB,IAAI,OAAJ,GAAc,IAA/B,CAArB,CAD4C;CAAzC,MAGA,IAAK,MAAM,WAAN,KAAsB,MAAM,IAAN,CAAtB,EAAoC;AAC5C,YAAQ,MAAR,CAAe,KAAf,CAAqB,IAAI,IAAJ,GAAW,GAAX,GAAiB,IAAI,OAAJ,GAAc,IAA/B,CAArB,CAD4C;CAAzC,MAGA,IAAK,MAAM,YAAN,KAAuB,MAAM,IAAN,CAAvB,EAAqC;AAC7C,QAAI,WAAW,KAAK,IAAL,CAAU,UAAU,CAAV,EAAa;AAClC,eAAO,EAAE,CAAF,MAAS,GAAT,CAD2B;KAAb,CAArB,CADyC;AAI7C,QAAK,CAAC,QAAD,EAAY,MAAM,yCAAN,EAAjB;;AAEA,QAAI,UAAU,YAAY,YAAZ,KAA6B,YAAY,IAAZ,CAA7B,CAN+B;AAO7C,QAAI,SAAU,aAAa,QAAb,CAAsB,MAAM,QAAN,CAAtB,EAAuC,OAAvC,CAAV,CAPyC;AAQ7C,QAAI,QAAU,KAAK,KAAL,CAAW,SAAS,GAAT,CAAX,GAA2B,KAA3B,CAR+B;;AAU7C,QAAI,MAAM,UAAN,CAVyC;AAW7C,QAAI,WAAW,YAAY,QAAZ,EAAsB;AACjC,cAAM,YAAY,QAAQ,WAAR,EAAZ,CAD2B;KAArC;;AAIA,YAAQ,MAAR,CAAe,KAAf,CACI,gCAAgC,KAAhC,GAAwC,iBAAxC,GAA4D,GAA5D,GAAkE,IAAlE,CADJ,CAf6C;CAA1C,MAkBA,IAAK,KAAK,MAAL,KAAgB,CAAhB,IAAqB,KAAK,CAAL,EAAQ,CAAR,MAAe,GAAf,EAAqB;AAClD,UAAM,KAAK,CAAL,CAAN,EAAe,OAAf,CAAuB,UAAU,OAAV,EAAmB;AACtC,gBAAQ,MAAR,CAAe,KAAf,CAAqB,UAAU,IAAV,CAArB,CADsC;KAAnB,CAAvB,CADkD;CAA/C,MAKA;AACH,UAAM,kDAAN,EADG;CALA","file":"cli-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar browserslist = require('./');\nvar pkg          = require('./package.json');\nvar args         = process.argv.slice(2);\n\nfunction isArg(arg) {\n    return args.some(function (str) {\n        return str === arg || str.indexOf(arg + '=') === 0;\n    });\n}\n\nfunction getArgValue(arg) {\n    var found = args.filter(function (str) {\n        return str.indexOf(arg + '=') === 0;\n    })[0];\n    var value = found && found.split('=')[1];\n    return value && value.replace(/^['\"]|['\"]$/g, '');\n}\n\nfunction error(msg) {\n    process.stderr.write(pkg.name + ': ' + msg + '\\n');\n    process.exit(1);\n}\n\nfunction query(queries) {\n    try {\n        return browserslist(queries);\n    } catch (e) {\n        if ( e.name === 'BrowserslistError' ) {\n            return error(e.message);\n        } else {\n            throw e;\n        }\n    }\n}\n\nif ( args.length === 0 || isArg('--help') || isArg('-h') ) {\n    process.stdout.write([\n        pkg.description,\n        '',\n        'Usage:',\n        '  ' + pkg.name + ' \"QUERIES\"',\n        '  ' + pkg.name + ' --coverage \"QUERIES\"',\n        '  ' + pkg.name + ' --coverage=US \"QUERIES\"'\n    ].join('\\n') + '\\n');\n\n} else if ( isArg('--version') || isArg('-v') ) {\n    process.stdout.write(pkg.name + ' ' + pkg.version + '\\n');\n\n} else if ( isArg('--version') || isArg('-v') ) {\n    process.stdout.write(pkg.name + ' ' + pkg.version + '\\n');\n\n} else if ( isArg('--coverage') || isArg('-c') ) {\n    var browsers = args.find(function (i) {\n        return i[0] !== '-';\n    });\n    if ( !browsers ) error('Define a browsers query to get coverage');\n\n    var country = getArgValue('--coverage') || getArgValue('-c');\n    var result  = browserslist.coverage(query(browsers), country);\n    var round   = Math.round(result * 100) / 100.0;\n\n    var end = 'globally';\n    if (country && country !== 'global') {\n        end = 'in the ' + country.toUpperCase();\n    }\n\n    process.stdout.write(\n        'These browsers account for ' + round + '% of all users ' + end + '\\n');\n\n} else if ( args.length === 1 && args[0][0] !== '-' ) {\n    query(args[0]).forEach(function (browser) {\n        process.stdout.write(browser + '\\n');\n    });\n\n} else {\n    error('Unknown arguments. Use --help to pick right one.');\n}\n"]}