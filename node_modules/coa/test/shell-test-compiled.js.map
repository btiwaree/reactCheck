{"version":3,"sources":["shell-test.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,MAAR,EAAgB,MAAhB;IACT,QAAQ,QAAQ,IAAR,EAAc,KAAd;;;;;;;;;;;;AAYZ,SAAS,OAAT,EAAkB,YAAW;;AAEzB,aAAS,UAAT,EAAqB,YAAW;;AAE5B,YAAI,SAAS,MAAM,MAAN,CAFe;;AAI5B,WAAG,iDAAH,EAAsD,YAAW;AAC7D,mBAAO,KAAP,CAAa,OAAO,SAAP,CAAb,EAAgC,WAAhC,EAD6D;SAAX,CAAtD,CAJ4B;;AAQ5B,WAAG,8BAAH,EAAmC,YAAW;AAC1C,mBAAO,KAAP,CAAa,OAAO,MAAP,CAAb,EAA6B,QAA7B,EAD0C;SAAX,CAAnC,CAR4B;;AAY5B,WAAG,8BAAH,EAAmC,YAAW;AAC1C,mBAAO,KAAP,CAAa,OAAO,MAAP,CAAb,EAA6B,QAA7B,EAD0C;SAAX,CAAnC,CAZ4B;;AAgB5B,WAAG,4BAAH,EAAiC,YAAW;AACxC,mBAAO,KAAP,CAAa,OAAO,OAAP,CAAb,EAA8B,SAA9B,EADwC;SAAX,CAAjC,CAhB4B;;AAoB5B,WAAG,wBAAH,EAA6B,YAAW;AACpC,mBAAO,KAAP,CAAa,OAAO,MAAP,CAAb,EAA6B,QAA7B,EADoC;SAAX,CAA7B,CApB4B;;AAwB5B,WAAG,0BAAH,EAA+B,YAAW;AACtC,mBAAO,KAAP,CAAa,OAAO,MAAP,CAAb,EAA6B,QAA7B,EADsC;SAAX,CAA/B,CAxB4B;KAAX,CAArB,CAFyB;;AAgCzB,aAAS,YAAT,EAAuB,YAAW;;AAE9B,YAAI,WAAW,MAAM,QAAN,CAFe;;AAI9B,WAAG,6CAAH,EAAkD,YAAW;AACzD,mBAAO,KAAP,CAAa,SAAS,OAAT,CAAb,EAAgC,KAAhC,EADyD;SAAX,CAAlD,CAJ8B;;AAQ9B,WAAG,yDAAH,EAA8D,YAAW;AACrE,mBAAO,KAAP,CAAa,SAAS,WAAT,CAAb,EAAoC,OAApC,EADqE;SAAX,CAA9D,CAR8B;KAAX,CAAvB,CAhCyB;CAAX,CAAlB","file":"shell-test-compiled.js","sourcesContent":["var assert = require('chai').assert,\n    shell = require('..').shell;\n\n/**\n * Mocha BDD interface.\n */\n/** @name describe @function */\n/** @name it @function */\n/** @name before @function */\n/** @name after @function */\n/** @name beforeEach @function */\n/** @name afterEach @function */\n\ndescribe('shell', function() {\n\n    describe('escape()', function() {\n\n        var escape = shell.escape;\n\n        it('Should wrap values with spaces in double quotes', function() {\n            assert.equal(escape('asd abc'), '\"asd abc\"');\n        });\n\n        it('Should escape double quote \"', function() {\n            assert.equal(escape('\"asd'), '\\\\\"asd');\n        });\n\n        it(\"Should escape single quote '\", function() {\n            assert.equal(escape(\"'asd\"), \"\\\\'asd\");\n        });\n\n        it('Should escape backslash \\\\', function() {\n            assert.equal(escape('\\\\asd'), '\\\\\\\\asd');\n        });\n\n        it('Should escape dollar $', function() {\n            assert.equal(escape('$asd'), '\\\\$asd');\n        });\n\n        it('Should escape backtick `', function() {\n            assert.equal(escape('`asd'), '\\\\`asd');\n        });\n\n    });\n\n    describe('unescape()', function() {\n\n        var unescape = shell.unescape;\n\n        it('Should strip double quotes at the both ends', function() {\n            assert.equal(unescape('\"asd\"'), 'asd');\n        });\n\n        it('Should not strip escaped double quotes at the both ends', function() {\n            assert.equal(unescape('\\\\\"asd\\\\\"'), '\"asd\"');\n        });\n\n    });\n\n});\n"]}