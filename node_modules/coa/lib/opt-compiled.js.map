{"version":3,"sources":["opt.js"],"names":[],"mappings":"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","file":"opt-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.6.3\nvar Cmd, Color, Opt, Q, fs;\n\nfs = require('fs');\n\nQ = require('q');\n\nColor = require('./color').Color;\n\nCmd = require('./cmd').Cmd;\n\n/**\nOption\n\nNamed entity. Options may have short and long keys for use from command line.\n@namespace\n@class Presents option\n*/\n\n\nexports.Opt = Opt = (function() {\n  /**\n  @constructs\n  @param {COA.Cmd} cmd parent command\n  */\n\n  function Opt(_cmd) {\n    this._cmd = _cmd;\n    this._cmd._opts.push(this);\n  }\n\n  /**\n  Set a canonical option identifier to be used anywhere in the API.\n  @param {String} _name option name\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.name = function(_name) {\n    this._name = _name;\n    return this;\n  };\n\n  /**\n  Set a long description for option to be used anywhere in text messages.\n  @param {String} _title option title\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.title = Cmd.prototype.title;\n\n  /**\n  Set a short key for option to be used with one hyphen from command line.\n  @param {String} _short\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.short = function(_short) {\n    this._short = _short;\n    return this._cmd._optsByKey['-' + _short] = this;\n  };\n\n  /**\n  Set a short key for option to be used with double hyphens from command line.\n  @param {String} _long\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.long = function(_long) {\n    this._long = _long;\n    return this._cmd._optsByKey['--' + _long] = this;\n  };\n\n  /**\n  Make an option boolean, i.e. option without value.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.flag = function() {\n    this._flag = true;\n    return this;\n  };\n\n  /**\n  Makes an option accepts multiple values.\n  Otherwise, the value will be used by the latter passed.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.arr = function() {\n    this._arr = true;\n    return this;\n  };\n\n  /**\n  Makes an option required.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.req = function() {\n    this._req = true;\n    return this;\n  };\n\n  /**\n  Makes an option to act as a command,\n  i.e. program will exit just after option action.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.only = function() {\n    this._only = true;\n    return this;\n  };\n\n  /**\n  Set a validation (or value) function for option.\n  Value from command line passes through before becoming available from API.\n  Using for validation and convertion simple types to any values.\n  @param {Function} _val validating function,\n      invoked in the context of option instance\n      and has one parameter with value from command line\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.val = function(_val) {\n    this._val = _val;\n    return this;\n  };\n\n  /**\n  Set a default value for option.\n  Default value passed through validation function as ordinary value.\n  @param {Object} _def\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.def = function(_def) {\n    this._def = _def;\n    return this;\n  };\n\n  /**\n  Make option value inputting stream.\n  It's add useful validation and shortcut for STDIN.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.input = function() {\n    process.stdin.pause();\n    return this.def(process.stdin).val(function(v) {\n      var s;\n      if (typeof v === 'string') {\n        if (v === '-') {\n          return process.stdin;\n        } else {\n          s = fs.createReadStream(v, {\n            encoding: 'utf8'\n          });\n          s.pause();\n          return s;\n        }\n      } else {\n        return v;\n      }\n    });\n  };\n\n  /**\n  Make option value outputing stream.\n  It's add useful validation and shortcut for STDOUT.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.output = function() {\n    return this.def(process.stdout).val(function(v) {\n      if (typeof v === 'string') {\n        if (v === '-') {\n          return process.stdout;\n        } else {\n          return fs.createWriteStream(v, {\n            encoding: 'utf8'\n          });\n        }\n      } else {\n        return v;\n      }\n    });\n  };\n\n  /**\n  Add action for current option command.\n  This action is performed if the current option\n  is present in parsed options (with any value).\n  @param {Function} act action function,\n      invoked in the context of command instance\n      and has the parameters:\n          - {Object} opts parsed options\n          - {Array} args parsed arguments\n          - {Object} res actions result accumulator\n      It can return rejected promise by Cmd.reject (in case of error)\n      or any other value treated as result.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.act = function(act) {\n    var name, opt;\n    opt = this;\n    name = this._name;\n    this._cmd.act(function(opts) {\n      var res,\n        _this = this;\n      if (name in opts) {\n        res = act.apply(this, arguments);\n        if (opt._only) {\n          return Q.when(res, function(res) {\n            return _this.reject({\n              toString: function() {\n                return res.toString();\n              },\n              exitCode: 0\n            });\n          });\n        } else {\n          return res;\n        }\n      }\n    });\n    return this;\n  };\n\n  /**\n  Set custom additional completion for current option.\n  @param {Function} completion generation function,\n      invoked in the context of option instance.\n      Accepts parameters:\n          - {Object} opts completion options\n      It can return promise or any other value treated as result.\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.comp = Cmd.prototype.comp;\n\n  Opt.prototype._saveVal = function(opts, val) {\n    var _name;\n    if (this._val) {\n      val = this._val(val);\n    }\n    if (this._arr) {\n      (opts[_name = this._name] || (opts[_name] = [])).push(val);\n    } else {\n      opts[this._name] = val;\n    }\n    return val;\n  };\n\n  Opt.prototype._parse = function(argv, opts) {\n    return this._saveVal(opts, this._flag ? true : argv.shift());\n  };\n\n  Opt.prototype._checkParsed = function(opts, args) {\n    return !opts.hasOwnProperty(this._name);\n  };\n\n  Opt.prototype._usage = function() {\n    var nameStr, res;\n    res = [];\n    nameStr = this._name.toUpperCase();\n    if (this._short) {\n      res.push('-', Color('lgreen', this._short));\n      if (!this._flag) {\n        res.push(' ' + nameStr);\n      }\n      res.push(', ');\n    }\n    if (this._long) {\n      res.push('--', Color('green', this._long));\n      if (!this._flag) {\n        res.push('=' + nameStr);\n      }\n    }\n    res.push(' : ', this._title);\n    if (this._req) {\n      res.push(' ', Color('lred', '(required)'));\n    }\n    return res.join('');\n  };\n\n  Opt.prototype._requiredText = function() {\n    return 'Missing required option:\\n  ' + this._usage();\n  };\n\n  /**\n  Return rejected promise with error code.\n  Use in .val() for return with error.\n  @param {Object} reject reason\n      You can customize toString() method and exitCode property\n      of reason object.\n  @returns {Q.promise} rejected promise\n  */\n\n\n  Opt.prototype.reject = Cmd.prototype.reject;\n\n  /**\n  Finish chain for current option and return parent command instance.\n  @returns {COA.Cmd} parent command\n  */\n\n\n  Opt.prototype.end = Cmd.prototype.end;\n\n  /**\n  Apply function with arguments in context of option instance.\n  @param {Function} fn\n  @param {Array} args\n  @returns {COA.Opt} this instance (for chainability)\n  */\n\n\n  Opt.prototype.apply = Cmd.prototype.apply;\n\n  return Opt;\n\n})();\n"]}