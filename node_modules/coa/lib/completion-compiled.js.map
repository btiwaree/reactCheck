{"version":3,"sources":["completion.js"],"names":[],"mappings":"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","file":"completion-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.6.3\n/**\nMost of the code adopted from the npm package shell completion code.\nSee https://github.com/isaacs/npm/blob/master/lib/completion.js\n*/\n\nvar Q, complete, dumpScript, escape, getOpts, unescape;\n\nQ = require('q');\n\nescape = require('./shell').escape;\n\nunescape = require('./shell').unescape;\n\nmodule.exports = function() {\n  return this.title('Shell completion').helpful().arg().name('raw').title('Completion words').arr().end().act(function(opts, args) {\n    var argv, cmd, e, _ref;\n    if (process.platform === 'win32') {\n      e = new Error('shell completion not supported on windows');\n      e.code = 'ENOTSUP';\n      e.errno = require('constants').ENOTSUP;\n      return this.reject(e);\n    }\n    if ((process.env.COMP_CWORD == null) || (process.env.COMP_LINE == null) || (process.env.COMP_POINT == null)) {\n      return dumpScript(this._cmd._name);\n    }\n    console.error('COMP_LINE:  %s', process.env.COMP_LINE);\n    console.error('COMP_CWORD: %s', process.env.COMP_CWORD);\n    console.error('COMP_POINT: %s', process.env.COMP_POINT);\n    console.error('args: %j', args.raw);\n    opts = getOpts(args.raw);\n    _ref = this._cmd._parseCmd(opts.partialWords), cmd = _ref.cmd, argv = _ref.argv;\n    return Q.when(complete(cmd, opts), function(compls) {\n      console.error('filtered: %j', compls);\n      return console.log(compls.map(escape).join('\\n'));\n    });\n  });\n};\n\ndumpScript = function(name) {\n  var defer, fs, path;\n  fs = require('fs');\n  path = require('path');\n  defer = Q.defer();\n  fs.readFile(path.resolve(__dirname, 'completion.sh'), 'utf8', function(err, d) {\n    var onError;\n    if (err) {\n      return defer.reject(err);\n    }\n    d = d.replace(/{{cmd}}/g, path.basename(name)).replace(/^\\#\\!.*?\\n/, '');\n    onError = function(err) {\n      if (err.errno === require('constants').EPIPE) {\n        process.stdout.removeListener('error', onError);\n        return defer.resolve();\n      } else {\n        return defer.reject(err);\n      }\n    };\n    process.stdout.on('error', onError);\n    return process.stdout.write(d, function() {\n      return defer.resolve();\n    });\n  });\n  return defer.promise;\n};\n\ngetOpts = function(argv) {\n  var i, line, partialLine, partialWord, partialWords, point, w, word, words;\n  line = process.env.COMP_LINE;\n  w = +process.env.COMP_CWORD;\n  point = +process.env.COMP_POINT;\n  words = argv.map(unescape);\n  word = words[w];\n  partialLine = line.substr(0, point);\n  partialWords = words.slice(0, w);\n  partialWord = argv[w] || '';\n  i = partialWord.length;\n  while (partialWord.substr(0, i) !== partialLine.substr(-1 * i) && i > 0) {\n    i--;\n  }\n  partialWord = unescape(partialWord.substr(0, i));\n  if (partialWord) {\n    partialWords.push(partialWord);\n  }\n  return {\n    line: line,\n    w: w,\n    point: point,\n    words: words,\n    word: word,\n    partialLine: partialLine,\n    partialWords: partialWords,\n    partialWord: partialWord\n  };\n};\n\ncomplete = function(cmd, opts) {\n  var compls, m, o, opt, optPrefix, optWord;\n  compls = [];\n  if (opts.partialWord.indexOf('-')) {\n    compls = Object.keys(cmd._cmdsByName);\n  } else {\n    if (m = opts.partialWord.match(/^(--\\w[\\w-_]*)=(.*)$/)) {\n      optWord = m[1];\n      optPrefix = optWord + '=';\n    } else {\n      compls = Object.keys(cmd._optsByKey);\n    }\n  }\n  if (!(o = opts.partialWords[opts.w - 1]).indexOf('-')) {\n    optWord = o;\n  }\n  if (optWord && (opt = cmd._optsByKey[optWord])) {\n    if (!opt._flag && opt._comp) {\n      compls = Q.join(compls, Q.when(opt._comp(opts), function(c, o) {\n        return c.concat(o.map(function(v) {\n          return (optPrefix || '') + v;\n        }));\n      }));\n    }\n  }\n  if (cmd._comp) {\n    compls = Q.join(compls, Q.when(cmd._comp(opts)), function(c, o) {\n      return c.concat(o);\n    });\n  }\n  return Q.when(compls, function(compls) {\n    console.error('partialWord: %s', opts.partialWord);\n    console.error('compls: %j', compls);\n    return compls.filter(function(c) {\n      return c.indexOf(opts.partialWord) === 0;\n    });\n  });\n};\n"]}