{"version":3,"sources":["cssesc.js"],"names":[],"mappings":"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","file":"cssesc-compiled.js","sourcesContent":["/*! http://mths.be/cssesc v0.1.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar key;\n\t\tvar result = {};\n\t\tfor (key in defaults) {\n\t\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t\t// only recognized option names are used\n\t\t\tresult[key] = hasOwnProperty.call(options, key)\n\t\t\t\t? options[key]\n\t\t\t\t: defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar regexAnySingleEscape = /[\\x20-\\x2C\\x2E\\x2F\\x3B-\\x40\\x5B-\\x5E\\x60\\x7B-\\x7E]/;\n\tvar regexSingleEscape = /[\\x20\\x21\\x23-\\x26\\x28-\\x2C\\x2E\\x2F\\x3B-\\x40\\x5B\\x5D\\x5E\\x60\\x7B-\\x7E]/;\n\tvar regexAlwaysEscape = /['\"\\\\]/;\n\tvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n\t// http://mathiasbynens.be/notes/css-escapes#css\n\tvar cssesc = function(string, options) {\n\n\t\t// Handle options\n\t\toptions = merge(options, cssesc.options);\n\t\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\t\toptions.quotes = 'single';\n\t\t}\n\t\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\t\tvar isIdentifier = options.isIdentifier;\n\n\t\tvar firstChar = string.charAt(0);\n\t\tvar output = '';\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar character;\n\t\tvar codePoint;\n\t\tvar extra; // used for potential low surrogates\n\n\t\twhile (counter < length) {\n\t\t\tcharacter = string.charAt(counter++);\n\t\t\tcodePoint = character.charCodeAt();\n\t\t\t// if it’s not a printable ASCII character\n\t\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // next character is low surrogate\n\t\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else {\n\t\t\t\tif (options.escapeEverything) {\n\t\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t\t}\n\t\t\t\t// `:` can be escaped as `\\:`, but that fails in IE < 8\n\t\t\t\t} else if (/[\\t\\n\\f\\r\\x0B:]/.test(character)) {\n\t\t\t\t\tif (!isIdentifier && character == ':') {\n\t\t\t\t\t\tvalue = character;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tcharacter == '\\\\' ||\n\t\t\t\t\t(\n\t\t\t\t\t\t!isIdentifier &&\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(character == '\"' && quote == character) ||\n\t\t\t\t\t\t\t(character == '\\'' && quote == character)\n\t\t\t\t\t\t)\n\t\t\t\t\t) ||\n\t\t\t\t\t(isIdentifier && regexSingleEscape.test(character))\n\t\t\t\t) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = character;\n\t\t\t\t}\n\t\t\t}\n\t\t\toutput += value;\n\t\t}\n\n\t\tif (isIdentifier) {\n\t\t\tif (/^_/.test(output)) {\n\t\t\t\t// Prevent IE6 from ignoring the rule altogether (in case this is for an\n\t\t\t\t// identifier used as a selector)\n\t\t\t\toutput = '\\\\_' + output.slice(1);\n\t\t\t} else if (/^-[-\\d]/.test(output)) {\n\t\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t\t}\n\t\t}\n\n\t\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t\t// since they’re redundant. Note that this is only possible if the escape\n\t\t// sequence isn’t preceded by an odd number of backslashes.\n\t\toutput = output.replace(regexExcessiveSpaces, function($0, $1, $2) {\n\t\t\tif ($1 && $1.length % 2) {\n\t\t\t\t// it’s not safe to remove the space, so don’t\n\t\t\t\treturn $0;\n\t\t\t}\n\t\t\t// strip the space\n\t\t\treturn ($1 || '') + $2;\n\t\t});\n\n\t\tif (!isIdentifier && options.wrap) {\n\t\t\treturn quote + output + quote;\n\t\t}\n\t\treturn output;\n\t};\n\n\t// Expose default options (so they can be overridden globally)\n\tcssesc.options = {\n\t\t'escapeEverything': false,\n\t\t'isIdentifier': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false\n\t};\n\n\tcssesc.version = '0.1.0';\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn cssesc;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = cssesc;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.cssesc = cssesc;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.cssesc = cssesc;\n\t}\n\n}(this));\n"]}