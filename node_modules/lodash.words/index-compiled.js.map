{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAQA,IAAI,OAAO,QAAQ,cAAR,CAAP;;;AAGJ,IAAI,WAAW,IAAI,CAAJ;;;AAGf,IAAI,YAAY,iBAAZ;;;AAGJ,IAAI,gBAAgB,iBAAhB;IACA,oBAAoB,gCAApB;IACA,sBAAsB,iBAAtB;IACA,iBAAiB,iBAAjB;IACA,eAAe,2BAAf;IACA,gBAAgB,sBAAhB;IACA,iBAAiB,8CAAjB;IACA,eAAe,8BAAf;IACA,eAAe,8JAAf;IACA,eAAe,2BAAf;IACA,aAAa,gBAAb;IACA,eAAe,gBAAgB,cAAhB,GAAiC,YAAjC,GAAgD,YAAhD;;;AAGnB,IAAI,UAAU,MAAM,YAAN,GAAqB,GAArB;IACV,UAAU,MAAM,iBAAN,GAA0B,mBAA1B,GAAgD,GAAhD;IACV,WAAW,MAAX;IACA,YAAY,MAAM,cAAN,GAAuB,GAAvB;IACZ,UAAU,MAAM,YAAN,GAAqB,GAArB;IACV,SAAS,OAAO,aAAP,GAAuB,YAAvB,GAAsC,QAAtC,GAAiD,cAAjD,GAAkE,YAAlE,GAAiF,YAAjF,GAAgG,GAAhG;IACT,SAAS,0BAAT;IACA,aAAa,QAAQ,OAAR,GAAkB,GAAlB,GAAwB,MAAxB,GAAiC,GAAjC;IACb,cAAc,OAAO,aAAP,GAAuB,GAAvB;IACd,aAAa,iCAAb;IACA,aAAa,oCAAb;IACA,UAAU,MAAM,YAAN,GAAqB,GAArB;IACV,QAAQ,SAAR;;;AAGJ,IAAI,cAAc,QAAQ,OAAR,GAAkB,GAAlB,GAAwB,MAAxB,GAAiC,GAAjC;IACd,cAAc,QAAQ,OAAR,GAAkB,GAAlB,GAAwB,MAAxB,GAAiC,GAAjC;IACd,WAAW,aAAa,GAAb;IACX,WAAW,MAAM,UAAN,GAAmB,IAAnB;IACX,YAAY,QAAQ,KAAR,GAAgB,KAAhB,GAAwB,CAAC,WAAD,EAAc,UAAd,EAA0B,UAA1B,EAAsC,IAAtC,CAA2C,GAA3C,CAAxB,GAA0E,GAA1E,GAAgF,QAAhF,GAA2F,QAA3F,GAAsG,IAAtG;IACZ,QAAQ,WAAW,QAAX,GAAsB,SAAtB;IACR,UAAU,QAAQ,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,IAApC,CAAyC,GAAzC,CAAR,GAAwD,GAAxD,GAA8D,KAA9D;;;AAGd,IAAI,cAAc,eAAd;;;AAGJ,IAAI,gBAAgB,OAAO,CACzB,UAAU,GAAV,GAAgB,OAAhB,GAA0B,MAA1B,GAAmC,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,IAAxB,CAA6B,GAA7B,CAAnC,GAAuE,GAAvE,EACA,cAAc,MAAd,GAAuB,CAAC,OAAD,EAAU,UAAU,WAAV,EAAuB,GAAjC,EAAsC,IAAtC,CAA2C,GAA3C,CAAvB,GAAyE,GAAzE,EACA,UAAU,GAAV,GAAgB,WAAhB,GAA8B,GAA9B,EACA,UAAU,GAAV,EACA,QALyB,EAMzB,OANyB,EAOzB,IAPyB,CAOpB,GAPoB,CAAP,EAOP,GAPO,CAAhB;;;AAUJ,IAAI,mBAAmB,sDAAnB;;;AAGJ,IAAI,cAAc,OAAO,SAAP;;;;;;AAMlB,IAAI,iBAAiB,YAAY,QAAZ;;;AAGrB,IAAI,SAAS,KAAK,MAAL;;;AAGb,IAAI,cAAc,SAAS,OAAO,SAAP,GAAmB,SAA5B;IACd,iBAAiB,SAAS,YAAY,QAAZ,GAAuB,SAAhC;;;;;;;;;;;;;;;;;;;;;;;;;AAyBrB,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,SAAO,CAAC,CAAC,KAAD,IAAU,OAAO,KAAP,IAAgB,QAAhB,CADS;CAA7B;;;;;;;;;;;;;;;;;;AAoBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,SAAO,OAAO,KAAP,IAAgB,QAAhB,IACJ,aAAa,KAAb,KAAuB,eAAe,IAAf,CAAoB,KAApB,KAA8B,SAA9B,CAFH;CAAzB;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;;AAEvB,MAAI,OAAO,KAAP,IAAgB,QAAhB,EAA0B;AAC5B,WAAO,KAAP,CAD4B;GAA9B;AAGA,MAAI,SAAS,IAAT,EAAe;AACjB,WAAO,EAAP,CADiB;GAAnB;AAGA,MAAI,SAAS,KAAT,CAAJ,EAAqB;AACnB,WAAO,SAAS,eAAe,IAAf,CAAoB,KAApB,CAAT,GAAsC,EAAtC,CADY;GAArB;AAGA,MAAI,SAAU,QAAQ,EAAR,CAXS;AAYvB,SAAO,MAAC,IAAU,GAAV,IAAiB,CAAC,GAAI,KAAJ,IAAc,CAAC,QAAD,GAAa,IAA9C,GAAqD,MAArD,CAZgB;CAAzB;;;;;;;;;;;;;;;;;;;;AAiCA,SAAS,KAAT,CAAe,MAAf,EAAuB,OAAvB,EAAgC,KAAhC,EAAuC;AACrC,WAAS,SAAS,MAAT,CAAT,CADqC;AAErC,YAAU,QAAQ,SAAR,GAAoB,OAApB,CAF2B;;AAIrC,MAAI,YAAY,SAAZ,EAAuB;AACzB,cAAU,iBAAiB,IAAjB,CAAsB,MAAtB,IAAgC,aAAhC,GAAgD,WAAhD,CADe;GAA3B;AAGA,SAAO,OAAO,KAAP,CAAa,OAAb,KAAyB,EAAzB,CAP8B;CAAvC;;AAUA,OAAO,OAAP,GAAiB,KAAjB","file":"index-compiled.js","sourcesContent":["/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar root = require('lodash._root');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match non-compound words composed of alphanumeric characters. */\nvar reBasicWord = /[a-zA-Z0-9]+/g;\n\n/** Used to match complex or compound words. */\nvar reComplexWord = RegExp([\n  rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+',\n  rsUpper + '+',\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"]}