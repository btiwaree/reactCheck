{"version":3,"sources":["stream.js"],"names":[],"mappings":";AACA,IAAI,SAAS,YAAW,EAAX;;;;AAKb,OAAO,SAAP,CAAiB,QAAjB,GAA4B,YAAW;AACrC,QAAM,IAAI,KAAJ,CAAU,4CAAV,CAAN,CADqC;CAAX;;;AAK5B,OAAO,SAAP,CAAiB,IAAjB,GAAwB,UAAS,MAAT,EAAiB,SAAjB,EAA4B,MAA5B,EAAoC;AAC1D,MAAI,YAAY,CAAZ,CADsD;AAE1D,SAAO,YAAY,MAAZ,EAAoB;AACzB,QAAI,IAAI,KAAK,QAAL,EAAJ,CADqB;AAEzB,QAAI,IAAI,CAAJ,EAAO;;AACT,aAAO,SAAC,KAAY,CAAZ,GAAiB,CAAC,CAAD,GAAK,SAAvB,CADE;KAAX;AAGA,WAAO,WAAP,IAAsB,CAAtB,CALyB;AAMzB,gBANyB;GAA3B;AAQA,SAAO,SAAP,CAV0D;CAApC;AAYxB,OAAO,SAAP,CAAiB,IAAjB,GAAwB,UAAS,OAAT,EAAkB;AACxC,QAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN,CADwC;CAAlB;;;AAKxB,OAAO,SAAP,CAAiB,SAAjB,GAA6B,UAAS,KAAT,EAAgB;AAC3C,QAAM,IAAI,KAAJ,CAAU,4CAAV,CAAN,CAD2C;CAAhB;AAG7B,OAAO,SAAP,CAAiB,KAAjB,GAAyB,UAAS,MAAT,EAAiB,SAAjB,EAA4B,MAA5B,EAAoC;AAC3D,MAAI,CAAJ,CAD2D;AAE3D,OAAK,IAAE,CAAF,EAAK,IAAE,MAAF,EAAU,GAApB,EAAyB;AACvB,SAAK,SAAL,CAAe,OAAO,WAAP,CAAf,EADuB;GAAzB;AAGA,SAAO,MAAP,CAL2D;CAApC;AAOzB,OAAO,SAAP,CAAiB,KAAjB,GAAyB,YAAW,EAAX;;AAGzB,OAAO,OAAP,GAAiB,MAAjB","file":"stream-compiled.js","sourcesContent":["/* very simple input/output stream interface */\nvar Stream = function() {\n};\n\n// input streams //////////////\n/** Returns the next byte, or -1 for EOF. */\nStream.prototype.readByte = function() {\n  throw new Error(\"abstract method readByte() not implemented\");\n};\n/** Attempts to fill the buffer; returns number of bytes read, or\n *  -1 for EOF. */\nStream.prototype.read = function(buffer, bufOffset, length) {\n  var bytesRead = 0;\n  while (bytesRead < length) {\n    var c = this.readByte();\n    if (c < 0) { // EOF\n      return (bytesRead===0) ? -1 : bytesRead;\n    }\n    buffer[bufOffset++] = c;\n    bytesRead++;\n  }\n  return bytesRead;\n};\nStream.prototype.seek = function(new_pos) {\n  throw new Error(\"abstract method seek() not implemented\");\n};\n\n// output streams ///////////\nStream.prototype.writeByte = function(_byte) {\n  throw new Error(\"abstract method readByte() not implemented\");\n};\nStream.prototype.write = function(buffer, bufOffset, length) {\n  var i;\n  for (i=0; i<length; i++) {\n    this.writeByte(buffer[bufOffset++]);\n  }\n  return length;\n};\nStream.prototype.flush = function() {\n};\n\nmodule.exports = Stream;\n"]}