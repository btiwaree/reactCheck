{"version":3,"sources":["size.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAZ;IACA,WAAW,QAAQ,sBAAR,CAAX;IACA,OAAO,QAAQ,gBAAR,CAAP;;;;;;;;;;;;;;;;;;;;;;AAsBJ,SAAS,IAAT,CAAc,UAAd,EAA0B;AACxB,MAAI,SAAS,aAAa,UAAU,UAAV,CAAb,GAAqC,CAArC,CADW;AAExB,SAAO,SAAS,MAAT,IAAmB,MAAnB,GAA4B,KAAK,UAAL,EAAiB,MAAjB,CAFX;CAA1B;;AAKA,OAAO,OAAP,GAAiB,IAAjB","file":"size-compiled.js","sourcesContent":["var getLength = require('../internal/getLength'),\n    isLength = require('../internal/isLength'),\n    keys = require('../object/keys');\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable properties for objects.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the size of `collection`.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  var length = collection ? getLength(collection) : 0;\n  return isLength(length) ? length : keys(collection).length;\n}\n\nmodule.exports = size;\n"]}