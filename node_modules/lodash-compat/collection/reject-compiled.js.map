{"version":3,"sources":["reject.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAd;IACA,eAAe,QAAQ,0BAAR,CAAf;IACA,aAAa,QAAQ,wBAAR,CAAb;IACA,UAAU,QAAQ,iBAAR,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCJ,SAAS,MAAT,CAAgB,UAAhB,EAA4B,SAA5B,EAAuC,OAAvC,EAAgD;AAC9C,MAAI,OAAO,QAAQ,UAAR,IAAsB,WAAtB,GAAoC,UAApC,CADmC;AAE9C,cAAY,aAAa,SAAb,EAAwB,OAAxB,EAAiC,CAAjC,CAAZ,CAF8C;AAG9C,SAAO,KAAK,UAAL,EAAiB,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AACzD,WAAO,CAAC,UAAU,KAAV,EAAiB,KAAjB,EAAwB,UAAxB,CAAD,CADkD;GAAnC,CAAxB,CAH8C;CAAhD;;AAQA,OAAO,OAAP,GAAiB,MAAjB","file":"reject-compiled.js","sourcesContent":["var arrayFilter = require('../internal/arrayFilter'),\n    baseCallback = require('../internal/baseCallback'),\n    baseFilter = require('../internal/baseFilter'),\n    isArray = require('../lang/isArray');\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.reject([1, 2, 3, 4], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [1, 3]\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.reject(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.reject(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction reject(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, function(value, index, collection) {\n    return !predicate(value, index, collection);\n  });\n}\n\nmodule.exports = reject;\n"]}