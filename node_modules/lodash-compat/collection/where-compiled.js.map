{"version":3,"sources":["where.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAd;IACA,SAAS,QAAQ,UAAR,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BJ,SAAS,KAAT,CAAe,UAAf,EAA2B,MAA3B,EAAmC;AACjC,SAAO,OAAO,UAAP,EAAmB,YAAY,MAAZ,CAAnB,CAAP,CADiC;CAAnC;;AAIA,OAAO,OAAP,GAAiB,KAAjB","file":"where-compiled.js","sourcesContent":["var baseMatches = require('../internal/baseMatches'),\n    filter = require('./filter');\n\n/**\n * Performs a deep comparison between each element in `collection` and the\n * source object, returning an array of all elements that have equivalent\n * property values.\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties. For comparing a single\n * own or inherited property value see `_.matchesProperty`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Object} source The object of property values to match.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n * ];\n *\n * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n * // => ['barney']\n *\n * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n * // => ['fred']\n */\nfunction where(collection, source) {\n  return filter(collection, baseMatches(source));\n}\n\nmodule.exports = where;\n"]}