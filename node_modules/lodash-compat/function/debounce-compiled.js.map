{"version":3,"sources":["debounce.js"],"names":[],"mappings":"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","file":"debounce-compiled.js","sourcesContent":["var isObject = require('../lang/isObject'),\n    now = require('../date/now');\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed invocations. Provide an options object to indicate that `func`\n * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n * Subsequent calls to the debounced function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=false] Specify invoking on the leading\n *  edge of the timeout.\n * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n *  delayed before it's invoked.\n * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n *  edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // avoid costly calculations while the window size is in flux\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // ensure `batchLog` is invoked once after 1 second of debounced calls\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', _.debounce(batchLog, 250, {\n *   'maxWait': 1000\n * }));\n *\n * // cancel a debounced call\n * var todoChanges = _.debounce(batchLog, 1000);\n * Object.observe(models.todo, todoChanges);\n *\n * Object.observe(models, function(changes) {\n *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n *     todoChanges.cancel();\n *   }\n * }, ['delete']);\n *\n * // ...at some point `models.todo` is changed\n * models.todo.completed = true;\n *\n * // ...before 1 second has passed `models.todo` is deleted\n * // which cancels the debounced `todoChanges` call\n * delete models.todo;\n */\nfunction debounce(func, wait, options) {\n  var args,\n      maxTimeoutId,\n      result,\n      stamp,\n      thisArg,\n      timeoutId,\n      trailingCall,\n      lastCalled = 0,\n      maxWait = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = wait < 0 ? 0 : (+wait || 0);\n  if (options === true) {\n    var leading = true;\n    trailing = false;\n  } else if (isObject(options)) {\n    leading = !!options.leading;\n    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    if (maxTimeoutId) {\n      clearTimeout(maxTimeoutId);\n    }\n    lastCalled = 0;\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n  }\n\n  function complete(isCalled, id) {\n    if (id) {\n      clearTimeout(id);\n    }\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n    if (isCalled) {\n      lastCalled = now();\n      result = func.apply(thisArg, args);\n      if (!timeoutId && !maxTimeoutId) {\n        args = thisArg = undefined;\n      }\n    }\n  }\n\n  function delayed() {\n    var remaining = wait - (now() - stamp);\n    if (remaining <= 0 || remaining > wait) {\n      complete(trailingCall, maxTimeoutId);\n    } else {\n      timeoutId = setTimeout(delayed, remaining);\n    }\n  }\n\n  function maxDelayed() {\n    complete(trailing, timeoutId);\n  }\n\n  function debounced() {\n    args = arguments;\n    stamp = now();\n    thisArg = this;\n    trailingCall = trailing && (timeoutId || !leading);\n\n    if (maxWait === false) {\n      var leadingCall = leading && !timeoutId;\n    } else {\n      if (!maxTimeoutId && !leading) {\n        lastCalled = stamp;\n      }\n      var remaining = maxWait - (stamp - lastCalled),\n          isCalled = remaining <= 0 || remaining > maxWait;\n\n      if (isCalled) {\n        if (maxTimeoutId) {\n          maxTimeoutId = clearTimeout(maxTimeoutId);\n        }\n        lastCalled = stamp;\n        result = func.apply(thisArg, args);\n      }\n      else if (!maxTimeoutId) {\n        maxTimeoutId = setTimeout(maxDelayed, remaining);\n      }\n    }\n    if (isCalled && timeoutId) {\n      timeoutId = clearTimeout(timeoutId);\n    }\n    else if (!timeoutId && wait !== maxWait) {\n      timeoutId = setTimeout(delayed, wait);\n    }\n    if (leadingCall) {\n      isCalled = true;\n      result = func.apply(thisArg, args);\n    }\n    if (isCalled && !timeoutId && !maxTimeoutId) {\n      args = thisArg = undefined;\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  return debounced;\n}\n\nmodule.exports = debounce;\n"]}