{"version":3,"sources":["ary.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,2BAAR,CAAhB;IACA,iBAAiB,QAAQ,4BAAR,CAAjB;;;AAGJ,IAAI,WAAW,GAAX;;;AAGJ,IAAI,YAAY,KAAK,GAAL;;;;;;;;;;;;;;;;;;AAkBhB,SAAS,GAAT,CAAa,IAAb,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B;AAC3B,MAAI,SAAS,eAAe,IAAf,EAAqB,CAArB,EAAwB,KAAxB,CAAT,EAAyC;AAC3C,QAAI,SAAJ,CAD2C;GAA7C;AAGA,MAAI,IAAC,IAAQ,KAAK,IAAL,GAAa,KAAK,MAAL,GAAc,UAAU,CAAC,CAAD,IAAM,CAAN,EAAS,CAAnB,CAApC,CAJuB;AAK3B,SAAO,cAAc,IAAd,EAAoB,QAApB,EAA8B,SAA9B,EAAyC,SAAzC,EAAoD,SAApD,EAA+D,SAA/D,EAA0E,CAA1E,CAAP,CAL2B;CAA7B;;AAQA,OAAO,OAAP,GAAiB,GAAjB","file":"ary-compiled.js","sourcesContent":["var createWrapper = require('../internal/createWrapper'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar ARY_FLAG = 128;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that accepts up to `n` arguments ignoring any\n * additional arguments.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {Function} Returns the new function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */\nfunction ary(func, n, guard) {\n  if (guard && isIterateeCall(func, n, guard)) {\n    n = undefined;\n  }\n  n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n  return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n}\n\nmodule.exports = ary;\n"]}