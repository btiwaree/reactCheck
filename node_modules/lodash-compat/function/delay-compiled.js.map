{"version":3,"sources":["delay.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAZ;IACA,YAAY,QAAQ,aAAR,CAAZ;;;;;;;;;;;;;;;;;;;;AAoBJ,IAAI,QAAQ,UAAU,UAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B;AAC/C,SAAO,UAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,CAAP,CAD+C;CAA3B,CAAlB;;AAIJ,OAAO,OAAP,GAAiB,KAAjB","file":"delay-compiled.js","sourcesContent":["var baseDelay = require('../internal/baseDelay'),\n    restParam = require('./restParam');\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => logs 'later' after one second\n */\nvar delay = restParam(function(func, wait, args) {\n  return baseDelay(func, wait, args);\n});\n\nmodule.exports = delay;\n"]}