{"version":3,"sources":["composeArgsRight.js"],"names":[],"mappings":";AACA,IAAI,YAAY,KAAK,GAAL;;;;;;;;;;;;AAYhB,SAAS,gBAAT,CAA0B,IAA1B,EAAgC,QAAhC,EAA0C,OAA1C,EAAmD;AACjD,MAAI,eAAe,CAAC,CAAD;MACf,gBAAgB,QAAQ,MAAR;MAChB,YAAY,CAAC,CAAD;MACZ,aAAa,UAAU,KAAK,MAAL,GAAc,aAAd,EAA6B,CAAvC,CAAb;MACA,aAAa,CAAC,CAAD;MACb,cAAc,SAAS,MAAT;MACd,SAAS,MAAM,aAAa,WAAb,CAAf,CAP6C;;AASjD,SAAO,EAAE,SAAF,GAAc,UAAd,EAA0B;AAC/B,WAAO,SAAP,IAAoB,KAAK,SAAL,CAApB,CAD+B;GAAjC;AAGA,MAAI,SAAS,SAAT,CAZ6C;AAajD,SAAO,EAAE,UAAF,GAAe,WAAf,EAA4B;AACjC,WAAO,SAAS,UAAT,CAAP,GAA8B,SAAS,UAAT,CAA9B,CADiC;GAAnC;AAGA,SAAO,EAAE,YAAF,GAAiB,aAAjB,EAAgC;AACrC,WAAO,SAAS,QAAQ,YAAR,CAAT,CAAP,GAAyC,KAAK,WAAL,CAAzC,CADqC;GAAvC;AAGA,SAAO,MAAP,CAnBiD;CAAnD;;AAsBA,OAAO,OAAP,GAAiB,gBAAjB","file":"composeArgsRight-compiled.js","sourcesContent":["/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders) {\n  var holdersIndex = -1,\n      holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      rightIndex = -1,\n      rightLength = partials.length,\n      result = Array(argsLength + rightLength);\n\n  while (++argsIndex < argsLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    result[offset + holders[holdersIndex]] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n"]}