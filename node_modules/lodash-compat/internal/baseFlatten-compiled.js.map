{"version":3,"sources":["baseFlatten.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,aAAR,CAAZ;IACA,cAAc,QAAQ,qBAAR,CAAd;IACA,UAAU,QAAQ,iBAAR,CAAV;IACA,cAAc,QAAQ,eAAR,CAAd;IACA,eAAe,QAAQ,gBAAR,CAAf;;;;;;;;;;;;;AAaJ,SAAS,WAAT,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,QAApC,EAA8C,MAA9C,EAAsD;AACpD,aAAW,SAAS,EAAT,CAAX,CADoD;;AAGpD,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,MAAM,MAAN,CAJuC;;AAMpD,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAR,CADmB;AAEvB,QAAI,aAAa,KAAb,KAAuB,YAAY,KAAZ,CAAvB,KACC,YAAY,QAAQ,KAAR,CAAZ,IAA8B,YAAY,KAAZ,CAA9B,CADD,EACoD;AACtD,UAAI,MAAJ,EAAY;;AAEV,oBAAY,KAAZ,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC,MAArC,EAFU;OAAZ,MAGO;AACL,kBAAU,MAAV,EAAkB,KAAlB,EADK;OAHP;KAFF,MAQO,IAAI,CAAC,QAAD,EAAW;AACpB,aAAO,OAAO,MAAP,CAAP,GAAwB,KAAxB,CADoB;KAAf;GAVT;AAcA,SAAO,MAAP,CApBoD;CAAtD;;AAuBA,OAAO,OAAP,GAAiB,WAAjB","file":"baseFlatten-compiled.js","sourcesContent":["var arrayPush = require('./arrayPush'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    if (isObjectLike(value) && isArrayLike(value) &&\n        (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n"]}