{"version":3,"sources":["arrayReduceRight.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,QAAjC,EAA2C,WAA3C,EAAwD,aAAxD,EAAuE;AACrE,MAAI,SAAS,MAAM,MAAN,CADwD;AAErE,MAAI,iBAAiB,MAAjB,EAAyB;AAC3B,kBAAc,MAAM,EAAE,MAAF,CAApB,CAD2B;GAA7B;AAGA,SAAO,QAAP,EAAiB;AACf,kBAAc,SAAS,WAAT,EAAsB,MAAM,MAAN,CAAtB,EAAqC,MAArC,EAA6C,KAA7C,CAAd,CADe;GAAjB;AAGA,SAAO,WAAP,CARqE;CAAvE;;AAWA,OAAO,OAAP,GAAiB,gBAAjB","file":"arrayReduceRight-compiled.js","sourcesContent":["/**\n * A specialized version of `_.reduceRight` for arrays without support for\n * callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initFromArray] Specify using the last element of `array`\n *  as the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n  var length = array.length;\n  if (initFromArray && length) {\n    accumulator = array[--length];\n  }\n  while (length--) {\n    accumulator = iteratee(accumulator, array[length], length, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduceRight;\n"]}