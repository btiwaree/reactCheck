{"version":3,"sources":["MapCache.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,aAAR,CAAZ;IACA,SAAS,QAAQ,UAAR,CAAT;IACA,SAAS,QAAQ,UAAR,CAAT;IACA,SAAS,QAAQ,UAAR,CAAT;;;;;;;;;;AAUJ,SAAS,QAAT,GAAoB;AAClB,OAAK,QAAL,GAAgB,EAAhB,CADkB;CAApB;;;AAKA,SAAS,SAAT,CAAmB,QAAnB,IAA+B,SAA/B;AACA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,MAAzB;AACA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,MAAzB;AACA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,MAAzB;;AAEA,OAAO,OAAP,GAAiB,QAAjB","file":"MapCache-compiled.js","sourcesContent":["var mapDelete = require('./mapDelete'),\n    mapGet = require('./mapGet'),\n    mapHas = require('./mapHas'),\n    mapSet = require('./mapSet');\n\n/**\n * Creates a cache object to store key/value pairs.\n *\n * @private\n * @static\n * @name Cache\n * @memberOf _.memoize\n */\nfunction MapCache() {\n  this.__data__ = {};\n}\n\n// Add functions to the `Map` cache.\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n"]}