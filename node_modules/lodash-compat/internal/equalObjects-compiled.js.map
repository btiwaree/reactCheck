{"version":3,"sources":["equalObjects.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,gBAAR,CAAP;;;AAGJ,IAAI,cAAc,OAAO,SAAP;;;AAGlB,IAAI,iBAAiB,YAAY,cAAZ;;;;;;;;;;;;;;;;AAgBrB,SAAS,YAAT,CAAsB,MAAtB,EAA8B,KAA9B,EAAqC,SAArC,EAAgD,UAAhD,EAA4D,OAA5D,EAAqE,MAArE,EAA6E,MAA7E,EAAqF;AACnF,MAAI,WAAW,KAAK,MAAL,CAAX;MACA,YAAY,SAAS,MAAT;MACZ,WAAW,KAAK,KAAL,CAAX;MACA,YAAY,SAAS,MAAT,CAJmE;;AAMnF,MAAI,aAAa,SAAb,IAA0B,CAAC,OAAD,EAAU;AACtC,WAAO,KAAP,CADsC;GAAxC;AAGA,MAAI,QAAQ,SAAR,CAT+E;AAUnF,SAAO,OAAP,EAAgB;AACd,QAAI,MAAM,SAAS,KAAT,CAAN,CADU;AAEd,QAAI,EAAE,UAAU,OAAO,KAAP,GAAe,eAAe,IAAf,CAAoB,KAApB,EAA2B,GAA3B,CAAzB,CAAF,EAA6D;AAC/D,aAAO,KAAP,CAD+D;KAAjE;GAFF;AAMA,MAAI,WAAW,OAAX,CAhB+E;AAiBnF,SAAO,EAAE,KAAF,GAAU,SAAV,EAAqB;AAC1B,UAAM,SAAS,KAAT,CAAN,CAD0B;AAE1B,QAAI,WAAW,OAAO,GAAP,CAAX;QACA,WAAW,MAAM,GAAN,CAAX;QACA,SAAS,aAAa,WAAW,UAAU,QAAV,GAAqB,QAArB,EAA+B,UAAS,QAAT,GAAoB,QAApB,EAA8B,GAAxE,CAAb,GAA4F,SAA5F;;;AAJa,QAOtB,EAAE,WAAW,SAAX,GAAuB,UAAU,QAAV,EAAoB,QAApB,EAA8B,UAA9B,EAA0C,OAA1C,EAAmD,MAAnD,EAA2D,MAA3D,CAAvB,GAA4F,MAA5F,CAAF,EAAuG;AACzG,aAAO,KAAP,CADyG;KAA3G;AAGA,iBAAa,WAAW,OAAO,aAAP,CAAxB,CAV0B;GAA5B;AAYA,MAAI,CAAC,QAAD,EAAW;AACb,QAAI,UAAU,OAAO,WAAP;QACV,UAAU,MAAM,WAAN;;;AAFD,QAKT,WAAW,OAAX,IACC,iBAAiB,MAAjB,IAA2B,iBAAiB,KAAjB,IAC5B,EAAE,OAAO,OAAP,IAAkB,UAAlB,IAAgC,mBAAmB,OAAnB,IAChC,OAAO,OAAP,IAAkB,UAAlB,IAAgC,mBAAmB,OAAnB,CADlC,EAC+D;AACjE,aAAO,KAAP,CADiE;KAHnE;GALF;AAYA,SAAO,IAAP,CAzCmF;CAArF;;AA4CA,OAAO,OAAP,GAAiB,YAAjB","file":"equalObjects-compiled.js","sourcesContent":["var keys = require('../object/keys');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalObjects;\n"]}