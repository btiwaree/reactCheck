{"version":3,"sources":["isLength.js"],"names":[],"mappings":";;;;AAIA,IAAI,mBAAmB,gBAAnB;;;;;;;;;;;AAWJ,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,SAAO,OAAO,KAAP,IAAgB,QAAhB,IAA4B,QAAQ,CAAC,CAAD,IAAM,QAAQ,CAAR,IAAa,CAAb,IAAkB,SAAS,gBAAT,CAD5C;CAAzB;;AAIA,OAAO,OAAP,GAAiB,QAAjB","file":"isLength-compiled.js","sourcesContent":["/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n"]}