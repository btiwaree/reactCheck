{"version":3,"sources":["pickByArray.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAX;;;;;;;;;;;AAWJ,SAAS,WAAT,CAAqB,MAArB,EAA6B,KAA7B,EAAoC;AAClC,WAAS,SAAS,MAAT,CAAT,CADkC;;AAGlC,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,MAAM,MAAN;MACT,SAAS,EAAT,CAL8B;;AAOlC,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,QAAI,MAAM,MAAM,KAAN,CAAN,CADmB;AAEvB,QAAI,OAAO,MAAP,EAAe;AACjB,aAAO,GAAP,IAAc,OAAO,GAAP,CAAd,CADiB;KAAnB;GAFF;AAMA,SAAO,MAAP,CAbkC;CAApC;;AAgBA,OAAO,OAAP,GAAiB,WAAjB","file":"pickByArray-compiled.js","sourcesContent":["var toObject = require('./toObject');\n\n/**\n * A specialized version of `_.pick` which picks `object` properties specified\n * by `props`.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property names to pick.\n * @returns {Object} Returns the new object.\n */\nfunction pickByArray(object, props) {\n  object = toObject(object);\n\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index];\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = pickByArray;\n"]}