{"version":3,"sources":["baseReduce.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA,SAAS,UAAT,CAAoB,UAApB,EAAgC,QAAhC,EAA0C,WAA1C,EAAuD,kBAAvD,EAA2E,QAA3E,EAAqF;AACnF,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AACtD,kBAAc,sBACT,qBAAqB,KAArB,EAA4B,KAA5B,CADS,GAEV,SAAS,WAAT,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,UAApC,CAFU,CADwC;GAAnC,CAArB,CADmF;AAMnF,SAAO,WAAP,CANmF;CAArF;;AASA,OAAO,OAAP,GAAiB,UAAjB","file":"baseReduce-compiled.js","sourcesContent":["/**\n * The base implementation of `_.reduce` and `_.reduceRight` without support\n * for callback shorthands and `this` binding, which iterates over `collection`\n * using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initFromCollection Specify using the first or last element\n *  of `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initFromCollection\n      ? (initFromCollection = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n"]}