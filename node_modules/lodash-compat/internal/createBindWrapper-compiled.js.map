{"version":3,"sources":["createBindWrapper.js"],"names":[],"mappings":"AAAA,IAAI,oBAAoB,QAAQ,qBAAR,CAApB;;;;;;;;;;;AAWJ,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,OAAjC,EAA0C;AACxC,MAAI,OAAO,kBAAkB,IAAlB,CAAP,CADoC;;AAGxC,WAAS,OAAT,GAAmB;AACjB,QAAI,KAAK,IAAC,IAAQ,SAAS,MAAT,IAAmB,gBAAgB,OAAhB,GAA2B,IAAvD,GAA8D,IAA9D,CADQ;AAEjB,WAAO,GAAG,KAAH,CAAS,OAAT,EAAkB,SAAlB,CAAP,CAFiB;GAAnB;AAIA,SAAO,OAAP,CAPwC;CAA1C;;AAUA,OAAO,OAAP,GAAiB,iBAAjB","file":"createBindWrapper-compiled.js","sourcesContent":["var createCtorWrapper = require('./createCtorWrapper');\n\n/**\n * Creates a function that wraps `func` and invokes it with the `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new bound function.\n */\nfunction createBindWrapper(func, thisArg) {\n  var Ctor = createCtorWrapper(func);\n\n  function wrapper() {\n    var fn = (this && this !== global && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(thisArg, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBindWrapper;\n"]}