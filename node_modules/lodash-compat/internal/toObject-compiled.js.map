{"version":3,"sources":["toObject.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,kBAAR,CAAX;IACA,WAAW,QAAQ,kBAAR,CAAX;IACA,UAAU,QAAQ,YAAR,CAAV;;;;;;;;;AASJ,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,MAAI,QAAQ,cAAR,IAA0B,SAAS,KAAT,CAA1B,EAA2C;AAC7C,QAAI,QAAQ,CAAC,CAAD;QACR,SAAS,MAAM,MAAN;QACT,SAAS,OAAO,KAAP,CAAT,CAHyC;;AAK7C,WAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,aAAO,KAAP,IAAgB,MAAM,MAAN,CAAa,KAAb,CAAhB,CADuB;KAAzB;AAGA,WAAO,MAAP,CAR6C;GAA/C;AAUA,SAAO,SAAS,KAAT,IAAkB,KAAlB,GAA0B,OAAO,KAAP,CAA1B,CAXgB;CAAzB;;AAcA,OAAO,OAAP,GAAiB,QAAjB","file":"toObject-compiled.js","sourcesContent":["var isObject = require('../lang/isObject'),\n    isString = require('../lang/isString'),\n    support = require('../support');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  if (support.unindexedChars && isString(value)) {\n    var index = -1,\n        length = value.length,\n        result = Object(value);\n\n    while (++index < length) {\n      result[index] = value.charAt(index);\n    }\n    return result;\n  }\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n"]}