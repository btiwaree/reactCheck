{"version":3,"sources":["toIterable.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,eAAR,CAAd;IACA,WAAW,QAAQ,kBAAR,CAAX;IACA,WAAW,QAAQ,kBAAR,CAAX;IACA,UAAU,QAAQ,YAAR,CAAV;IACA,SAAS,QAAQ,kBAAR,CAAT;;;;;;;;;AASJ,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB,MAAI,SAAS,IAAT,EAAe;AACjB,WAAO,EAAP,CADiB;GAAnB;AAGA,MAAI,CAAC,YAAY,KAAZ,CAAD,EAAqB;AACvB,WAAO,OAAO,KAAP,CAAP,CADuB;GAAzB;AAGA,MAAI,QAAQ,cAAR,IAA0B,SAAS,KAAT,CAA1B,EAA2C;AAC7C,WAAO,MAAM,KAAN,CAAY,EAAZ,CAAP,CAD6C;GAA/C;AAGA,SAAO,SAAS,KAAT,IAAkB,KAAlB,GAA0B,OAAO,KAAP,CAA1B,CAVkB;CAA3B;;AAaA,OAAO,OAAP,GAAiB,UAAjB","file":"toIterable-compiled.js","sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isObject = require('../lang/isObject'),\n    isString = require('../lang/isString'),\n    support = require('../support'),\n    values = require('../object/values');\n\n/**\n * Converts `value` to an array-like object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array|Object} Returns the array-like object.\n */\nfunction toIterable(value) {\n  if (value == null) {\n    return [];\n  }\n  if (!isArrayLike(value)) {\n    return values(value);\n  }\n  if (support.unindexedChars && isString(value)) {\n    return value.split('');\n  }\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toIterable;\n"]}