{"version":3,"sources":["baseSlice.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,KAA1B,EAAiC,GAAjC,EAAsC;AACpC,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,MAAM,MAAN,CAFuB;;AAIpC,UAAQ,SAAS,IAAT,GAAgB,CAAhB,GAAqB,CAAC,KAAD,IAAU,CAAV,CAJO;AAKpC,MAAI,QAAQ,CAAR,EAAW;AACb,YAAQ,CAAC,KAAD,GAAS,MAAT,GAAkB,CAAlB,GAAuB,SAAS,KAAT,CADlB;GAAf;AAGA,QAAM,GAAC,KAAQ,SAAR,IAAqB,MAAM,MAAN,GAAgB,MAAtC,GAAgD,CAAC,GAAD,IAAQ,CAAR,CARlB;AASpC,MAAI,MAAM,CAAN,EAAS;AACX,WAAO,MAAP,CADW;GAAb;AAGA,WAAS,QAAQ,GAAR,GAAc,CAAd,GAAmB,GAAC,GAAM,KAAN,KAAiB,CAAlB,CAZQ;AAapC,aAAW,CAAX,CAboC;;AAepC,MAAI,SAAS,MAAM,MAAN,CAAT,CAfgC;AAgBpC,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,WAAO,KAAP,IAAgB,MAAM,QAAQ,KAAR,CAAtB,CADuB;GAAzB;AAGA,SAAO,MAAP,CAnBoC;CAAtC;;AAsBA,OAAO,OAAP,GAAiB,SAAjB","file":"baseSlice-compiled.js","sourcesContent":["/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n"]}