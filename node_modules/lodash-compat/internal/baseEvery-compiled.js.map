{"version":3,"sources":["baseEvery.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAX;;;;;;;;;;;;AAYJ,SAAS,SAAT,CAAmB,UAAnB,EAA+B,SAA/B,EAA0C;AACxC,MAAI,SAAS,IAAT,CADoC;AAExC,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AACtD,aAAS,CAAC,CAAC,UAAU,KAAV,EAAiB,KAAjB,EAAwB,UAAxB,CAAD,CAD4C;AAEtD,WAAO,MAAP,CAFsD;GAAnC,CAArB,CAFwC;AAMxC,SAAO,MAAP,CANwC;CAA1C;;AASA,OAAO,OAAP,GAAiB,SAAjB","file":"baseEvery-compiled.js","sourcesContent":["var baseEach = require('./baseEach');\n\n/**\n * The base implementation of `_.every` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n"]}