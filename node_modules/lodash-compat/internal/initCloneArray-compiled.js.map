{"version":3,"sources":["initCloneArray.js"],"names":[],"mappings":";AACA,IAAI,cAAc,OAAO,SAAP;;;AAGlB,IAAI,iBAAiB,YAAY,cAAZ;;;;;;;;;AASrB,SAAS,cAAT,CAAwB,KAAxB,EAA+B;AAC7B,MAAI,SAAS,MAAM,MAAN;MACT,SAAS,IAAI,MAAM,WAAN,CAAkB,MAAtB,CAAT;;;AAFyB,MAKzB,UAAU,OAAO,MAAM,CAAN,CAAP,IAAmB,QAAnB,IAA+B,eAAe,IAAf,CAAoB,KAApB,EAA2B,OAA3B,CAAzC,EAA8E;AAChF,WAAO,KAAP,GAAe,MAAM,KAAN,CADiE;AAEhF,WAAO,KAAP,GAAe,MAAM,KAAN,CAFiE;GAAlF;AAIA,SAAO,MAAP,CAT6B;CAA/B;;AAYA,OAAO,OAAP,GAAiB,cAAjB","file":"initCloneArray-compiled.js","sourcesContent":["/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n"]}