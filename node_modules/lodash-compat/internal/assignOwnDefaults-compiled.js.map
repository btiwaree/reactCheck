{"version":3,"sources":["assignOwnDefaults.js"],"names":[],"mappings":";AACA,IAAI,cAAc,OAAO,SAAP;;;AAGlB,IAAI,iBAAiB,YAAY,cAAZ;;;;;;;;;;;;;;;AAerB,SAAS,iBAAT,CAA2B,WAA3B,EAAwC,WAAxC,EAAqD,GAArD,EAA0D,MAA1D,EAAkE;AAChE,SAAO,WAAC,KAAgB,SAAhB,IAA6B,CAAC,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CAAD,GACjC,WADG,GAEH,WAFG,CADyD;CAAlE;;AAMA,OAAO,OAAP,GAAiB,iBAAjB","file":"assignOwnDefaults-compiled.js","sourcesContent":["/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.template` to customize its `_.assign` use.\n *\n * **Note:** This function is like `assignDefaults` except that it ignores\n * inherited property values when checking if a property is `undefined`.\n *\n * @private\n * @param {*} objectValue The destination object property value.\n * @param {*} sourceValue The source object property value.\n * @param {string} key The key associated with the object and source values.\n * @param {Object} object The destination object.\n * @returns {*} Returns the value to assign to the destination object.\n */\nfunction assignOwnDefaults(objectValue, sourceValue, key, object) {\n  return (objectValue === undefined || !hasOwnProperty.call(object, key))\n    ? sourceValue\n    : objectValue;\n}\n\nmodule.exports = assignOwnDefaults;\n"]}