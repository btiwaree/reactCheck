{"version":3,"sources":["baseSortByOrder.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAX;IACA,eAAe,QAAQ,gBAAR,CAAf;IACA,UAAU,QAAQ,WAAR,CAAV;IACA,aAAa,QAAQ,cAAR,CAAb;IACA,kBAAkB,QAAQ,mBAAR,CAAlB;;;;;;;;;;;AAWJ,SAAS,eAAT,CAAyB,UAAzB,EAAqC,SAArC,EAAgD,MAAhD,EAAwD;AACtD,MAAI,QAAQ,CAAC,CAAD,CAD0C;;AAGtD,cAAY,SAAS,SAAT,EAAoB,UAAS,QAAT,EAAmB;AAAE,WAAO,aAAa,QAAb,CAAP,CAAF;GAAnB,CAAhC,CAHsD;;AAKtD,MAAI,SAAS,QAAQ,UAAR,EAAoB,UAAS,KAAT,EAAgB;AAC/C,QAAI,WAAW,SAAS,SAAT,EAAoB,UAAS,QAAT,EAAmB;AAAE,aAAO,SAAS,KAAT,CAAP,CAAF;KAAnB,CAA/B,CAD2C;AAE/C,WAAO,EAAE,YAAY,QAAZ,EAAsB,SAAS,EAAE,KAAF,EAAS,SAAS,KAAT,EAAjD,CAF+C;GAAhB,CAA7B,CALkD;;AAUtD,SAAO,WAAW,MAAX,EAAmB,UAAS,MAAT,EAAiB,KAAjB,EAAwB;AAChD,WAAO,gBAAgB,MAAhB,EAAwB,KAAxB,EAA+B,MAA/B,CAAP,CADgD;GAAxB,CAA1B,CAVsD;CAAxD;;AAeA,OAAO,OAAP,GAAiB,eAAjB","file":"baseSortByOrder-compiled.js","sourcesContent":["var arrayMap = require('./arrayMap'),\n    baseCallback = require('./baseCallback'),\n    baseMap = require('./baseMap'),\n    baseSortBy = require('./baseSortBy'),\n    compareMultiple = require('./compareMultiple');\n\n/**\n * The base implementation of `_.sortByOrder` without param guards.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {boolean[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseSortByOrder(collection, iteratees, orders) {\n  var index = -1;\n\n  iteratees = arrayMap(iteratees, function(iteratee) { return baseCallback(iteratee); });\n\n  var result = baseMap(collection, function(value) {\n    var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseSortByOrder;\n"]}