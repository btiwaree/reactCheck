{"version":3,"sources":["arrayFilter.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,WAAT,CAAqB,KAArB,EAA4B,SAA5B,EAAuC;AACrC,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,MAAM,MAAN;MACT,WAAW,CAAC,CAAD;MACX,SAAS,EAAT,CAJiC;;AAMrC,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAR,CADmB;AAEvB,QAAI,UAAU,KAAV,EAAiB,KAAjB,EAAwB,KAAxB,CAAJ,EAAoC;AAClC,aAAO,EAAE,QAAF,CAAP,GAAqB,KAArB,CADkC;KAApC;GAFF;AAMA,SAAO,MAAP,CAZqC;CAAvC;;AAeA,OAAO,OAAP,GAAiB,WAAjB","file":"arrayFilter-compiled.js","sourcesContent":["/**\n * A specialized version of `_.filter` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"]}