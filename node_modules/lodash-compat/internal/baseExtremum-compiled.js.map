{"version":3,"sources":["baseExtremum.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAX;;;;;;;;;;;;;;AAcJ,SAAS,YAAT,CAAsB,UAAtB,EAAkC,QAAlC,EAA4C,UAA5C,EAAwD,OAAxD,EAAiE;AAC/D,MAAI,WAAW,OAAX;MACA,SAAS,QAAT,CAF2D;;AAI/D,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AACtD,QAAI,UAAU,CAAC,SAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,CAAD,CADwC;AAEtD,QAAI,WAAW,OAAX,EAAoB,QAApB,KAAkC,YAAY,OAAZ,IAAuB,YAAY,MAAZ,EAAqB;AAChF,iBAAW,OAAX,CADgF;AAEhF,eAAS,KAAT,CAFgF;KAAlF;GAFmB,CAArB,CAJ+D;AAW/D,SAAO,MAAP,CAX+D;CAAjE;;AAcA,OAAO,OAAP,GAAiB,YAAjB","file":"baseExtremum-compiled.js","sourcesContent":["var baseEach = require('./baseEach');\n\n/**\n * Gets the extremum value of `collection` invoking `iteratee` for each value\n * in `collection` to generate the criterion by which the value is ranked.\n * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} comparator The function used to compare values.\n * @param {*} exValue The initial extremum value.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(collection, iteratee, comparator, exValue) {\n  var computed = exValue,\n      result = computed;\n\n  baseEach(collection, function(value, index, collection) {\n    var current = +iteratee(value, index, collection);\n    if (comparator(current, computed) || (current === exValue && current === result)) {\n      computed = current;\n      result = value;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseExtremum;\n"]}