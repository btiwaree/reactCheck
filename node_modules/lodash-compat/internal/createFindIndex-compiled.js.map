{"version":3,"sources":["createFindIndex.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,gBAAR,CAAf;IACA,gBAAgB,QAAQ,iBAAR,CAAhB;;;;;;;;;AASJ,SAAS,eAAT,CAAyB,SAAzB,EAAoC;AAClC,SAAO,UAAS,KAAT,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC;AACzC,QAAI,EAAE,SAAS,MAAM,MAAN,CAAX,EAA0B;AAC5B,aAAO,CAAC,CAAD,CADqB;KAA9B;AAGA,gBAAY,aAAa,SAAb,EAAwB,OAAxB,EAAiC,CAAjC,CAAZ,CAJyC;AAKzC,WAAO,cAAc,KAAd,EAAqB,SAArB,EAAgC,SAAhC,CAAP,CALyC;GAApC,CAD2B;CAApC;;AAUA,OAAO,OAAP,GAAiB,eAAjB","file":"createFindIndex-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseFindIndex = require('./baseFindIndex');\n\n/**\n * Creates a `_.findIndex` or `_.findLastIndex` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFindIndex(fromRight) {\n  return function(array, predicate, thisArg) {\n    if (!(array && array.length)) {\n      return -1;\n    }\n    predicate = baseCallback(predicate, thisArg, 3);\n    return baseFindIndex(array, predicate, fromRight);\n  };\n}\n\nmodule.exports = createFindIndex;\n"]}