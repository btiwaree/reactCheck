{"version":3,"sources":["baseFill.js"],"names":[],"mappings":";;;;;;;;;;AAUA,SAAS,QAAT,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC,GAAvC,EAA4C;AAC1C,MAAI,SAAS,MAAM,MAAN,CAD6B;;AAG1C,UAAQ,SAAS,IAAT,GAAgB,CAAhB,GAAqB,CAAC,KAAD,IAAU,CAAV,CAHa;AAI1C,MAAI,QAAQ,CAAR,EAAW;AACb,YAAQ,CAAC,KAAD,GAAS,MAAT,GAAkB,CAAlB,GAAuB,SAAS,KAAT,CADlB;GAAf;AAGA,QAAM,GAAC,KAAQ,SAAR,IAAqB,MAAM,MAAN,GAAgB,MAAtC,GAAgD,CAAC,GAAD,IAAQ,CAAR,CAPZ;AAQ1C,MAAI,MAAM,CAAN,EAAS;AACX,WAAO,MAAP,CADW;GAAb;AAGA,WAAS,QAAQ,GAAR,GAAc,CAAd,GAAmB,QAAQ,CAAR,CAXc;AAY1C,aAAW,CAAX,CAZ0C;;AAc1C,SAAO,QAAQ,MAAR,EAAgB;AACrB,UAAM,OAAN,IAAiB,KAAjB,CADqB;GAAvB;AAGA,SAAO,KAAP,CAjB0C;CAA5C;;AAoBA,OAAO,OAAP,GAAiB,QAAjB","file":"baseFill-compiled.js","sourcesContent":["/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : (end >>> 0);\n  start >>>= 0;\n\n  while (start < length) {\n    array[start++] = value;\n  }\n  return array;\n}\n\nmodule.exports = baseFill;\n"]}