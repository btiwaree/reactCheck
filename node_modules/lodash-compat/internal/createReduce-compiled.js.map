{"version":3,"sources":["createReduce.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,gBAAR,CAAf;IACA,aAAa,QAAQ,cAAR,CAAb;IACA,UAAU,QAAQ,iBAAR,CAAV;;;;;;;;;;AAUJ,SAAS,YAAT,CAAsB,SAAtB,EAAiC,QAAjC,EAA2C;AACzC,SAAO,UAAS,UAAT,EAAqB,QAArB,EAA+B,WAA/B,EAA4C,OAA5C,EAAqD;AAC1D,QAAI,gBAAgB,UAAU,MAAV,GAAmB,CAAnB,CADsC;AAE1D,WAAO,OAAQ,QAAP,IAAmB,UAAnB,IAAiC,YAAY,SAAZ,IAAyB,QAAQ,UAAR,CAA1D,GACJ,UAAU,UAAV,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,aAA7C,CADG,GAEH,WAAW,UAAX,EAAuB,aAAa,QAAb,EAAuB,OAAvB,EAAgC,CAAhC,CAAvB,EAA2D,WAA3D,EAAwE,aAAxE,EAAuF,QAAvF,CAFG,CAFmD;GAArD,CADkC;CAA3C;;AASA,OAAO,OAAP,GAAiB,YAAjB","file":"createReduce-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseReduce = require('./baseReduce'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a function for `_.reduce` or `_.reduceRight`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over an array.\n * @param {Function} eachFunc The function to iterate over a collection.\n * @returns {Function} Returns the new each function.\n */\nfunction createReduce(arrayFunc, eachFunc) {\n  return function(collection, iteratee, accumulator, thisArg) {\n    var initFromArray = arguments.length < 3;\n    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n      ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n      : baseReduce(collection, baseCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n  };\n}\n\nmodule.exports = createReduce;\n"]}