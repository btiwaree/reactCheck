{"version":3,"sources":["invokePath.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,WAAR,CAAV;IACA,YAAY,QAAQ,aAAR,CAAZ;IACA,QAAQ,QAAQ,SAAR,CAAR;IACA,OAAO,QAAQ,eAAR,CAAP;IACA,SAAS,QAAQ,UAAR,CAAT;;;;;;;;;;;AAWJ,SAAS,UAAT,CAAoB,MAApB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC;AACtC,MAAI,UAAU,IAAV,IAAkB,CAAC,MAAM,IAAN,EAAY,MAAZ,CAAD,EAAsB;AAC1C,WAAO,OAAO,IAAP,CAAP,CAD0C;AAE1C,aAAS,KAAK,MAAL,IAAe,CAAf,GAAmB,MAAnB,GAA4B,QAAQ,MAAR,EAAgB,UAAU,IAAV,EAAgB,CAAhB,EAAmB,CAAC,CAAD,CAAnC,CAA5B,CAFiC;AAG1C,WAAO,KAAK,IAAL,CAAP,CAH0C;GAA5C;AAKA,MAAI,OAAO,UAAU,IAAV,GAAiB,MAAjB,GAA0B,OAAO,IAAP,CAA1B,CAN2B;AAOtC,SAAO,QAAQ,IAAR,GAAe,SAAf,GAA2B,KAAK,KAAL,CAAW,MAAX,EAAmB,IAAnB,CAA3B,CAP+B;CAAxC;;AAUA,OAAO,OAAP,GAAiB,UAAjB","file":"invokePath-compiled.js","sourcesContent":["var baseGet = require('./baseGet'),\n    baseSlice = require('./baseSlice'),\n    isKey = require('./isKey'),\n    last = require('../array/last'),\n    toPath = require('./toPath');\n\n/**\n * Invokes the method at `path` on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the method to invoke.\n * @param {Array} args The arguments to invoke the method with.\n * @returns {*} Returns the result of the invoked method.\n */\nfunction invokePath(object, path, args) {\n  if (object != null && !isKey(path, object)) {\n    path = toPath(path);\n    object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    path = last(path);\n  }\n  var func = object == null ? object : object[path];\n  return func == null ? undefined : func.apply(object, args);\n}\n\nmodule.exports = invokePath;\n"]}