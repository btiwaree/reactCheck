{"version":3,"sources":["replaceHolders.js"],"names":[],"mappings":";AACA,IAAI,cAAc,wBAAd;;;;;;;;;;;AAWJ,SAAS,cAAT,CAAwB,KAAxB,EAA+B,WAA/B,EAA4C;AAC1C,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,MAAM,MAAN;MACT,WAAW,CAAC,CAAD;MACX,SAAS,EAAT,CAJsC;;AAM1C,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,QAAI,MAAM,KAAN,MAAiB,WAAjB,EAA8B;AAChC,YAAM,KAAN,IAAe,WAAf,CADgC;AAEhC,aAAO,EAAE,QAAF,CAAP,GAAqB,KAArB,CAFgC;KAAlC;GADF;AAMA,SAAO,MAAP,CAZ0C;CAA5C;;AAeA,OAAO,OAAP,GAAiB,cAAjB","file":"replaceHolders-compiled.js","sourcesContent":["/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    if (array[index] === placeholder) {\n      array[index] = PLACEHOLDER;\n      result[++resIndex] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n"]}