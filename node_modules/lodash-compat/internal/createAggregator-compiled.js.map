{"version":3,"sources":["createAggregator.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,gBAAR,CAAf;IACA,WAAW,QAAQ,YAAR,CAAX;IACA,UAAU,QAAQ,iBAAR,CAAV;;;;;;;;;;AAUJ,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,WAAlC,EAA+C;AAC7C,SAAO,UAAS,UAAT,EAAqB,QAArB,EAA+B,OAA/B,EAAwC;AAC7C,QAAI,SAAS,cAAc,aAAd,GAA8B,EAA9B,CADgC;AAE7C,eAAW,aAAa,QAAb,EAAuB,OAAvB,EAAgC,CAAhC,CAAX,CAF6C;;AAI7C,QAAI,QAAQ,UAAR,CAAJ,EAAyB;AACvB,UAAI,QAAQ,CAAC,CAAD;UACR,SAAS,WAAW,MAAX,CAFU;;AAIvB,aAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,YAAI,QAAQ,WAAW,KAAX,CAAR,CADmB;AAEvB,eAAO,MAAP,EAAe,KAAf,EAAsB,SAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,CAAtB,EAA0D,UAA1D,EAFuB;OAAzB;KAJF,MAQO;AACL,eAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,UAArB,EAAiC;AACpD,eAAO,MAAP,EAAe,KAAf,EAAsB,SAAS,KAAT,EAAgB,GAAhB,EAAqB,UAArB,CAAtB,EAAwD,UAAxD,EADoD;OAAjC,CAArB,CADK;KARP;AAaA,WAAO,MAAP,CAjB6C;GAAxC,CADsC;CAA/C;;AAsBA,OAAO,OAAP,GAAiB,gBAAjB","file":"createAggregator-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseEach = require('./baseEach'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n *\n * @private\n * @param {Function} setter The function to set keys and values of the accumulator object.\n * @param {Function} [initializer] The function to initialize the accumulator object.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee, thisArg) {\n    var result = initializer ? initializer() : {};\n    iteratee = baseCallback(iteratee, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        setter(result, value, iteratee(value, index, collection), collection);\n      }\n    } else {\n      baseEach(collection, function(value, key, collection) {\n        setter(result, value, iteratee(value, key, collection), collection);\n      });\n    }\n    return result;\n  };\n}\n\nmodule.exports = createAggregator;\n"]}