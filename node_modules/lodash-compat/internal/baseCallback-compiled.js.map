{"version":3,"sources":["baseCallback.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,eAAR,CAAd;IACA,sBAAsB,QAAQ,uBAAR,CAAtB;IACA,eAAe,QAAQ,gBAAR,CAAf;IACA,WAAW,QAAQ,qBAAR,CAAX;IACA,WAAW,QAAQ,qBAAR,CAAX;;;;;;;;;;;;AAYJ,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC,QAArC,EAA+C;AAC7C,MAAI,OAAO,OAAO,IAAP,CADkC;AAE7C,MAAI,QAAQ,UAAR,EAAoB;AACtB,WAAO,YAAY,SAAZ,GACH,IADG,GAEH,aAAa,IAAb,EAAmB,OAAnB,EAA4B,QAA5B,CAFG,CADe;GAAxB;AAKA,MAAI,QAAQ,IAAR,EAAc;AAChB,WAAO,QAAP,CADgB;GAAlB;AAGA,MAAI,QAAQ,QAAR,EAAkB;AACpB,WAAO,YAAY,IAAZ,CAAP,CADoB;GAAtB;AAGA,SAAO,YAAY,SAAZ,GACH,SAAS,IAAT,CADG,GAEH,oBAAoB,IAApB,EAA0B,OAA1B,CAFG,CAbsC;CAA/C;;AAkBA,OAAO,OAAP,GAAiB,YAAjB","file":"baseCallback-compiled.js","sourcesContent":["var baseMatches = require('./baseMatches'),\n    baseMatchesProperty = require('./baseMatchesProperty'),\n    bindCallback = require('./bindCallback'),\n    identity = require('../utility/identity'),\n    property = require('../utility/property');\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\nmodule.exports = baseCallback;\n"]}