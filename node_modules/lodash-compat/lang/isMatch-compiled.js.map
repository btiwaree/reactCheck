{"version":3,"sources":["isMatch.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAd;IACA,eAAe,QAAQ,0BAAR,CAAf;IACA,eAAe,QAAQ,0BAAR,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCJ,SAAS,OAAT,CAAiB,MAAjB,EAAyB,MAAzB,EAAiC,UAAjC,EAA6C,OAA7C,EAAsD;AACpD,eAAa,OAAO,UAAP,IAAqB,UAArB,GAAkC,aAAa,UAAb,EAAyB,OAAzB,EAAkC,CAAlC,CAAlC,GAAyE,SAAzE,CADuC;AAEpD,SAAO,YAAY,MAAZ,EAAoB,aAAa,MAAb,CAApB,EAA0C,UAA1C,CAAP,CAFoD;CAAtD;;AAKA,OAAO,OAAP,GAAiB,OAAjB","file":"isMatch-compiled.js","sourcesContent":["var baseIsMatch = require('../internal/baseIsMatch'),\n    bindCallback = require('../internal/bindCallback'),\n    getMatchData = require('../internal/getMatchData');\n\n/**\n * Performs a deep comparison between `object` and `source` to determine if\n * `object` contains equivalent property values. If `customizer` is provided\n * it's invoked to compare values. If `customizer` returns `undefined`\n * comparisons are handled by the method instead. The `customizer` is bound\n * to `thisArg` and invoked with three arguments: (value, other, index|key).\n *\n * **Note:** This method supports comparing properties of arrays, booleans,\n * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n * and DOM nodes are **not** supported. Provide a customizer function to extend\n * support for comparing other values.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Function} [customizer] The function to customize value comparisons.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * var object = { 'user': 'fred', 'age': 40 };\n *\n * _.isMatch(object, { 'age': 40 });\n * // => true\n *\n * _.isMatch(object, { 'age': 36 });\n * // => false\n *\n * // using a customizer callback\n * var object = { 'greeting': 'hello' };\n * var source = { 'greeting': 'hi' };\n *\n * _.isMatch(object, source, function(value, other) {\n *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n * });\n * // => true\n */\nfunction isMatch(object, source, customizer, thisArg) {\n  customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n  return baseIsMatch(object, getMatchData(source), customizer);\n}\n\nmodule.exports = isMatch;\n"]}