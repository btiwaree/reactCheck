{"version":3,"sources":["toArray.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAZ;IACA,YAAY,QAAQ,uBAAR,CAAZ;IACA,WAAW,QAAQ,sBAAR,CAAX;IACA,WAAW,QAAQ,YAAR,CAAX;IACA,UAAU,QAAQ,YAAR,CAAV;IACA,SAAS,QAAQ,kBAAR,CAAT;;;;;;;;;;;;;;;;;AAiBJ,SAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,MAAI,SAAS,QAAQ,UAAU,KAAV,CAAR,GAA2B,CAA3B,CADS;AAEtB,MAAI,CAAC,SAAS,MAAT,CAAD,EAAmB;AACrB,WAAO,OAAO,KAAP,CAAP,CADqB;GAAvB;AAGA,MAAI,CAAC,MAAD,EAAS;AACX,WAAO,EAAP,CADW;GAAb;AAGA,SAAO,OAAC,CAAQ,cAAR,IAA0B,SAAS,KAAT,CAA1B,GACJ,MAAM,KAAN,CAAY,EAAZ,CADG,GAEH,UAAU,KAAV,CAFG,CARe;CAAxB;;AAaA,OAAO,OAAP,GAAiB,OAAjB","file":"toArray-compiled.js","sourcesContent":["var arrayCopy = require('../internal/arrayCopy'),\n    getLength = require('../internal/getLength'),\n    isLength = require('../internal/isLength'),\n    isString = require('./isString'),\n    support = require('../support'),\n    values = require('../object/values');\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * (function() {\n *   return _.toArray(arguments).slice(1);\n * }(1, 2, 3));\n * // => [2, 3]\n */\nfunction toArray(value) {\n  var length = value ? getLength(value) : 0;\n  if (!isLength(length)) {\n    return values(value);\n  }\n  if (!length) {\n    return [];\n  }\n  return (support.unindexedChars && isString(value))\n    ? value.split('')\n    : arrayCopy(value);\n}\n\nmodule.exports = toArray;\n"]}