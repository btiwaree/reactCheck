{"version":3,"sources":["sum.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,sBAAR,CAAX;IACA,eAAe,QAAQ,0BAAR,CAAf;IACA,UAAU,QAAQ,qBAAR,CAAV;IACA,UAAU,QAAQ,iBAAR,CAAV;IACA,iBAAiB,QAAQ,4BAAR,CAAjB;IACA,aAAa,QAAQ,wBAAR,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCJ,SAAS,GAAT,CAAa,UAAb,EAAyB,QAAzB,EAAmC,OAAnC,EAA4C;AAC1C,MAAI,WAAW,eAAe,UAAf,EAA2B,QAA3B,EAAqC,OAArC,CAAX,EAA0D;AAC5D,eAAW,SAAX,CAD4D;GAA9D;AAGA,aAAW,aAAa,QAAb,EAAuB,OAAvB,EAAgC,CAAhC,CAAX,CAJ0C;AAK1C,SAAO,SAAS,MAAT,IAAmB,CAAnB,GACH,SAAS,QAAQ,UAAR,IAAsB,UAAtB,GAAmC,WAAW,UAAX,CAAnC,EAA2D,QAApE,CADG,GAEH,QAAQ,UAAR,EAAoB,QAApB,CAFG,CALmC;CAA5C;;AAUA,OAAO,OAAP,GAAiB,GAAjB","file":"sum-compiled.js","sourcesContent":["var arraySum = require('../internal/arraySum'),\n    baseCallback = require('../internal/baseCallback'),\n    baseSum = require('../internal/baseSum'),\n    isArray = require('../lang/isArray'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    toIterable = require('../internal/toIterable');\n\n/**\n * Gets the sum of the values in `collection`.\n *\n * @static\n * @memberOf _\n * @category Math\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 6]);\n * // => 10\n *\n * _.sum({ 'a': 4, 'b': 6 });\n * // => 10\n *\n * var objects = [\n *   { 'n': 4 },\n *   { 'n': 6 }\n * ];\n *\n * _.sum(objects, function(object) {\n *   return object.n;\n * });\n * // => 10\n *\n * // using the `_.property` callback shorthand\n * _.sum(objects, 'n');\n * // => 10\n */\nfunction sum(collection, iteratee, thisArg) {\n  if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n    iteratee = undefined;\n  }\n  iteratee = baseCallback(iteratee, thisArg, 3);\n  return iteratee.length == 1\n    ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n    : baseSum(collection, iteratee);\n}\n\nmodule.exports = sum;\n"]}