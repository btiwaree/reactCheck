{"version":3,"sources":["matchesProperty.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAZ;IACA,sBAAsB,QAAQ,iCAAR,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BJ,SAAS,eAAT,CAAyB,IAAzB,EAA+B,QAA/B,EAAyC;AACvC,SAAO,oBAAoB,IAApB,EAA0B,UAAU,QAAV,EAAoB,IAApB,CAA1B,CAAP,CADuC;CAAzC;;AAIA,OAAO,OAAP,GAAiB,eAAjB","file":"matchesProperty-compiled.js","sourcesContent":["var baseClone = require('../internal/baseClone'),\n    baseMatchesProperty = require('../internal/baseMatchesProperty');\n\n/**\n * Creates a function that compares the property value of `path` on a given\n * object to `value`.\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * _.find(users, _.matchesProperty('user', 'fred'));\n * // => { 'user': 'fred' }\n */\nfunction matchesProperty(path, srcValue) {\n  return baseMatchesProperty(path, baseClone(srcValue, true));\n}\n\nmodule.exports = matchesProperty;\n"]}