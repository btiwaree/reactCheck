{"version":3,"sources":["pairs.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,QAAR,CAAP;IACA,WAAW,QAAQ,sBAAR,CAAX;;;;;;;;;;;;;;;;AAgBJ,SAAS,KAAT,CAAe,MAAf,EAAuB;AACrB,WAAS,SAAS,MAAT,CAAT,CADqB;;AAGrB,MAAI,QAAQ,CAAC,CAAD;MACR,QAAQ,KAAK,MAAL,CAAR;MACA,SAAS,MAAM,MAAN;MACT,SAAS,MAAM,MAAN,CAAT,CANiB;;AAQrB,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,QAAI,MAAM,MAAM,KAAN,CAAN,CADmB;AAEvB,WAAO,KAAP,IAAgB,CAAC,GAAD,EAAM,OAAO,GAAP,CAAN,CAAhB,CAFuB;GAAzB;AAIA,SAAO,MAAP,CAZqB;CAAvB;;AAeA,OAAO,OAAP,GAAiB,KAAjB","file":"pairs-compiled.js","sourcesContent":["var keys = require('./keys'),\n    toObject = require('../internal/toObject');\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n"]}