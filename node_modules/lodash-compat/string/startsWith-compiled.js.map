{"version":3,"sources":["startsWith.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,0BAAR,CAAf;;;AAGJ,IAAI,YAAY,KAAK,GAAL;;;;;;;;;;;;;;;;;;;;;;;AAuBhB,SAAS,UAAT,CAAoB,MAApB,EAA4B,MAA5B,EAAoC,QAApC,EAA8C;AAC5C,WAAS,aAAa,MAAb,CAAT,CAD4C;AAE5C,aAAW,YAAY,IAAZ,GACP,CADO,GAEP,UAAU,WAAW,CAAX,GAAe,CAAf,GAAoB,CAAC,QAAD,IAAa,CAAb,EAAiB,OAAO,MAAP,CAFxC,CAFiC;;AAM5C,SAAO,OAAO,WAAP,CAAmB,MAAnB,EAA2B,QAA3B,KAAwC,QAAxC,CANqC;CAA9C;;AASA,OAAO,OAAP,GAAiB,UAAjB","file":"startsWith-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to search.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = baseToString(string);\n  position = position == null\n    ? 0\n    : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n  return string.lastIndexOf(target, position) == position;\n}\n\nmodule.exports = startsWith;\n"]}