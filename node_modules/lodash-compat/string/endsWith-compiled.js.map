{"version":3,"sources":["endsWith.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,0BAAR,CAAf;;;AAGJ,IAAI,YAAY,KAAK,GAAL;;;;;;;;;;;;;;;;;;;;;;;AAuBhB,SAAS,QAAT,CAAkB,MAAlB,EAA0B,MAA1B,EAAkC,QAAlC,EAA4C;AAC1C,WAAS,aAAa,MAAb,CAAT,CAD0C;AAE1C,WAAU,SAAS,EAAT,CAFgC;;AAI1C,MAAI,SAAS,OAAO,MAAP,CAJ6B;AAK1C,aAAW,aAAa,SAAb,GACP,MADO,GAEP,UAAU,WAAW,CAAX,GAAe,CAAf,GAAoB,CAAC,QAAD,IAAa,CAAb,EAAiB,MAA/C,CAFO,CAL+B;;AAS1C,cAAY,OAAO,MAAP,CAT8B;AAU1C,SAAO,YAAY,CAAZ,IAAiB,OAAO,OAAP,CAAe,MAAf,EAAuB,QAAvB,KAAoC,QAApC,CAVkB;CAA5C;;AAaA,OAAO,OAAP,GAAiB,QAAjB","file":"endsWith-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to search.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search from.\n * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = baseToString(string);\n  target = (target + '');\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n  position -= target.length;\n  return position >= 0 && string.indexOf(target, position) == position;\n}\n\nmodule.exports = endsWith;\n"]}