{"version":3,"sources":["unzip.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAd;IACA,WAAW,QAAQ,sBAAR,CAAX;IACA,eAAe,QAAQ,0BAAR,CAAf;IACA,cAAc,QAAQ,yBAAR,CAAd;;;AAGJ,IAAI,YAAY,KAAK,GAAL;;;;;;;;;;;;;;;;;;;;AAoBhB,SAAS,KAAT,CAAe,KAAf,EAAsB;AACpB,MAAI,EAAE,SAAS,MAAM,MAAN,CAAX,EAA0B;AAC5B,WAAO,EAAP,CAD4B;GAA9B;AAGA,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,CAAT,CALgB;;AAOpB,UAAQ,YAAY,KAAZ,EAAmB,UAAS,KAAT,EAAgB;AACzC,QAAI,YAAY,KAAZ,CAAJ,EAAwB;AACtB,eAAS,UAAU,MAAM,MAAN,EAAc,MAAxB,CAAT,CADsB;AAEtB,aAAO,IAAP,CAFsB;KAAxB;GADyB,CAA3B,CAPoB;AAapB,MAAI,SAAS,MAAM,MAAN,CAAT,CAbgB;AAcpB,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,WAAO,KAAP,IAAgB,SAAS,KAAT,EAAgB,aAAa,KAAb,CAAhB,CAAhB,CADuB;GAAzB;AAGA,SAAO,MAAP,CAjBoB;CAAtB;;AAoBA,OAAO,OAAP,GAAiB,KAAjB","file":"unzip-compiled.js","sourcesContent":["var arrayFilter = require('../internal/arrayFilter'),\n    arrayMap = require('../internal/arrayMap'),\n    baseProperty = require('../internal/baseProperty'),\n    isArrayLike = require('../internal/isArrayLike');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n *\n * _.unzip(zipped);\n * // => [['fred', 'barney'], [30, 40], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var index = -1,\n      length = 0;\n\n  array = arrayFilter(array, function(group) {\n    if (isArrayLike(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = arrayMap(array, baseProperty(index));\n  }\n  return result;\n}\n\nmodule.exports = unzip;\n"]}