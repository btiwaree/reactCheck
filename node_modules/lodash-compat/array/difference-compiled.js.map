{"version":3,"sources":["difference.js"],"names":[],"mappings":"AAAA,IAAI,iBAAiB,QAAQ,4BAAR,CAAjB;IACA,cAAc,QAAQ,yBAAR,CAAd;IACA,cAAc,QAAQ,yBAAR,CAAd;IACA,eAAe,QAAQ,0BAAR,CAAf;IACA,YAAY,QAAQ,uBAAR,CAAZ;;;;;;;;;;;;;;;;;;AAkBJ,IAAI,aAAa,UAAU,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AACjD,WAAO,YAAC,CAAa,KAAb,KAAuB,YAAY,KAAZ,CAAvB,GACJ,eAAe,KAAf,EAAsB,YAAY,MAAZ,EAAoB,KAApB,EAA2B,IAA3B,CAAtB,CADG,GAEH,EAFG,CAD0C;CAAxB,CAAvB;;AAMJ,OAAO,OAAP,GAAiB,UAAjB","file":"difference-compiled.js","sourcesContent":["var baseDifference = require('../internal/baseDifference'),\n    baseFlatten = require('../internal/baseFlatten'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an array of unique `array` values not included in the other\n * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The arrays of values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.difference([1, 2, 3], [4, 2]);\n * // => [1, 3]\n */\nvar difference = restParam(function(array, values) {\n  return (isObjectLike(array) && isArrayLike(array))\n    ? baseDifference(array, baseFlatten(values, false, true))\n    : [];\n});\n\nmodule.exports = difference;\n"]}