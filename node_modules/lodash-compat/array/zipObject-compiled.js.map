{"version":3,"sources":["zipObject.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,iBAAR,CAAV;;;;;;;;;;;;;;;;;;;;;;;AAuBJ,SAAS,SAAT,CAAmB,KAAnB,EAA0B,MAA1B,EAAkC;AAChC,MAAI,QAAQ,CAAC,CAAD;MACR,SAAS,QAAQ,MAAM,MAAN,GAAe,CAAvB;MACT,SAAS,EAAT,CAH4B;;AAKhC,MAAI,UAAU,CAAC,MAAD,IAAW,CAAC,QAAQ,MAAM,CAAN,CAAR,CAAD,EAAoB;AAC3C,aAAS,EAAT,CAD2C;GAA7C;AAGA,SAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,QAAI,MAAM,MAAM,KAAN,CAAN,CADmB;AAEvB,QAAI,MAAJ,EAAY;AACV,aAAO,GAAP,IAAc,OAAO,KAAP,CAAd,CADU;KAAZ,MAEO,IAAI,GAAJ,EAAS;AACd,aAAO,IAAI,CAAJ,CAAP,IAAiB,IAAI,CAAJ,CAAjB,CADc;KAAT;GAJT;AAQA,SAAO,MAAP,CAhBgC;CAAlC;;AAmBA,OAAO,OAAP,GAAiB,SAAjB","file":"zipObject-compiled.js","sourcesContent":["var isArray = require('../lang/isArray');\n\n/**\n * The inverse of `_.pairs`; this method returns an object composed from arrays\n * of property names and values. Provide either a single two dimensional array,\n * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n * and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @alias object\n * @category Array\n * @param {Array} props The property names.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject([['fred', 30], ['barney', 40]]);\n * // => { 'fred': 30, 'barney': 40 }\n *\n * _.zipObject(['fred', 'barney'], [30, 40]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction zipObject(props, values) {\n  var index = -1,\n      length = props ? props.length : 0,\n      result = {};\n\n  if (length && !values && !isArray(props[0])) {\n    values = [];\n  }\n  while (++index < length) {\n    var key = props[index];\n    if (values) {\n      result[key] = values[index];\n    } else if (key) {\n      result[key[0]] = key[1];\n    }\n  }\n  return result;\n}\n\nmodule.exports = zipObject;\n"]}