{"version":3,"sources":["uniq.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,0BAAR,CAAf;IACA,WAAW,QAAQ,sBAAR,CAAX;IACA,iBAAiB,QAAQ,4BAAR,CAAjB;IACA,aAAa,QAAQ,wBAAR,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDJ,SAAS,IAAT,CAAc,KAAd,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,OAAzC,EAAkD;AAChD,MAAI,SAAS,QAAQ,MAAM,MAAN,GAAe,CAAvB,CADmC;AAEhD,MAAI,CAAC,MAAD,EAAS;AACX,WAAO,EAAP,CADW;GAAb;AAGA,MAAI,YAAY,IAAZ,IAAoB,OAAO,QAAP,IAAmB,SAAnB,EAA8B;AACpD,cAAU,QAAV,CADoD;AAEpD,eAAW,eAAe,KAAf,EAAsB,QAAtB,EAAgC,OAAhC,IAA2C,SAA3C,GAAuD,QAAvD,CAFyC;AAGpD,eAAW,KAAX,CAHoD;GAAtD;AAKA,aAAW,YAAY,IAAZ,GAAmB,QAAnB,GAA8B,aAAa,QAAb,EAAuB,OAAvB,EAAgC,CAAhC,CAA9B,CAVqC;AAWhD,SAAO,WACH,WAAW,KAAX,EAAkB,QAAlB,CADG,GAEH,SAAS,KAAT,EAAgB,QAAhB,CAFG,CAXyC;CAAlD;;AAgBA,OAAO,OAAP,GAAiB,IAAjB","file":"uniq-compiled.js","sourcesContent":["var baseCallback = require('../internal/baseCallback'),\n    baseUniq = require('../internal/baseUniq'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    sortedUniq = require('../internal/sortedUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurence of each element\n * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n * for sorted arrays. If an iteratee function is provided it's invoked for\n * each element in the array to generate the criterion by which uniqueness\n * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n * arguments: (value, index, array).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias unique\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {boolean} [isSorted] Specify the array is sorted.\n * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new duplicate-value-free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n *\n * // using `isSorted`\n * _.uniq([1, 1, 2], true);\n * // => [1, 2]\n *\n * // using an iteratee function\n * _.uniq([1, 2.5, 1.5, 2], function(n) {\n *   return this.floor(n);\n * }, Math);\n * // => [1, 2.5]\n *\n * // using the `_.property` callback shorthand\n * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniq(array, isSorted, iteratee, thisArg) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (isSorted != null && typeof isSorted != 'boolean') {\n    thisArg = iteratee;\n    iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n    isSorted = false;\n  }\n  iteratee = iteratee == null ? iteratee : baseCallback(iteratee, thisArg, 3);\n  return (isSorted)\n    ? sortedUniq(array, iteratee)\n    : baseUniq(array, iteratee);\n}\n\nmodule.exports = uniq;\n"]}