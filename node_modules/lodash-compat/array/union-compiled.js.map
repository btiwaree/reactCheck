{"version":3,"sources":["union.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAd;IACA,WAAW,QAAQ,sBAAR,CAAX;IACA,YAAY,QAAQ,uBAAR,CAAZ;;;;;;;;;;;;;;;;;AAiBJ,IAAI,QAAQ,UAAU,UAAS,MAAT,EAAiB;AACrC,SAAO,SAAS,YAAY,MAAZ,EAAoB,KAApB,EAA2B,IAA3B,CAAT,CAAP,CADqC;CAAjB,CAAlB;;AAIJ,OAAO,OAAP,GAAiB,KAAjB","file":"union-compiled.js","sourcesContent":["var baseFlatten = require('../internal/baseFlatten'),\n    baseUniq = require('../internal/baseUniq'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an array of unique values, in order, from all of the provided arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([1, 2], [4, 2], [2, 1]);\n * // => [1, 2, 4]\n */\nvar union = restParam(function(arrays) {\n  return baseUniq(baseFlatten(arrays, false, true));\n});\n\nmodule.exports = union;\n"]}