{"version":3,"sources":["functionOptimiser.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,WAAW,QAAQ,SAAR,CAAX;;AAEJ,IAAI,sBAAsB,QAAQ,sBAAR,CAAtB;;AAEJ,IAAI,uBAAuB,uBAAuB,mBAAvB,CAAvB;;AAEJ,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAJ,GAAiB,GAAxB,GAA8B,EAAE,SAAS,GAAT,EAAhC,CAAT;CAArC;;AAEA,SAAS,qBAAT,CAA+B,IAA/B,EAAqC;AACjC,QAAI,KAAK,IAAL,KAAc,OAAd,EAAuB;AACvB,aAAK,KAAL,GAAa,GAAb,CADuB;KAA3B,MAEO,IAAI,KAAK,IAAL,KAAc,UAAd,EAA0B;AACjC,aAAK,MAAL,GAAc,KAAK,KAAL,GAAa,EAAb,CADmB;KAA9B;CAHX;;AAQA,SAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC7B,QAAI,KAAK,IAAL,KAAc,OAAd,EAAuB;AACvB,aAAK,KAAL,GAAa,GAAb,CADuB;KAA3B,MAEO,IAAI,KAAK,IAAL,KAAc,KAAd,EAAqB;AAC5B,aAAK,MAAL,GAAc,KAAK,KAAL,GAAa,EAAb,CADc;KAAzB,MAEA,IAAI,KAAK,IAAL,KAAc,UAAd,EAA0B;AACjC,aAAK,MAAL,GAAc,KAAK,KAAL,GAAa,EAAb,CADmB;AAEjC,YAAI,KAAK,KAAL,KAAe,MAAf,EAAuB;AACvB,iCAAqB,OAArB,CAA6B,IAA7B,CAAkC,KAAK,KAAL,EAAY,qBAA9C,EADuB;AAEvB,mBAAO,KAAP,CAFuB;SAA3B;KAFG;CALX;;AAcA,SAAS,cAAT,CAAwB,IAAxB,EAA8B;AAC1B,QAAI,CAAC,SAAS,IAAT,CAAc,KAAK,IAAL,CAAf,EAA2B;AAC3B,aAAK,KAAL,GAAa,CAAC,GAAG,qBAAqB,OAArB,CAAJ,CAAkC,KAAK,KAAL,CAAlC,CAA8C,IAA9C,CAAmD,iBAAnD,EAAsE,QAAtE,EAAb,CAD2B;KAA/B;CADJ;;AAMA,QAAQ,OAAR,GAAkB,CAAC,GAAG,SAAS,MAAT,CAAJ,CAAqB,4BAArB,EAAmD,YAAY;AAC7E,WAAO,UAAU,GAAV,EAAe;AAClB,YAAI,SAAJ,CAAc,cAAd,EADkB;KAAf,CADsE;CAAZ,CAArE;AAKA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"functionOptimiser-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _postcss = require('postcss');\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction reduceCalcWhitespaces(node) {\n    if (node.type === 'space') {\n        node.value = ' ';\n    } else if (node.type === 'function') {\n        node.before = node.after = '';\n    }\n}\n\nfunction reduceWhitespaces(node) {\n    if (node.type === 'space') {\n        node.value = ' ';\n    } else if (node.type === 'div') {\n        node.before = node.after = '';\n    } else if (node.type === 'function') {\n        node.before = node.after = '';\n        if (node.value === 'calc') {\n            _postcssValueParser2.default.walk(node.nodes, reduceCalcWhitespaces);\n            return false;\n        }\n    }\n}\n\nfunction transformDecls(decl) {\n    if (!/filter/.test(decl.prop)) {\n        decl.value = (0, _postcssValueParser2.default)(decl.value).walk(reduceWhitespaces).toString();\n    }\n}\n\nexports.default = (0, _postcss.plugin)('cssnano-function-optimiser', function () {\n    return function (css) {\n        css.walkDecls(transformDecls);\n    };\n});\nmodule.exports = exports['default'];"]}