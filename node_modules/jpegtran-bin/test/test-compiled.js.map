{"version":3,"sources":["test.js"],"names":[],"mappings":";AACA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,WAAW,QAAQ,eAAR,EAAyB,QAAzB;AACf,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,WAAW,QAAQ,WAAR,CAAX;AACJ,IAAI,WAAW,QAAQ,WAAR,CAAX;AACJ,IAAI,cAAc,QAAQ,cAAR,CAAd;AACJ,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,MAAM,KAAK,IAAL,CAAU,SAAV,EAAqB,KAArB,CAAN;;AAEJ,WAAW,YAAY;AACtB,QAAO,IAAP,CAAY,GAAZ,EADsB;CAAZ,CAAX;;AAIA,UAAU,YAAY;AACrB,QAAO,IAAP,CAAY,GAAZ,EADqB;CAAZ,CAAV;;AAIA,GAAG,+BAAH,EAAoC,UAAU,EAAV,EAAc;AACjD,KAAI,MAAM,CACT,8BADS,EAET,eAAe,GAAf,GAAqB,cAArB,GAAsC,GAAtC,GAA4C,GAA5C,CAFS,CAGR,IAHQ,CAGH,GAHG,CAAN,CAD6C;;AAMjD,KAAI,QAAJ,GACE,GADF,CACM,0FADN,EAEE,GAFF,CAEM,iEAFN,EAGE,GAHF,CAGM,GAHN,EAIE,GAJF,CAIM,cAJN,EAKE,GALF,CAKM,UAAU,GAAV,EAAe;AACnB,MAAI,GAAJ,EAAS;AACR,MAAG,GAAH,EADQ;AAER,UAFQ;GAAT;;AAKA,SAAO,GAAG,QAAH,CAAY,KAAK,IAAL,CAAU,GAAV,EAAe,UAAf,CAAZ,EAAwC,MAAxC,EAAP,EANmB;AAOnB,OAPmB;EAAf,CALN,CANiD;CAAd,CAApC;;AAsBA,GAAG,qDAAH,EAA0D,YAAY;AACrE,KAAI,OAAO,CACV,UADU,EACE,KAAK,IAAL,CAAU,GAAV,EAAe,UAAf,CADF,EAEV,KAAK,IAAL,CAAU,SAAV,EAAqB,mBAArB,CAFU,CAAP,CADiE;;AAMrE,QAAO,SAAS,QAAQ,KAAR,CAAT,EAAyB,IAAzB,EAA+B,IAA/B,CAAoC,MAApC,CAAP,CANqE;CAAZ,CAA1D;;AASA,GAAG,cAAH,EAAmB,UAAU,EAAV,EAAc;AAChC,KAAI,MAAM,KAAK,IAAL,CAAU,SAAV,EAAqB,mBAArB,CAAN,CAD4B;AAEhC,KAAI,OAAO,KAAK,IAAL,CAAU,GAAV,EAAe,UAAf,CAAP,CAF4B;AAGhC,KAAI,OAAO,CACV,UADU,EACE,IADF,EAEV,GAFU,CAAP,CAH4B;;AAQhC,UAAS,QAAQ,KAAR,CAAT,EAAyB,IAAzB,EAA+B,UAAU,GAAV,EAAe;AAC7C,MAAI,GAAJ,EAAS;AACR,MAAG,GAAH,EADQ;AAER,UAFQ;GAAT;;AAKA,cAAY,GAAZ,EAAiB,IAAjB,EAAuB,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC1C,OAAI,GAAJ,EAAS;AACR,OAAG,GAAH,EADQ;AAER,WAFQ;IAAT;;AAKA,UAAO,IAAI,IAAJ,IAAY,IAAI,GAAJ,CAAZ,CAAP,CAN0C;AAO1C,QAP0C;GAApB,CAAvB,CAN6C;EAAf,CAA/B,CARgC;CAAd,CAAnB","file":"test-compiled.js","sourcesContent":["/*global afterEach,beforeEach,it*/\n'use strict';\n\nvar assert = require('assert');\nvar execFile = require('child_process').execFile;\nvar fs = require('fs');\nvar path = require('path');\nvar BinBuild = require('bin-build');\nvar binCheck = require('bin-check');\nvar compareSize = require('compare-size');\nvar mkdirp = require('mkdirp');\nvar rimraf = require('rimraf');\nvar tmp = path.join(__dirname, 'tmp');\n\nbeforeEach(function () {\n\tmkdirp.sync(tmp);\n});\n\nafterEach(function () {\n\trimraf.sync(tmp);\n});\n\nit('rebuild the jpegtran binaries', function (cb) {\n\tvar cfg = [\n\t\t'./configure --disable-shared',\n\t\t'--prefix=\"' + tmp + '\" --bindir=\"' + tmp + '\"'\n\t].join(' ');\n\n\tnew BinBuild()\n\t\t.src('https://downloads.sourceforge.net/project/libjpeg-turbo/1.4.2/libjpeg-turbo-1.4.2.tar.gz')\n\t\t.cmd('touch configure.ac aclocal.m4 configure Makefile.am Makefile.in')\n\t\t.cmd(cfg)\n\t\t.cmd('make install')\n\t\t.run(function (err) {\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tassert(fs.statSync(path.join(tmp, 'jpegtran')).isFile());\n\t\t\tcb();\n\t\t});\n});\n\nit('return path to binary and verify that it is working', function () {\n\tvar args = [\n\t\t'-outfile', path.join(tmp, 'test.jpg'),\n\t\tpath.join(__dirname, 'fixtures/test.jpg')\n\t];\n\n\treturn binCheck(require('../'), args).then(assert);\n});\n\nit('minify a JPG', function (cb) {\n\tvar src = path.join(__dirname, 'fixtures/test.jpg');\n\tvar dest = path.join(tmp, 'test.jpg');\n\tvar args = [\n\t\t'-outfile', dest,\n\t\tsrc\n\t];\n\n\texecFile(require('../'), args, function (err) {\n\t\tif (err) {\n\t\t\tcb(err);\n\t\t\treturn;\n\t\t}\n\n\t\tcompareSize(src, dest, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tassert(res[dest] < res[src]);\n\t\t\tcb();\n\t\t});\n\t});\n});\n"]}