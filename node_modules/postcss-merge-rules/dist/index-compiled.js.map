{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _libClone = require('./lib/clone');\n\nvar _libClone2 = _interopRequireDefault(_libClone);\n\nvar list = _postcss2['default'].list;\nvar prefixes = ['-webkit-', '-moz-', '-ms-', '-o-'];\n\nfunction intersect(a, b, not) {\n    return a.filter(function (c) {\n        var index = ~b.indexOf(c);\n        return not ? !index : index;\n    });\n}\n\nvar different = function different(a, b) {\n    return intersect(a, b, true).concat(intersect(b, a, true));\n};\nvar filterPrefixes = function filterPrefixes(selector) {\n    return intersect(prefixes, selector);\n};\n\nfunction sameVendor(selectorsA, selectorsB) {\n    var same = function same(selectors) {\n        return selectors.map(filterPrefixes).join();\n    };\n    return same(selectorsA) === same(selectorsB);\n}\n\nvar noVendor = function noVendor(selector) {\n    return !filterPrefixes(selector).length;\n};\n\nfunction sameParent(ruleA, ruleB) {\n    var hasParent = ruleA.parent && ruleB.parent;\n    var sameType = hasParent && ruleA.parent.type === ruleB.parent.type;\n    // If an at rule, ensure that the parameters are the same\n    if (hasParent && ruleA.parent.type !== 'root' && ruleB.parent.type !== 'root') {\n        sameType = sameType && ruleA.parent.params === ruleB.parent.params && ruleA.parent.name === ruleB.parent.name;\n    }\n    return hasParent ? sameType : true;\n}\n\nfunction canMerge(ruleA, ruleB) {\n    var a = list.comma(ruleA.selector);\n    var b = list.comma(ruleB.selector);\n\n    var parent = sameParent(ruleA, ruleB);\n    return parent && (a.concat(b).every(noVendor) || sameVendor(a, b));\n}\n\nvar getDecls = function getDecls(rule) {\n    return rule.nodes ? rule.nodes.map(String) : [];\n};\nvar joinSelectors = function joinSelectors() {\n    for (var _len = arguments.length, rules = Array(_len), _key = 0; _key < _len; _key++) {\n        rules[_key] = arguments[_key];\n    }\n\n    return rules.map(function (s) {\n        return s.selector;\n    }).join();\n};\n\nfunction ruleLength() {\n    for (var _len2 = arguments.length, rules = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        rules[_key2] = arguments[_key2];\n    }\n\n    return rules.map(function (r) {\n        return r.nodes.length ? String(r) : '';\n    }).join('').length;\n}\n\nfunction splitProp(prop) {\n    var parts = prop.split('-');\n    var base = undefined,\n        rest = undefined;\n    if (prop[0] === '-') {\n        base = parts[1] + parts[2];\n        rest = parts.slice(3);\n    } else {\n        base = parts[0];\n        rest = parts.slice(1);\n    }\n    return [base, rest];\n}\n\nfunction isConflictingProp(propA, propB) {\n    if (propA === propB) {\n        return true;\n    }\n    var a = splitProp(propA);\n    var b = splitProp(propB);\n    return a[0] === b[0] && a[1].length !== b[1].length;\n}\n\nfunction hasConflicts(declProp, notMoved) {\n    return notMoved.some(function (prop) {\n        return isConflictingProp(prop, declProp);\n    });\n}\n\nfunction partialMerge(first, second) {\n    var _this = this;\n\n    var intersection = intersect(getDecls(first), getDecls(second));\n    if (!intersection.length) {\n        return second;\n    }\n    var nextRule = second.next();\n    if (nextRule && nextRule.type === 'rule' && canMerge(second, nextRule)) {\n        var nextIntersection = intersect(getDecls(second), getDecls(nextRule));\n        if (nextIntersection.length > intersection.length) {\n            first = second;second = nextRule;intersection = nextIntersection;\n        }\n    }\n    var recievingBlock = (0, _libClone2['default'])(second);\n    recievingBlock.selector = joinSelectors(first, second);\n    recievingBlock.nodes = [];\n    second.parent.insertBefore(second, recievingBlock);\n    var difference = different(getDecls(first), getDecls(second));\n    var filterConflicts = function filterConflicts(decls, intersectn) {\n        var willNotMove = [];\n        return decls.reduce(function (willMove, decl) {\n            var intersects = ~intersectn.indexOf(decl);\n            var prop = decl.split(':')[0];\n            var base = prop.split('-')[0];\n            var canMove = difference.every(function (d) {\n                return d.split(':')[0] !== base;\n            });\n            if (intersects && canMove && !hasConflicts(prop, willNotMove)) {\n                willMove.push(decl);\n            } else {\n                willNotMove.push(prop);\n            }\n            return willMove;\n        }, []);\n    };\n    intersection = filterConflicts(getDecls(first).reverse(), intersection);\n    intersection = filterConflicts(getDecls(second), intersection);\n    var firstClone = (0, _libClone2['default'])(first);\n    var secondClone = (0, _libClone2['default'])(second);\n    var moveDecl = function moveDecl(callback) {\n        return function (decl) {\n            if (~intersection.indexOf(String(decl))) {\n                callback.call(_this, decl);\n            }\n        };\n    };\n    firstClone.walkDecls(moveDecl(function (decl) {\n        decl.remove();\n        recievingBlock.append(decl);\n    }));\n    secondClone.walkDecls(moveDecl(function (decl) {\n        return decl.remove();\n    }));\n    var merged = ruleLength(firstClone, recievingBlock, secondClone);\n    var original = ruleLength(first, second);\n    if (merged < original) {\n        first.replaceWith(firstClone);\n        second.replaceWith(secondClone);\n        [firstClone, recievingBlock, secondClone].forEach(function (r) {\n            if (!r.nodes.length) {\n                r.remove();\n            }\n        });\n        if (!secondClone.parent) {\n            return recievingBlock;\n        }\n        return secondClone;\n    } else {\n        recievingBlock.remove();\n        return second;\n    }\n}\n\nfunction selectorMerger() {\n    var cache = null;\n    return function (rule) {\n        // Prime the cache with the first rule, or alternately ensure that it is\n        // safe to merge both declarations before continuing\n        if (!cache || !canMerge(rule, cache)) {\n            cache = rule;\n            return;\n        }\n        // Ensure that we don't deduplicate the same rule; this is sometimes\n        // caused by a partial merge\n        if (cache === rule) {\n            cache = rule;\n            return;\n        }\n        // Merge when declarations are exactly equal\n        // e.g. h1 { color: red } h2 { color: red }\n        if (getDecls(rule).join(';') === getDecls(cache).join(';')) {\n            rule.selector = joinSelectors(cache, rule);\n            cache.remove();\n            cache = rule;\n            return;\n        }\n        // Merge when both selectors are exactly equal\n        // e.g. a { color: blue } a { font-weight: bold }\n        if (cache.selector === rule.selector) {\n            var _ret = (function () {\n                var toString = String(cache);\n                rule.walk(function (decl) {\n                    if (~toString.indexOf(String(decl))) {\n                        return decl.remove();\n                    }\n                    decl.moveTo(cache);\n                });\n                rule.remove();\n                return {\n                    v: undefined\n                };\n            })();\n\n            if (typeof _ret === 'object') return _ret.v;\n        }\n        // Partial merge: check if the rule contains a subset of the last; if\n        // so create a joined selector with the subset, if smaller.\n        cache = partialMerge(cache, rule);\n    };\n}\n\nexports['default'] = _postcss2['default'].plugin('postcss-merge-rules', function () {\n    return function (css) {\n        return css.walkRules(selectorMerger());\n    };\n});\nmodule.exports = exports['default'];"]}