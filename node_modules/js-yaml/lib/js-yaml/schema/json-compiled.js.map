{"version":3,"sources":["json.js"],"names":[],"mappings":";;;;;;;AAQA;;AAGA,IAAI,SAAS,QAAQ,WAAR,CAAT;;AAGJ,OAAO,OAAP,GAAiB,IAAI,MAAJ,CAAW;AAC1B,WAAS,CACP,QAAQ,YAAR,CADO,CAAT;AAGA,YAAU,CACR,QAAQ,cAAR,CADQ,EAER,QAAQ,cAAR,CAFQ,EAGR,QAAQ,aAAR,CAHQ,EAIR,QAAQ,eAAR,CAJQ,CAAV;CAJe,CAAjB","file":"json-compiled.js","sourcesContent":["// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n"]}