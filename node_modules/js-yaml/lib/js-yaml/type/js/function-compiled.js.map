{"version":3,"sources":["function.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAJ;;;;;;;;;AASA,IAAI;;AAEF,MAAI,WAAW,OAAX,CAFF;AAGF,YAAU,SAAS,SAAT,CAAV,CAHE;CAAJ,CAIE,OAAO,CAAP,EAAU;;AAEV,MAAI,OAAO,MAAP,KAAkB,WAAlB,EAA+B,UAAU,OAAO,OAAP,CAA7C;CAFA;;AAKF,IAAI,OAAO,QAAQ,YAAR,CAAP;;AAEJ,SAAS,yBAAT,CAAmC,IAAnC,EAAyC;AACvC,MAAI,SAAS,IAAT,EAAe,OAAO,KAAP,CAAnB;;AAEA,MAAI;AACF,QAAI,SAAS,MAAM,IAAN,GAAa,GAAb;QACT,MAAS,QAAQ,KAAR,CAAc,MAAd,EAAsB,EAAE,OAAO,IAAP,EAAxB,CAAT,CAFF;;AAIF,QAAI,IAAI,IAAJ,KAAgC,SAAhC,IACA,IAAI,IAAJ,CAAS,MAAT,KAAgC,CAAhC,IACA,IAAI,IAAJ,CAAS,CAAT,EAAY,IAAZ,KAAgC,qBAAhC,IACA,IAAI,IAAJ,CAAS,CAAT,EAAY,UAAZ,CAAuB,IAAvB,KAAgC,oBAAhC,EAAsD;AACxD,aAAO,KAAP,CADwD;KAH1D;;AAOA,WAAO,IAAP,CAXE;GAAJ,CAYE,OAAO,GAAP,EAAY;AACZ,WAAO,KAAP,CADY;GAAZ;CAfJ;;AAoBA,SAAS,2BAAT,CAAqC,IAArC,EAA2C;;;AAGzC,MAAI,SAAS,MAAM,IAAN,GAAa,GAAb;MACT,MAAS,QAAQ,KAAR,CAAc,MAAd,EAAsB,EAAE,OAAO,IAAP,EAAxB,CAAT;MACA,SAAS,EAAT;MACA,IAHJ,CAHyC;;AAQzC,MAAI,IAAI,IAAJ,KAAgC,SAAhC,IACA,IAAI,IAAJ,CAAS,MAAT,KAAgC,CAAhC,IACA,IAAI,IAAJ,CAAS,CAAT,EAAY,IAAZ,KAAgC,qBAAhC,IACA,IAAI,IAAJ,CAAS,CAAT,EAAY,UAAZ,CAAuB,IAAvB,KAAgC,oBAAhC,EAAsD;AACxD,UAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN,CADwD;GAH1D;;AAOA,MAAI,IAAJ,CAAS,CAAT,EAAY,UAAZ,CAAuB,MAAvB,CAA8B,OAA9B,CAAsC,UAAU,KAAV,EAAiB;AACrD,WAAO,IAAP,CAAY,MAAM,IAAN,CAAZ,CADqD;GAAjB,CAAtC,CAfyC;;AAmBzC,SAAO,IAAI,IAAJ,CAAS,CAAT,EAAY,UAAZ,CAAuB,IAAvB,CAA4B,KAA5B;;;;;AAnBkC,SAwBlC,IAAI,QAAJ,CAAa,MAAb,EAAqB,OAAO,KAAP,CAAa,KAAK,CAAL,IAAU,CAAV,EAAa,KAAK,CAAL,IAAU,CAAV,CAA/C,CAAP,CAxByC;CAA3C;;AA2BA,SAAS,2BAAT,CAAqC,kBAArC,EAAyD;AACvD,SAAO,OAAO,QAAP,EAAP,CADuD;CAAzD;;AAIA,SAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,SAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,MAA/B,MAA2C,mBAA3C,CADmB;CAA5B;;AAIA,OAAO,OAAP,GAAiB,IAAI,IAAJ,CAAS,+BAAT,EAA0C;AACzD,QAAM,QAAN;AACA,WAAS,yBAAT;AACA,aAAW,2BAAX;AACA,aAAW,UAAX;AACA,aAAW,2BAAX;CALe,CAAjB","file":"function-compiled.js","sourcesContent":["'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        ast.body[0].expression.type !== 'FunctionExpression') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      ast.body[0].expression.type !== 'FunctionExpression') {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  /*eslint-disable no-new-func*/\n  return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n"]}