{"version":3,"sources":["float.js"],"names":[],"mappings":"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","file":"float-compiled.js","sourcesContent":["'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  '^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' +\n  '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' +\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data)) return false;\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n"]}