{"version":3,"sources":["set.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,SAAR,CAAP;;AAEJ,IAAI,kBAAkB,OAAO,SAAP,CAAiB,cAAjB;;AAEtB,SAAS,cAAT,CAAwB,IAAxB,EAA8B;AAC5B,MAAI,SAAS,IAAT,EAAe,OAAO,IAAP,CAAnB;;AAEA,MAAI,GAAJ;MAAS,SAAS,IAAT,CAHmB;;AAK5B,OAAK,GAAL,IAAY,MAAZ,EAAoB;AAClB,QAAI,gBAAgB,IAAhB,CAAqB,MAArB,EAA6B,GAA7B,CAAJ,EAAuC;AACrC,UAAI,OAAO,GAAP,MAAgB,IAAhB,EAAsB,OAAO,KAAP,CAA1B;KADF;GADF;;AAMA,SAAO,IAAP,CAX4B;CAA9B;;AAcA,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AAC9B,SAAO,SAAS,IAAT,GAAgB,IAAhB,GAAuB,EAAvB,CADuB;CAAhC;;AAIA,OAAO,OAAP,GAAiB,IAAI,IAAJ,CAAS,uBAAT,EAAkC;AACjD,QAAM,SAAN;AACA,WAAS,cAAT;AACA,aAAW,gBAAX;CAHe,CAAjB","file":"set-compiled.js","sourcesContent":["'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n"]}