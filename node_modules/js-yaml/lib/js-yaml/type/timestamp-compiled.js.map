{"version":3,"sources":["timestamp.js"],"names":[],"mappings":"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","file":"timestamp-compiled.js","sourcesContent":["'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n"]}