{"version":3,"sources":["schema.js"],"names":[],"mappings":"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","file":"schema-compiled.js","sourcesContent":["'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {}, index, length;\n\n  function collectType(type) {\n    result[type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n"]}