{"version":3,"sources":["mark.js"],"names":[],"mappings":"AAAA;;AAGA,IAAI,SAAS,QAAQ,UAAR,CAAT;;AAGJ,SAAS,IAAT,CAAc,IAAd,EAAoB,MAApB,EAA4B,QAA5B,EAAsC,IAAtC,EAA4C,MAA5C,EAAoD;AAClD,OAAK,IAAL,GAAgB,IAAhB,CADkD;AAElD,OAAK,MAAL,GAAgB,MAAhB,CAFkD;AAGlD,OAAK,QAAL,GAAgB,QAAhB,CAHkD;AAIlD,OAAK,IAAL,GAAgB,IAAhB,CAJkD;AAKlD,OAAK,MAAL,GAAgB,MAAhB,CALkD;CAApD;;AASA,KAAK,SAAL,CAAe,UAAf,GAA4B,SAAS,UAAT,CAAoB,MAApB,EAA4B,SAA5B,EAAuC;AACjE,MAAI,IAAJ,EAAU,KAAV,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,OAA5B,CADiE;;AAGjE,MAAI,CAAC,KAAK,MAAL,EAAa,OAAO,IAAP,CAAlB;;AAEA,WAAS,UAAU,CAAV,CALwD;AAMjE,cAAY,aAAa,EAAb,CANqD;;AAQjE,SAAO,EAAP,CARiE;AASjE,UAAQ,KAAK,QAAL,CATyD;;AAWjE,SAAO,QAAQ,CAAR,IAAa,2BAA2B,OAA3B,CAAmC,KAAK,MAAL,CAAY,MAAZ,CAAmB,QAAQ,CAAR,CAAtD,MAAsE,CAAC,CAAD,EAAI;AAC5F,aAAS,CAAT,CAD4F;AAE5F,QAAI,KAAK,QAAL,GAAgB,KAAhB,GAAyB,YAAY,CAAZ,GAAgB,CAAhB,EAAoB;AAC/C,aAAO,OAAP,CAD+C;AAE/C,eAAS,CAAT,CAF+C;AAG/C,YAH+C;KAAjD;GAFF;;AASA,SAAO,EAAP,CApBiE;AAqBjE,QAAM,KAAK,QAAL,CArB2D;;AAuBjE,SAAO,MAAM,KAAK,MAAL,CAAY,MAAZ,IAAsB,2BAA2B,OAA3B,CAAmC,KAAK,MAAL,CAAY,MAAZ,CAAmB,GAAnB,CAAnC,MAAgE,CAAC,CAAD,EAAI;AACrG,WAAO,CAAP,CADqG;AAErG,QAAI,MAAM,KAAK,QAAL,GAAiB,YAAY,CAAZ,GAAgB,CAAhB,EAAoB;AAC7C,aAAO,OAAP,CAD6C;AAE7C,aAAO,CAAP,CAF6C;AAG7C,YAH6C;KAA/C;GAFF;;AASA,YAAU,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,EAAyB,GAAzB,CAAV,CAhCiE;;AAkCjE,SAAO,OAAO,MAAP,CAAc,GAAd,EAAmB,MAAnB,IAA6B,IAA7B,GAAoC,OAApC,GAA8C,IAA9C,GAAqD,IAArD,GACA,OAAO,MAAP,CAAc,GAAd,EAAmB,SAAS,KAAK,QAAL,GAAgB,KAAzB,GAAiC,KAAK,MAAL,CADpD,GACmE,GADnE,CAlC0D;CAAvC;;AAuC5B,KAAK,SAAL,CAAe,QAAf,GAA0B,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AACnD,MAAI,OAAJ;MAAa,QAAQ,EAAR,CADsC;;AAGnD,MAAI,KAAK,IAAL,EAAW;AACb,aAAS,SAAS,KAAK,IAAL,GAAY,IAArB,CADI;GAAf;;AAIA,WAAS,cAAc,KAAK,IAAL,GAAY,CAAZ,CAAd,GAA+B,WAA/B,IAA8C,KAAK,MAAL,GAAc,CAAd,CAA9C,CAP0C;;AASnD,MAAI,CAAC,OAAD,EAAU;AACZ,cAAU,KAAK,UAAL,EAAV,CADY;;AAGZ,QAAI,OAAJ,EAAa;AACX,eAAS,QAAQ,OAAR,CADE;KAAb;GAHF;;AAQA,SAAO,KAAP,CAjBmD;CAA3B;;AAqB1B,OAAO,OAAP,GAAiB,IAAjB","file":"mark-compiled.js","sourcesContent":["'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n"]}