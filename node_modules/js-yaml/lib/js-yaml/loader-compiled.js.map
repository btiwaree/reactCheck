{"version":3,"sources":["loader.js"],"names":[],"mappings":"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","file":"loader-compiled.js","sourcesContent":["'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(((c - 0x010000) >> 10) + 0xD800,\n                             ((c - 0x010000) & 0x03FF) + 0xDC00);\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length;\n           _position < _length;\n           _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode) {\n  var index, quantity;\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = captureEnd = state.position;\n        state.position++;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (detectedIndent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (detectedIndent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else if (detectedIndent) {\n      // If current line isn't the first one - count line break from the last content line.\n      state.result += common.repeat('\\n', emptyLines + 1);\n    } else {\n      // In case of the first content line - count only empty lines.\n      state.result += common.repeat('\\n', emptyLines);\n    }\n\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length;\n           typeIndex < typeQuantity;\n           typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap, state.tag)) {\n      type = state.typeMap[state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n"]}