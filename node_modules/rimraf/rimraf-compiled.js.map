{"version":3,"sources":["rimraf.js"],"names":[],"mappings":"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","file":"rimraf-compiled.js","sourcesContent":["module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar assert = require(\"assert\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\nvar glob = require(\"glob\")\n\nvar defaultGlobOpts = {\n  nosort: true,\n  silent: true\n}\n\n// for EMFILE handling\nvar timeout = 0\n\nvar isWindows = (process.platform === \"win32\")\n\nfunction defaults (options) {\n  var methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(function(m) {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n  options.emfileWait = options.emfileWait || 1000\n  if (options.glob === false) {\n    options.disableGlob = true\n  }\n  options.disableGlob = options.disableGlob || false\n  options.glob = options.glob || defaultGlobOpts\n}\n\nfunction rimraf (p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required')\n\n  defaults(options)\n\n  var busyTries = 0\n  var errState = null\n  var n = 0\n\n  if (options.disableGlob || !glob.hasMagic(p))\n    return afterGlob(null, [p])\n\n  fs.lstat(p, function (er, stat) {\n    if (!er)\n      return afterGlob(null, [p])\n\n    glob(p, options.glob, afterGlob)\n  })\n\n  function next (er) {\n    errState = errState || er\n    if (--n === 0)\n      cb(errState)\n  }\n\n  function afterGlob (er, results) {\n    if (er)\n      return cb(er)\n\n    n = results.length\n    if (n === 0)\n      return cb()\n\n    results.forEach(function (p) {\n      rimraf_(p, options, function CB (er) {\n        if (er) {\n          if (isWindows && (er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\" || er.code === \"EPERM\") &&\n              busyTries < options.maxBusyTries) {\n            busyTries ++\n            var time = busyTries * 100\n            // try again, with the same exact callback as this one.\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, time)\n          }\n\n          // this one won't happen if graceful-fs is used.\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, timeout ++)\n          }\n\n          // already gone\n          if (er.code === \"ENOENT\") er = null\n        }\n\n        timeout = 0\n        next(er)\n      })\n    })\n  }\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, function (er, st) {\n    if (er && er.code === \"ENOENT\")\n      return cb(null)\n\n    if (st && st.isDirectory())\n      return rmdir(p, options, er, cb)\n\n    options.unlink(p, function (er) {\n      if (er) {\n        if (er.code === \"ENOENT\")\n          return cb(null)\n        if (er.code === \"EPERM\")\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        if (er.code === \"EISDIR\")\n          return rmdir(p, options, er, cb)\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er)\n    assert(er instanceof Error)\n\n  options.chmod(p, 666, function (er2) {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, function(er3, stats) {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  assert(p)\n  assert(options)\n  if (er)\n    assert(er instanceof Error)\n\n  try {\n    options.chmodSync(p, 666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  try {\n    var stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, function (er, files) {\n    if (er)\n      return cb(er)\n    var n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    var errState\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  var results\n\n  if (options.disableGlob || !glob.hasMagic(p)) {\n    results = [p]\n  } else {\n    try {\n      fs.lstatSync(p)\n      results = [p]\n    } catch (er) {\n      results = glob.sync(p, options.glob)\n    }\n  }\n\n  if (!results.length)\n    return\n\n  for (var i = 0; i < results.length; i++) {\n    var p = results[i]\n\n    try {\n      var st = options.lstatSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n    }\n\n    try {\n      // sunos lets the root user unlink directories, which is... weird.\n      if (st && st.isDirectory())\n        rmdirSync(p, options, null)\n      else\n        options.unlinkSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n      if (er.code === \"EPERM\")\n        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n      if (er.code !== \"EISDIR\")\n        throw er\n      rmdirSync(p, options, er)\n    }\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options)\n  })\n  options.rmdirSync(p, options)\n}\n"]}