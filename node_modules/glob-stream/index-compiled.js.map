{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar through2 = require('through2');\nvar Combine = require('ordered-read-streams');\nvar unique = require('unique-stream');\n\nvar glob = require('glob');\nvar micromatch = require('micromatch');\nvar resolveGlob = require('to-absolute-glob');\nvar globParent = require('glob-parent');\nvar path = require('path');\nvar extend = require('extend');\n\nvar gs = {\n  // Creates a stream for a single glob or filter\n  createStream: function(ourGlob, negatives, opt) {\n\n    // Remove path relativity to make globs make sense\n    ourGlob = resolveGlob(ourGlob, opt);\n    var ourOpt = extend({}, opt);\n    delete ourOpt.root;\n\n    // Create globbing stuff\n    var globber = new glob.Glob(ourGlob, ourOpt);\n\n    // Extract base path from glob\n    var basePath = opt.base || globParent(ourGlob) + path.sep;\n\n    // Create stream and map events from globber to it\n    var stream = through2.obj(opt,\n      negatives.length ? filterNegatives : undefined);\n\n    var found = false;\n\n    globber.on('error', stream.emit.bind(stream, 'error'));\n    globber.once('end', function() {\n      if (opt.allowEmpty !== true && !found && globIsSingular(globber)) {\n        stream.emit('error',\n          new Error('File not found with singular glob: ' + ourGlob));\n      }\n\n      stream.end();\n    });\n    globber.on('match', function(filename) {\n      found = true;\n\n      stream.write({\n        cwd: opt.cwd,\n        base: basePath,\n        path: path.normalize(filename),\n      });\n    });\n\n    return stream;\n\n    function filterNegatives(filename, enc, cb) {\n      var matcha = isMatch.bind(null, filename);\n      if (negatives.every(matcha)) {\n        cb(null, filename); // Pass\n      } else {\n        cb(); // Ignore\n      }\n    }\n  },\n\n  // Creates a stream for multiple globs or filters\n  create: function(globs, opt) {\n    if (!opt) {\n      opt = {};\n    }\n    if (typeof opt.cwd !== 'string') {\n      opt.cwd = process.cwd();\n    }\n    if (typeof opt.dot !== 'boolean') {\n      opt.dot = false;\n    }\n    if (typeof opt.silent !== 'boolean') {\n      opt.silent = true;\n    }\n    if (typeof opt.nonull !== 'boolean') {\n      opt.nonull = false;\n    }\n    if (typeof opt.cwdbase !== 'boolean') {\n      opt.cwdbase = false;\n    }\n    if (opt.cwdbase) {\n      opt.base = opt.cwd;\n    }\n\n    // Only one glob no need to aggregate\n    if (!Array.isArray(globs)) {\n      globs = [globs];\n    }\n\n    var positives = [];\n    var negatives = [];\n\n    var ourOpt = extend({}, opt);\n    delete ourOpt.root;\n\n    globs.forEach(function(glob, index) {\n      if (typeof glob !== 'string' && !(glob instanceof RegExp)) {\n        throw new Error('Invalid glob at index ' + index);\n      }\n\n      var globArray = isNegative(glob) ? negatives : positives;\n\n      // Create Minimatch instances for negative glob patterns\n      if (globArray === negatives && typeof glob === 'string') {\n        var ourGlob = resolveGlob(glob, opt);\n        glob = micromatch.matcher(ourGlob, ourOpt);\n      }\n\n      globArray.push({\n        index: index,\n        glob: glob,\n      });\n    });\n\n    if (positives.length === 0) {\n      throw new Error('Missing positive glob');\n    }\n\n    // Only one positive glob no need to aggregate\n    if (positives.length === 1) {\n      return streamFromPositive(positives[0]);\n    }\n\n    // Create all individual streams\n    var streams = positives.map(streamFromPositive);\n\n    // Then just pipe them to a single unique stream and return it\n    var aggregate = new Combine(streams);\n    var uniqueStream = unique('path');\n    var returnStream = aggregate.pipe(uniqueStream);\n\n    aggregate.on('error', function(err) {\n      returnStream.emit('error', err);\n    });\n\n    return returnStream;\n\n    function streamFromPositive(positive) {\n      var negativeGlobs = negatives.filter(indexGreaterThan(positive.index))\n        .map(toGlob);\n      return gs.createStream(positive.glob, negativeGlobs, opt);\n    }\n  },\n};\n\nfunction isMatch(file, matcher) {\n  if (typeof matcher === 'function') {\n    return matcher(file.path);\n  }\n  if (matcher instanceof RegExp) {\n    return matcher.test(file.path);\n  }\n}\n\nfunction isNegative(pattern) {\n  if (typeof pattern === 'string') {\n    return pattern[0] === '!';\n  }\n  if (pattern instanceof RegExp) {\n    return true;\n  }\n}\n\nfunction indexGreaterThan(index) {\n  return function(obj) {\n    return obj.index > index;\n  };\n}\n\nfunction toGlob(obj) {\n  return obj.glob;\n}\n\nfunction globIsSingular(glob) {\n  var globSet = glob.minimatch.set;\n\n  if (globSet.length !== 1) {\n    return false;\n  }\n\n  return globSet[0].every(function isString(value) {\n    return typeof value === 'string';\n  });\n}\n\nmodule.exports = gs;\n"]}