{"version":3,"sources":["parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _root = require('./selectors/root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nvar _selector = require('./selectors/selector');\n\nvar _selector2 = _interopRequireDefault(_selector);\n\nvar _className = require('./selectors/className');\n\nvar _className2 = _interopRequireDefault(_className);\n\nvar _comment = require('./selectors/comment');\n\nvar _comment2 = _interopRequireDefault(_comment);\n\nvar _id = require('./selectors/id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _tag = require('./selectors/tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _string = require('./selectors/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nvar _pseudo = require('./selectors/pseudo');\n\nvar _pseudo2 = _interopRequireDefault(_pseudo);\n\nvar _attribute = require('./selectors/attribute');\n\nvar _attribute2 = _interopRequireDefault(_attribute);\n\nvar _universal = require('./selectors/universal');\n\nvar _universal2 = _interopRequireDefault(_universal);\n\nvar _combinator = require('./selectors/combinator');\n\nvar _combinator2 = _interopRequireDefault(_combinator);\n\nvar _sortAscending = require('./sortAscending');\n\nvar _sortAscending2 = _interopRequireDefault(_sortAscending);\n\nvar _tokenize = require('./tokenize');\n\nvar _tokenize2 = _interopRequireDefault(_tokenize);\n\nvar _flatten = require('flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nvar _indexesOf = require('indexes-of');\n\nvar _indexesOf2 = _interopRequireDefault(_indexesOf);\n\nvar _uniq = require('uniq');\n\nvar _uniq2 = _interopRequireDefault(_uniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Parser = function () {\n    function Parser(input) {\n        _classCallCheck(this, Parser);\n\n        this.input = input;\n        this.position = 0;\n        this.root = new _root2.default();\n\n        var selectors = new _selector2.default();\n        this.root.append(selectors);\n\n        this.current = selectors;\n        this.tokens = (0, _tokenize2.default)(input);\n\n        return this.loop();\n    }\n\n    Parser.prototype.attribute = function attribute() {\n        var str = '';\n        var attr = undefined;\n        var startingToken = this.currToken;\n        this.position++;\n        while (this.position < this.tokens.length && this.currToken[0] !== ']') {\n            str += this.tokens[this.position][1];\n            this.position++;\n        }\n        if (this.position === this.tokens.length && ! ~str.indexOf(']')) {\n            this.error('Expected a closing square bracket.');\n        }\n        var parts = str.split(/((?:[*~^$|]?)=)/);\n        var namespace = parts[0].split(/(\\|)/g);\n        var attributeProps = {\n            operator: parts[1],\n            value: parts[2],\n            source: {\n                start: {\n                    line: startingToken[2],\n                    column: startingToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: startingToken[4]\n        };\n        if (namespace.length > 1) {\n            if (namespace[0] === '') {\n                namespace[0] = true;\n            }\n            attributeProps.attribute = namespace[2];\n            attributeProps.namespace = namespace[0];\n        } else {\n            attributeProps.attribute = parts[0];\n        }\n        attr = new _attribute2.default(attributeProps);\n\n        if (parts[2]) {\n            var insensitive = parts[2].split(/(\\s+i\\s*?)$/);\n            attr.value = insensitive[0];\n            if (insensitive[1]) {\n                attr.insensitive = true;\n                attr.raw.insensitive = insensitive[1];\n            }\n        }\n        this.newNode(attr);\n        this.position++;\n    };\n\n    Parser.prototype.combinator = function combinator() {\n        if (this.currToken[1] === '|') {\n            return this.namespace();\n        }\n        var node = new _combinator2.default({\n            value: '',\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: this.currToken[4]\n        });\n        while (this.position < this.tokens.length && this.currToken && (this.currToken[0] === 'space' || this.currToken[0] === 'combinator')) {\n            if (this.nextToken && this.nextToken[0] === 'combinator') {\n                node.spaces.before = this.currToken[1];\n                node.source.start.line = this.nextToken[2];\n                node.source.start.column = this.nextToken[3];\n                node.source.end.column = this.nextToken[3];\n                node.source.end.line = this.nextToken[2];\n                node.sourceIndex = this.nextToken[4];\n            } else if (this.prevToken && this.prevToken[0] === 'combinator') {\n                node.spaces.after = this.currToken[1];\n            } else if (this.currToken[0] === 'space' || this.currToken[0] === 'combinator') {\n                node.value = this.currToken[1];\n            }\n            this.position++;\n        }\n        return this.newNode(node);\n    };\n\n    Parser.prototype.comma = function comma() {\n        if (this.position === this.tokens.length - 1) {\n            this.root.trailingComma = true;\n            this.position++;\n            return;\n        }\n        var selectors = new _selector2.default();\n        this.current.parent.append(selectors);\n        this.current = selectors;\n        this.position++;\n    };\n\n    Parser.prototype.comment = function comment() {\n        var node = new _comment2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[4],\n                    column: this.currToken[5]\n                }\n            },\n            sourceIndex: this.currToken[6]\n        });\n        this.newNode(node);\n        this.position++;\n    };\n\n    Parser.prototype.error = function error(message) {\n        throw new this.input.error(message); // eslint-disable-line new-cap\n    };\n\n    Parser.prototype.missingParenthesis = function missingParenthesis() {\n        return this.error('Expected opening parenthesis.');\n    };\n\n    Parser.prototype.missingSquareBracket = function missingSquareBracket() {\n        return this.error('Expected opening square bracket.');\n    };\n\n    Parser.prototype.namespace = function namespace() {\n        var before = this.prevToken && this.prevToken[1] || true;\n        if (this.nextToken[0] === 'word') {\n            this.position++;\n            return this.word(before);\n        } else if (this.nextToken[0] === '*') {\n            this.position++;\n            return this.universal(before);\n        }\n    };\n\n    Parser.prototype.parentheses = function parentheses() {\n        var last = this.current.last;\n        if (last && last.type === 'pseudo') {\n            var selector = new _selector2.default();\n            var cache = this.current;\n            last.append(selector);\n            this.current = selector;\n            var balanced = 1;\n            this.position++;\n            while (this.position < this.tokens.length && balanced) {\n                if (this.currToken[0] === '(') {\n                    balanced++;\n                }\n                if (this.currToken[0] === ')') {\n                    balanced--;\n                }\n                if (balanced) {\n                    this.parse();\n                } else {\n                    selector.parent.source.end.line = this.currToken[2];\n                    selector.parent.source.end.column = this.currToken[3];\n                    this.position++;\n                }\n            }\n            if (balanced) {\n                this.error('Expected closing parenthesis.');\n            }\n            this.current = cache;\n        } else {\n            var balanced = 1;\n            this.position++;\n            last.value += '(';\n            while (this.position < this.tokens.length && balanced) {\n                if (this.currToken[0] === '(') {\n                    balanced++;\n                }\n                if (this.currToken[0] === ')') {\n                    balanced--;\n                }\n                last.value += this.currToken[1];\n                this.position++;\n            }\n            if (balanced) {\n                this.error('Expected closing parenthesis.');\n            }\n        }\n    };\n\n    Parser.prototype.pseudo = function pseudo() {\n        var _this = this;\n\n        var pseudoStr = '';\n        var startingToken = this.currToken;\n        while (this.currToken && this.currToken[0] === ':') {\n            pseudoStr += this.currToken[1];\n            this.position++;\n        }\n        if (!this.currToken) {\n            return this.error('Expected pseudo-class or pseudo-element');\n        }\n        if (this.currToken[0] === 'word') {\n            (function () {\n                var pseudo = undefined;\n                _this.splitWord(false, function (first, length) {\n                    pseudoStr += first;\n                    pseudo = new _pseudo2.default({\n                        value: pseudoStr,\n                        source: {\n                            start: {\n                                line: startingToken[2],\n                                column: startingToken[3]\n                            },\n                            end: {\n                                line: _this.currToken[4],\n                                column: _this.currToken[5]\n                            }\n                        },\n                        sourceIndex: startingToken[4]\n                    });\n                    _this.newNode(pseudo);\n                    if (length > 1 && _this.nextToken && _this.nextToken[0] === '(') {\n                        _this.error('Misplaced parenthesis.');\n                    }\n                });\n            })();\n        } else {\n            this.error('Unexpected \"' + this.currToken[0] + '\" found.');\n        }\n    };\n\n    Parser.prototype.space = function space() {\n        var token = this.currToken;\n        // Handle space before and after the selector\n        if (this.position === 0 || this.prevToken[0] === ',' || this.prevToken[0] === '(') {\n            this.spaces = token[1];\n            this.position++;\n        } else if (this.position === this.tokens.length - 1 || this.nextToken[0] === ',' || this.nextToken[0] === ')') {\n            this.current.last.spaces.after = token[1];\n            this.position++;\n        } else {\n            this.combinator();\n        }\n    };\n\n    Parser.prototype.string = function string() {\n        var token = this.currToken;\n        this.newNode(new _string2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: token[2],\n                    column: token[3]\n                },\n                end: {\n                    line: token[4],\n                    column: token[5]\n                }\n            },\n            sourceIndex: token[6]\n        }));\n        this.position++;\n    };\n\n    Parser.prototype.universal = function universal(namespace) {\n        var nextToken = this.nextToken;\n        if (nextToken && nextToken[1] === '|') {\n            this.position++;\n            return this.namespace();\n        }\n        this.newNode(new _universal2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: this.currToken[4]\n        }), namespace);\n        this.position++;\n    };\n\n    Parser.prototype.splitWord = function splitWord(namespace, firstCallback) {\n        var _this2 = this;\n\n        var nextToken = this.nextToken;\n        var word = this.currToken[1];\n        while (nextToken && nextToken[0] === 'word') {\n            this.position++;\n            var current = this.currToken[1];\n            word += current;\n            if (current.lastIndexOf('\\\\') === current.length - 1) {\n                var next = this.nextToken;\n                if (next && next[0] === 'space') {\n                    word += next[1];\n                    this.position++;\n                }\n            }\n            nextToken = this.nextToken;\n        }\n        var hasClass = (0, _indexesOf2.default)(word, '.');\n        var hasId = (0, _indexesOf2.default)(word, '#');\n        var indices = (0, _sortAscending2.default)((0, _uniq2.default)((0, _flatten2.default)([[0], hasClass, hasId])));\n        indices.forEach(function (ind, i) {\n            var index = indices[i + 1] || word.length;\n            var value = word.slice(ind, index);\n            if (i === 0 && firstCallback) {\n                return firstCallback.call(_this2, value, indices.length);\n            }\n            var node = undefined;\n            if (~hasClass.indexOf(ind)) {\n                node = new _className2.default({\n                    value: value.slice(1),\n                    source: {\n                        start: {\n                            line: _this2.currToken[2],\n                            column: _this2.currToken[3] + ind\n                        },\n                        end: {\n                            line: _this2.currToken[4],\n                            column: _this2.currToken[3] + (index - 1)\n                        }\n                    },\n                    sourceIndex: _this2.currToken[6] + indices[i]\n                });\n            } else if (~hasId.indexOf(ind)) {\n                node = new _id2.default({\n                    value: value.slice(1),\n                    source: {\n                        start: {\n                            line: _this2.currToken[2],\n                            column: _this2.currToken[3] + ind\n                        },\n                        end: {\n                            line: _this2.currToken[4],\n                            column: _this2.currToken[3] + (index - 1)\n                        }\n                    },\n                    sourceIndex: _this2.currToken[6] + indices[i]\n                });\n            } else {\n                node = new _tag2.default({\n                    value: value,\n                    source: {\n                        start: {\n                            line: _this2.currToken[2],\n                            column: _this2.currToken[3] + ind\n                        },\n                        end: {\n                            line: _this2.currToken[4],\n                            column: _this2.currToken[3] + (index - 1)\n                        }\n                    },\n                    sourceIndex: _this2.currToken[6] + indices[i]\n                });\n            }\n            _this2.newNode(node, namespace);\n        });\n        this.position++;\n    };\n\n    Parser.prototype.word = function word(namespace) {\n        var nextToken = this.nextToken;\n        if (nextToken && nextToken[1] === '|') {\n            this.position++;\n            return this.namespace();\n        }\n        return this.splitWord(namespace);\n    };\n\n    Parser.prototype.loop = function loop() {\n        while (this.position < this.tokens.length) {\n            this.parse(true);\n        }\n        return this.root;\n    };\n\n    Parser.prototype.parse = function parse(throwOnParenthesis) {\n        switch (this.currToken[0]) {\n            case 'space':\n                this.space();\n                break;\n            case 'comment':\n                this.comment();\n                break;\n            case '(':\n                this.parentheses();\n                break;\n            case ')':\n                if (throwOnParenthesis) {\n                    this.missingParenthesis();\n                }\n                break;\n            case '[':\n                this.attribute();\n                break;\n            case ']':\n                this.missingSquareBracket();\n                break;\n            case 'at-word':\n            case 'word':\n                this.word();\n                break;\n            case ':':\n                this.pseudo();\n                break;\n            case ',':\n                this.comma();\n                break;\n            case '*':\n                this.universal();\n                break;\n            case 'combinator':\n                this.combinator();\n                break;\n            case 'string':\n                this.string();\n                break;\n        }\n    };\n\n    /**\n     * Helpers\n     */\n\n    Parser.prototype.newNode = function newNode(node, namespace) {\n        if (namespace) {\n            node.namespace = namespace;\n        }\n        if (this.spaces) {\n            node.spaces.before = this.spaces;\n            this.spaces = '';\n        }\n        return this.current.append(node);\n    };\n\n    _createClass(Parser, [{\n        key: 'currToken',\n        get: function get() {\n            return this.tokens[this.position];\n        }\n    }, {\n        key: 'nextToken',\n        get: function get() {\n            return this.tokens[this.position + 1];\n        }\n    }, {\n        key: 'prevToken',\n        get: function get() {\n            return this.tokens[this.position - 1];\n        }\n    }]);\n\n    return Parser;\n}();\n\nexports.default = Parser;\nmodule.exports = exports['default'];"]}