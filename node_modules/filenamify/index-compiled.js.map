{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,eAAe,QAAQ,eAAR,CAAf;AACJ,IAAI,wBAAwB,QAAQ,yBAAR,CAAxB;AACJ,IAAI,aAAa,QAAQ,aAAR,CAAb;;;AAGJ,IAAI,sBAAsB,GAAtB;;AAEJ,IAAI,iBAAiB,uBAAjB;AACJ,IAAI,iBAAiB,MAAjB;;AAEJ,IAAI,KAAK,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC9C,KAAI,OAAO,GAAP,KAAe,QAAf,EAAyB;AAC5B,QAAM,IAAI,SAAJ,CAAc,mBAAd,CAAN,CAD4B;EAA7B;;AAIA,QAAO,QAAQ,EAAR,CALuC;;AAO9C,KAAI,cAAc,KAAK,WAAL,IAAoB,GAApB,CAP4B;;AAS9C,KAAI,wBAAwB,IAAxB,CAA6B,WAA7B,KAA6C,eAAe,IAAf,CAAoB,WAApB,CAA7C,EAA+E;AAClF,QAAM,IAAI,KAAJ,CAAU,gEAAV,CAAN,CADkF;EAAnF;;AAIA,OAAM,IAAI,OAAJ,CAAY,uBAAZ,EAAqC,WAArC,CAAN,CAb8C;AAc9C,OAAM,IAAI,OAAJ,CAAY,cAAZ,EAA4B,WAA5B,CAAN,CAd8C;AAe9C,OAAM,IAAI,OAAJ,CAAY,cAAZ,EAA4B,WAA5B,CAAN,CAf8C;;AAiB9C,KAAI,YAAY,MAAZ,GAAqB,CAArB,EAAwB;AAC3B,QAAM,aAAa,GAAb,EAAkB,WAAlB,CAAN,CAD2B;AAE3B,QAAM,IAAI,MAAJ,GAAa,CAAb,GAAiB,WAAW,GAAX,EAAgB,WAAhB,CAAjB,GAAgD,GAAhD,CAFqB;EAA5B;;AAKA,OAAM,IAAI,KAAJ,CAAU,CAAV,EAAa,mBAAb,CAAN,CAtB8C;;AAwB9C,QAAO,GAAP,CAxB8C;CAArB;;AA2B1B,GAAG,IAAH,GAAU,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC9B,OAAM,KAAK,OAAL,CAAa,GAAb,CAAN,CAD8B;AAE9B,QAAO,KAAK,IAAL,CAAU,KAAK,OAAL,CAAa,GAAb,CAAV,EAA6B,GAAG,KAAK,QAAL,CAAc,GAAd,CAAH,EAAuB,IAAvB,CAA7B,CAAP,CAF8B;CAArB","file":"index-compiled.js","sourcesContent":["'use strict';\nvar path = require('path');\nvar trimRepeated = require('trim-repeated');\nvar filenameReservedRegex = require('filename-reserved-regex');\nvar stripOuter = require('strip-outer');\n\n// doesn't make sense to have longer filenames\nvar MAX_FILENAME_LENGTH = 100;\n\nvar reControlChars = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reRelativePath = /^\\.+/;\n\nvar fn = module.exports = function (str, opts) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\topts = opts || {};\n\n\tvar replacement = opts.replacement || '!';\n\n\tif (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {\n\t\tthrow new Error('Replacement string cannot contain reserved filename characters');\n\t}\n\n\tstr = str.replace(filenameReservedRegex(), replacement);\n\tstr = str.replace(reControlChars, replacement);\n\tstr = str.replace(reRelativePath, replacement);\n\n\tif (replacement.length > 0) {\n\t\tstr = trimRepeated(str, replacement);\n\t\tstr = str.length > 1 ? stripOuter(str, replacement) : str;\n\t}\n\n\tstr = str.slice(0, MAX_FILENAME_LENGTH);\n\n\treturn str;\n};\n\nfn.path = function (pth, opts) {\n\tpth = path.resolve(pth);\n\treturn path.join(path.dirname(pth), fn(path.basename(pth), opts));\n};\n"]}