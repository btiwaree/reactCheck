{"version":3,"sources":["wrapWithVinylFile.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAX;AACJ,IAAI,KAAK,QAAQ,aAAR,CAAL;AACJ,IAAI,OAAO,QAAQ,OAAR,CAAP;;AAEJ,SAAS,iBAAT,CAA2B,OAA3B,EAAoC;;;AAGlC,WAAS,WAAT,CAAqB,QAArB,EAA+B,GAA/B,EAAoC,EAApC,EAAwC;AACtC,OAAG,KAAH,CAAS,SAAS,IAAT,EAAe,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC1C,UAAI,GAAJ,EAAS;AACP,eAAO,GAAG,GAAH,CAAP,CADO;OAAT;;AAIA,eAAS,IAAT,GAAgB,IAAhB,CAL0C;;AAO1C,UAAI,CAAC,KAAK,cAAL,EAAD,IAA0B,CAAC,QAAQ,cAAR,EAAwB;AACrD,YAAI,YAAY,IAAI,IAAJ,CAAS,QAAT,CAAZ,CADiD;AAErD,YAAI,SAAS,mBAAT,EAA8B;;;;;AAKhC,oBAAU,IAAV,GAAiB,SAAS,mBAAT,CALe;SAAlC;AAOA,eAAO,GAAG,IAAH,EAAS,SAAT,CAAP,CATqD;OAAvD;;AAYA,SAAG,QAAH,CAAY,SAAS,IAAT,EAAe,UAAS,GAAT,EAAc,QAAd,EAAwB;AACjD,YAAI,GAAJ,EAAS;AACP,iBAAO,GAAG,GAAH,CAAP,CADO;SAAT;;AAIA,YAAI,CAAC,SAAS,mBAAT,EAA8B;;;AAGjC,mBAAS,mBAAT,GAA+B,SAAS,IAAT,CAHE;SAAnC;AAKA,iBAAS,IAAT,GAAgB,QAAhB;;;AAViD,mBAajD,CAAY,QAAZ,EAAsB,GAAtB,EAA2B,EAA3B,EAbiD;OAAxB,CAA3B,CAnB0C;KAApB,CAAxB,CADsC;GAAxC;;AAsCA,SAAO,SAAS,GAAT,CAAa,OAAb,EAAsB,WAAtB,CAAP,CAzCkC;CAApC;;AA4CA,OAAO,OAAP,GAAiB,iBAAjB","file":"wrapWithVinylFile-compiled.js","sourcesContent":["'use strict';\n\nvar through2 = require('through2');\nvar fs = require('graceful-fs');\nvar File = require('vinyl');\n\nfunction wrapWithVinylFile(options) {\n\n  // A stat property is exposed on file objects as a (wanted) side effect\n  function resolveFile(globFile, enc, cb) {\n    fs.lstat(globFile.path, function(err, stat) {\n      if (err) {\n        return cb(err);\n      }\n\n      globFile.stat = stat;\n\n      if (!stat.isSymbolicLink() || !options.followSymlinks) {\n        var vinylFile = new File(globFile);\n        if (globFile.originalSymlinkPath) {\n          // If we reach here, it means there is at least one\n          // symlink on the path and we need to rewrite the path\n          // to its original value.\n          // Updated file stats will tell getContents() to actually read it.\n          vinylFile.path = globFile.originalSymlinkPath;\n        }\n        return cb(null, vinylFile);\n      }\n\n      fs.realpath(globFile.path, function(err, filePath) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (!globFile.originalSymlinkPath) {\n          // Store the original symlink path before the recursive call\n          // to later rewrite it back.\n          globFile.originalSymlinkPath = globFile.path;\n        }\n        globFile.path = filePath;\n\n        // Recurse to get real file stat\n        resolveFile(globFile, enc, cb);\n      });\n    });\n  }\n\n  return through2.obj(options, resolveFile);\n}\n\nmodule.exports = wrapWithVinylFile;\n"]}