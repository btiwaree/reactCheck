{"version":3,"sources":["fileOperations.js"],"names":[],"mappings":"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","file":"fileOperations-compiled.js","sourcesContent":["'use strict';\n\nvar fs = require('graceful-fs');\nvar assign = require('object-assign');\nvar isEqual = require('lodash.isequal');\nvar isValidDate = require('vali-date');\n\n// TODO shared module\n// TODO include sticky/setuid/setgid, i.e. 7777?\nvar MASK_MODE = parseInt('0777', 8);\nvar DEFAULT_FILE_MODE = parseInt('0666', 8);\nvar APPEND_MODE_REGEXP = /a/;\n\nfunction closeFd(propagatedErr, fd, callback) {\n  if (typeof fd !== 'number') {\n    return callback(propagatedErr);\n  }\n\n  fs.close(fd, onClosed);\n\n  function onClosed(closeErr) {\n    if (propagatedErr || closeErr) {\n      return callback(propagatedErr || closeErr);\n    }\n\n    callback();\n  }\n}\n\nfunction getModeDiff(fsMode, vinylMode) {\n  var modeDiff = 0;\n\n  if (typeof vinylMode === 'number') {\n    modeDiff = (vinylMode ^ fsMode) & MASK_MODE;\n  }\n\n  return modeDiff;\n}\n\nfunction getTimesDiff(fsStat, vinylStat) {\n\n  if (!isValidDate(vinylStat.mtime)) {\n    return;\n  }\n\n  if (isEqual(vinylStat.mtime, fsStat.mtime) &&\n      isEqual(vinylStat.atime, fsStat.atime)) {\n    return;\n  }\n\n  var atime;\n  if (isValidDate(vinylStat.atime)) {\n    atime = vinylStat.atime;\n  } else {\n    atime = fsStat.atime;\n  }\n\n  if (!isValidDate(atime)) {\n    atime = undefined;\n  }\n\n  var timesDiff = {\n    mtime: vinylStat.mtime,\n    atime: atime,\n  };\n\n  return timesDiff;\n}\n\nfunction isOwner(fsStat) {\n  var hasGetuid = (typeof process.getuid === 'function');\n  var hasGeteuid = (typeof process.geteuid === 'function');\n\n  // If we don't have either, assume we don't have permissions.\n  // This should only happen on Windows.\n  // Windows basically noops fchmod and errors on futimes called on directories.\n  if (!hasGeteuid && !hasGetuid) {\n    return false;\n  }\n\n  var uid;\n  if (hasGeteuid) {\n    uid = process.geteuid();\n  } else {\n    uid = process.getuid();\n  }\n\n  if (fsStat.uid !== uid && uid !== 0) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction updateMetadata(fd, file, callback) {\n\n  fs.fstat(fd, onStat);\n\n  function onStat(err, stat) {\n    if (err) {\n      return callback(err, fd);\n    }\n\n    // Check if mode needs to be updated\n    var modeDiff = getModeDiff(stat.mode, file.stat.mode);\n\n    // Check if atime/mtime need to be updated\n    var timesDiff = getTimesDiff(stat, file.stat);\n\n    // Set file.stat to the reflect current state on disk\n    assign(file.stat, stat);\n\n    // Nothing to do\n    if (!modeDiff && !timesDiff) {\n      return callback(null, fd);\n    }\n\n    // Check access, `futimes` and `fchmod` only work if we own the file,\n    // or if we are effectively root.\n    if (!isOwner(stat)) {\n      return callback(null, fd);\n    }\n\n    if (modeDiff) {\n      return mode();\n    }\n    times();\n\n    function mode() {\n      var mode = stat.mode ^ modeDiff;\n\n      fs.fchmod(fd, mode, onFchmod);\n\n      function onFchmod(fchmodErr) {\n        if (!fchmodErr) {\n          file.stat.mode = mode;\n        }\n        if (timesDiff) {\n          return times(fchmodErr);\n        }\n        callback(fchmodErr, fd);\n      }\n    }\n\n    function times(fchmodErr) {\n      fs.futimes(fd, timesDiff.atime, timesDiff.mtime, onFutimes);\n\n      function onFutimes(futimesErr) {\n        if (!futimesErr) {\n          file.stat.atime = timesDiff.atime;\n          file.stat.mtime = timesDiff.mtime;\n        }\n        callback(fchmodErr || futimesErr, fd);\n      }\n    }\n  }\n}\n\n/*\n  Custom writeFile implementation because we need access to the\n  file descriptor after the write is complete.\n  Most of the implementation taken from node core.\n */\nfunction writeFile(path, data, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    callback(new TypeError('Data must be a Buffer'));\n    return;\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  // Default the same as node\n  var mode = options.mode || DEFAULT_FILE_MODE;\n  var flag = options.flag || 'w';\n  var position = APPEND_MODE_REGEXP.test(flag) ? null : 0;\n\n  fs.open(path, flag, mode, onOpen);\n\n  function onOpen(err, fd) {\n    if (err) {\n      return onComplete(err);\n    }\n\n    fs.write(fd, data, 0, data.length, position, onComplete);\n\n    function onComplete(err) {\n      callback(err, fd);\n    }\n  }\n}\n\nmodule.exports = {\n  closeFd: closeFd,\n  getModeDiff: getModeDiff,\n  getTimesDiff: getTimesDiff,\n  isOwner: isOwner,\n  updateMetadata: updateMetadata,\n  writeFile: writeFile,\n};\n"]}