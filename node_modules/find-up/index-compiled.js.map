{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,aAAa,QAAQ,aAAR,CAAb;AACJ,IAAI,UAAU,QAAQ,gBAAR,CAAV;;AAEJ,SAAS,SAAT,CAAmB,CAAnB,EAAsB;AACrB,QAAO,KAAK,OAAL,CAAa,KAAK,EAAL,CAAb,CAAsB,KAAtB,CAA4B,KAAK,GAAL,CAAnC,CADqB;CAAtB;;AAIA,SAAS,IAAT,CAAc,KAAd,EAAqB,QAArB,EAA+B;AAC9B,QAAO,KAAK,OAAL,CAAa,MAAM,IAAN,CAAW,KAAK,GAAL,CAAX,GAAuB,KAAK,GAAL,EAAU,QAA9C,CAAP,CAD8B;CAA/B;;AAIA,OAAO,OAAP,GAAiB,UAAU,QAAV,EAAoB,IAApB,EAA0B;AAC1C,QAAO,QAAQ,EAAR,CADmC;;AAG1C,KAAI,QAAQ,UAAU,KAAK,GAAL,CAAlB,CAHsC;;AAK1C,QAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB;AACrC,GAAC,SAAS,IAAT,GAAgB;AAChB,OAAI,KAAK,KAAK,KAAL,EAAY,QAAZ,CAAL,CADY;;AAGhB,cAAW,EAAX,EAAe,IAAf,CAAoB,UAAU,MAAV,EAAkB;AACrC,QAAI,MAAJ,EAAY;AACX,aAAQ,EAAR,EADW;KAAZ,MAEO,IAAI,MAAM,GAAN,EAAJ,EAAiB;AACvB,YADuB;KAAjB,MAEA;AACN,aAAQ,IAAR,EADM;KAFA;IAHY,CAApB,CAHgB;GAAhB,CAAD,GADqC;EAAnB,CAAnB,CAL0C;CAA1B;;AAsBjB,OAAO,OAAP,CAAe,IAAf,GAAsB,UAAU,QAAV,EAAoB,IAApB,EAA0B;AAC/C,QAAO,QAAQ,EAAR,CADwC;;AAG/C,KAAI,QAAQ,UAAU,KAAK,GAAL,CAAlB,CAH2C;AAI/C,KAAI,MAAM,MAAM,MAAN,CAJqC;;AAM/C,QAAO,KAAP,EAAc;AACb,MAAI,KAAK,KAAK,KAAL,EAAY,QAAZ,CAAL,CADS;;AAGb,MAAI,WAAW,IAAX,CAAgB,EAAhB,CAAJ,EAAyB;AACxB,UAAO,EAAP,CADwB;GAAzB;;AAIA,QAAM,GAAN,GAPa;EAAd;;AAUA,QAAO,IAAP,CAhB+C;CAA1B","file":"index-compiled.js","sourcesContent":["'use strict';\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\n\nfunction splitPath(x) {\n\treturn path.resolve(x || '').split(path.sep);\n}\n\nfunction join(parts, filename) {\n\treturn path.resolve(parts.join(path.sep) + path.sep, filename);\n}\n\nmodule.exports = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\n\treturn new Promise(function (resolve) {\n\t\t(function find() {\n\t\t\tvar fp = join(parts, filename);\n\n\t\t\tpathExists(fp).then(function (exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\tresolve(fp);\n\t\t\t\t} else if (parts.pop()) {\n\t\t\t\t\tfind();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(null);\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t});\n};\n\nmodule.exports.sync = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\tvar len = parts.length;\n\n\twhile (len--) {\n\t\tvar fp = join(parts, filename);\n\n\t\tif (pathExists.sync(fp)) {\n\t\t\treturn fp;\n\t\t}\n\n\t\tparts.pop();\n\t}\n\n\treturn null;\n};\n"]}