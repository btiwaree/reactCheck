{"version":3,"sources":["multi-exit.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,eAAR,EAAyB,IAAzB;IACT,IAAI,QAAQ,KAAR,CAAJ;;AAEF,IAAI,UAAU,QAAQ,OAAR,CAAgB,2BAAhB,CAAV;AACJ,IAAI,SAAS,QAAQ,oCAAR,CAAT;;;;AAIJ,SAAS,QAAT,GAAqB;AACnB,SAAO,gBAAe,IAAf,CAAoB,QAAQ,OAAR,CAA3B;IADmB;CAArB;;;AAKA,IAAI,QAAQ,CAAE,UAAF,EAAc,QAAd,CAAR;AACJ,IAAI,CAAC,UAAD,EAAa,MAAM,IAAN,CAAW,MAAX,EAAjB;;;;AAIA,IAAI,QAAQ,CAAE,CAAF,EAAK,CAAL,EAAQ,MAAR,CAAR;;;;AAIJ,IAAI,UAAU,CAAE,UAAF,EAAc,QAAd,EAAwB,OAAxB,CAAV;AACJ,IAAI,CAAC,UAAD,EAAa,QAAQ,IAAR,CAAa,MAAb,EAAqB,WAArB,EAAjB;;;AAGA,IAAI,WAAW,CAAE,SAAF,EAAa,WAAb,CAAX;;AAEJ,IAAI,OAAO,EAAP;AACJ,MAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC5B,MAAI,YAAY,SAAS,QAAT,GAAoB,CAAC,CAAD,CAApB,GAA0B,KAA1B,CADY;AAE5B,YAAU,OAAV,CAAkB,UAAU,IAAV,EAAgB;AAChC,YAAQ,OAAR,CAAgB,UAAU,MAAV,EAAkB;AAChC,eAAS,OAAT,CAAiB,UAAU,OAAV,EAAmB;AAClC,aAAK,IAAL,CAAU,CAAC,IAAD,EAAO,IAAP,EAAa,MAAb,EAAqB,OAArB,EAA8B,IAA9B,CAAmC,GAAnC,CAAV,EADkC;OAAnB,CAAjB,CADgC;KAAlB,CAAhB,CADgC;GAAhB,CAAlB,CAF4B;CAAhB,CAAd;;AAWA,KAAK,OAAL,CAAa,UAAU,GAAV,EAAe;AAC1B,IAAE,IAAF,CAAO,GAAP,EAAY,UAAU,CAAV,EAAa;AACvB,QAAI,MAAM,QAAQ,QAAR,GAAmB,GAAnB,GAAyB,OAAzB,GAAmC,GAAnC,GAAyC,GAAzC,CADa;AAEvB,SAAK,GAAL,EAAU,UAAU,GAAV,EAAe,MAAf,EAAuB,MAAvB,EAA+B;AACvC,UAAI,MAAM,KAAK,KAAL,CAAW,MAAX,CAAN,CADmC;AAEvC,UAAI,GAAJ,EAAS;AACP,YAAI,UAAJ,GAAiB,IAAI,IAAJ,CADV;AAEP,YAAI,YAAJ,GAAmB,IAAI,MAAJ,CAFZ;OAAT,MAGO;AACL,YAAI,UAAJ,GAAiB,CAAjB,CADK;AAEL,YAAI,YAAJ,GAAmB,IAAnB,CAFK;OAHP;AAOA,UAAI,MAAJ,GAAa,OAAO,IAAP,GAAc,KAAd,CAAoB,IAApB,CAAb,CATuC;AAUvC,QAAE,IAAF,CAAO,GAAP,EAAY,OAAO,GAAP,CAAZ,EAVuC;AAWvC,QAAE,GAAF,GAXuC;KAA/B,CAAV,CAFuB;GAAb,CAAZ,CAD0B;CAAf,CAAb","file":"multi-exit-compiled.js","sourcesContent":["var exec = require('child_process').exec,\n  t = require('tap')\n\nvar fixture = require.resolve('./fixtures/change-code.js')\nvar expect = require('./fixtures/change-code-expect.json')\n\n// process.exitCode has problems prior to:\n// https://github.com/joyent/node/commit/c0d81f90996667a658aa4403123e02161262506a\nfunction isZero10 () {\n  return /^v0\\.10\\..+$/.test(process.version)\n}\n\n// process.exit(code), process.exitCode = code, normal exit\nvar types = [ 'explicit', 'normal' ]\nif (!isZero10()) types.push('code')\n\n// initial code that is set.  Note, for 'normal' exit, there's no\n// point doing these, because we just exit without modifying code\nvar codes = [ 0, 2, 'null' ]\n\n// do not change, change to 5 with exit(), change to 5 with exitCode,\n// change to 5 and then to 2 with exit(), change twice with exitcode\nvar changes = [ 'nochange', 'change', 'twice']\nif (!isZero10()) changes.push('code', 'twicecode')\n\n// use signal-exit, use process.on('exit')\nvar handlers = [ 'sigexit', 'nosigexit' ]\n\nvar opts = []\ntypes.forEach(function (type) {\n  var testCodes = type === 'normal' ? [0] : codes\n  testCodes.forEach(function (code) {\n    changes.forEach(function (change) {\n      handlers.forEach(function (handler) {\n        opts.push([type, code, change, handler].join(' '))\n      })\n    })\n  })\n})\n\nopts.forEach(function (opt) {\n  t.test(opt, function (t) {\n    var cmd = process.execPath + ' ' + fixture + ' ' + opt\n    exec(cmd, function (err, stdout, stderr) {\n      var res = JSON.parse(stdout)\n      if (err) {\n        res.actualCode = err.code\n        res.actualSignal = err.signal\n      } else {\n        res.actualCode = 0\n        res.actualSignal = null\n      }\n      res.stderr = stderr.trim().split('\\n')\n      t.same(res, expect[opt])\n      t.end()\n    })\n  })\n})\n"]}