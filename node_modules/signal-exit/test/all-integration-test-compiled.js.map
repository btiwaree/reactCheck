{"version":3,"sources":["all-integration-test.js"],"names":[],"mappings":"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","file":"all-integration-test-compiled.js","sourcesContent":["/* global describe, it */\n\nvar exec = require('child_process').exec,\n  assert = require('assert')\n\nrequire('chai').should()\nrequire('tap').mochaGlobals()\n\nvar onSignalExit = require('../')\n\ndescribe('all-signals-integration-test', function () {\n\n  // These are signals that are aliases for other signals, so\n  // the result will sometimes be one of the others.  For these,\n  // we just verify that we GOT a signal, not what it is.\n  function weirdSignal (sig) {\n    return sig === 'SIGIOT' ||\n      sig === 'SIGIO' ||\n      sig === 'SIGSYS' ||\n      sig === 'SIGIOT' ||\n      sig === 'SIGABRT' ||\n      sig === 'SIGPOLL' ||\n      sig === 'SIGUNUSED'\n  }\n\n  // Exhaustively test every signal, and a few numbers.\n  var signals = onSignalExit.signals()\n  signals.concat('', 0, 1, 2, 3, 54).forEach(function (sig) {\n    var node = process.execPath\n    var js = require.resolve('./fixtures/exiter.js')\n    it('exits properly: ' + sig, function (done) {\n      // travis has issues with SIGUSR1 on Node 0.x.10.\n      if (process.env.TRAVIS && sig === 'SIGUSR1') return done()\n\n      exec(node + ' ' + js + ' ' + sig, function (err, stdout, stderr) {\n        if (sig) {\n          assert(err)\n          if (!isNaN(sig)) {\n            assert.equal(err.code, sig)\n          } else if (!weirdSignal(sig)) {\n            if (!process.env.TRAVIS) err.signal.should.equal(sig)\n          } else if (sig) {\n            if (!process.env.TRAVIS) assert(err.signal)\n          }\n        } else {\n          assert.ifError(err)\n        }\n\n        try {\n          var data = JSON.parse(stdout)\n        } catch (er) {\n          console.error('invalid json: %j', stdout, stderr)\n          throw er\n        }\n\n        if (weirdSignal(sig)) {\n          data.wanted[1] = true\n          data.found[1] = !!data.found[1]\n        }\n        assert.deepEqual(data.found, data.wanted)\n        done()\n      })\n    })\n  })\n\n  signals.forEach(function (sig) {\n    var node = process.execPath\n    var js = require.resolve('./fixtures/parent.js')\n    it('exits properly: (external sig) ' + sig, function (done) {\n      // travis has issues with SIGUSR1 on Node 0.x.10.\n      if (process.env.TRAVIS && sig === 'SIGUSR1') return done()\n\n      var cmd = node + ' ' + js + ' ' + sig\n      exec(cmd, function (err, stdout, stderr) {\n        assert.ifError(err)\n        try {\n          var data = JSON.parse(stdout)\n        } catch (er) {\n          console.error('invalid json: %j', stdout, stderr)\n          throw er\n        }\n\n        if (weirdSignal(sig)) {\n          data.wanted[1] = true\n          data.found[1] = !!data.found[1]\n          data.external[1] = !!data.external[1]\n        }\n        assert.deepEqual(data.found, data.wanted)\n        assert.deepEqual(data.external, data.wanted)\n        done()\n      })\n    })\n  })\n})\n"]}