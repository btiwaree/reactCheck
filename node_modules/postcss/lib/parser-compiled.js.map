{"version":3,"sources":["parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _declaration = require('./declaration');\n\nvar _declaration2 = _interopRequireDefault(_declaration);\n\nvar _tokenize = require('./tokenize');\n\nvar _tokenize2 = _interopRequireDefault(_tokenize);\n\nvar _comment = require('./comment');\n\nvar _comment2 = _interopRequireDefault(_comment);\n\nvar _atRule = require('./at-rule');\n\nvar _atRule2 = _interopRequireDefault(_atRule);\n\nvar _root = require('./root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nvar _rule = require('./rule');\n\nvar _rule2 = _interopRequireDefault(_rule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Parser = function () {\n    function Parser(input) {\n        _classCallCheck(this, Parser);\n\n        this.input = input;\n\n        this.pos = 0;\n        this.root = new _root2.default();\n        this.current = this.root;\n        this.spaces = '';\n        this.semicolon = false;\n\n        this.root.source = { input: input, start: { line: 1, column: 1 } };\n    }\n\n    Parser.prototype.tokenize = function tokenize() {\n        this.tokens = (0, _tokenize2.default)(this.input);\n    };\n\n    Parser.prototype.loop = function loop() {\n        var token = undefined;\n        while (this.pos < this.tokens.length) {\n            token = this.tokens[this.pos];\n\n            switch (token[0]) {\n                case 'word':\n                case ':':\n                    this.word();\n                    break;\n\n                case '}':\n                    this.end(token);\n                    break;\n\n                case 'comment':\n                    this.comment(token);\n                    break;\n\n                case 'at-word':\n                    this.atrule(token);\n                    break;\n\n                case '{':\n                    this.emptyRule(token);\n                    break;\n\n                default:\n                    this.spaces += token[1];\n                    break;\n            }\n\n            this.pos += 1;\n        }\n        this.endFile();\n    };\n\n    Parser.prototype.comment = function comment(token) {\n        var node = new _comment2.default();\n        this.init(node, token[2], token[3]);\n        node.source.end = { line: token[4], column: token[5] };\n\n        var text = token[1].slice(2, -2);\n        if (/^\\s*$/.test(text)) {\n            node.text = '';\n            node.raws.left = text;\n            node.raws.right = '';\n        } else {\n            var match = text.match(/^(\\s*)([^]*[^\\s])(\\s*)$/);\n            node.text = match[2];\n            node.raws.left = match[1];\n            node.raws.right = match[3];\n        }\n    };\n\n    Parser.prototype.emptyRule = function emptyRule(token) {\n        var node = new _rule2.default();\n        this.init(node, token[2], token[3]);\n        node.selector = '';\n        node.raws.between = '';\n        this.current = node;\n    };\n\n    Parser.prototype.word = function word() {\n        var token = undefined;\n        var end = false;\n        var type = null;\n        var colon = false;\n        var bracket = null;\n        var brackets = 0;\n\n        var start = this.pos;\n        this.pos += 1;\n        while (this.pos < this.tokens.length) {\n            token = this.tokens[this.pos];\n            type = token[0];\n\n            if (type === '(') {\n                if (!bracket) bracket = token;\n                brackets += 1;\n            } else if (brackets === 0) {\n                if (type === ';') {\n                    if (colon) {\n                        this.decl(this.tokens.slice(start, this.pos + 1));\n                        return;\n                    } else {\n                        break;\n                    }\n                } else if (type === '{') {\n                    this.rule(this.tokens.slice(start, this.pos + 1));\n                    return;\n                } else if (type === '}') {\n                    this.pos -= 1;\n                    end = true;\n                    break;\n                } else if (type === ':') {\n                    colon = true;\n                }\n            } else if (type === ')') {\n                brackets -= 1;\n                if (brackets === 0) bracket = null;\n            }\n\n            this.pos += 1;\n        }\n        if (this.pos === this.tokens.length) {\n            this.pos -= 1;\n            end = true;\n        }\n\n        if (brackets > 0) this.unclosedBracket(bracket);\n\n        if (end && colon) {\n            while (this.pos > start) {\n                token = this.tokens[this.pos][0];\n                if (token !== 'space' && token !== 'comment') break;\n                this.pos -= 1;\n            }\n            this.decl(this.tokens.slice(start, this.pos + 1));\n            return;\n        }\n\n        this.unknownWord(start);\n    };\n\n    Parser.prototype.rule = function rule(tokens) {\n        tokens.pop();\n\n        var node = new _rule2.default();\n        this.init(node, tokens[0][2], tokens[0][3]);\n\n        node.raws.between = this.spacesFromEnd(tokens);\n        this.raw(node, 'selector', tokens);\n        this.current = node;\n    };\n\n    Parser.prototype.decl = function decl(tokens) {\n        var node = new _declaration2.default();\n        this.init(node);\n\n        var last = tokens[tokens.length - 1];\n        if (last[0] === ';') {\n            this.semicolon = true;\n            tokens.pop();\n        }\n        if (last[4]) {\n            node.source.end = { line: last[4], column: last[5] };\n        } else {\n            node.source.end = { line: last[2], column: last[3] };\n        }\n\n        while (tokens[0][0] !== 'word') {\n            node.raws.before += tokens.shift()[1];\n        }\n        node.source.start = { line: tokens[0][2], column: tokens[0][3] };\n\n        node.prop = '';\n        while (tokens.length) {\n            var type = tokens[0][0];\n            if (type === ':' || type === 'space' || type === 'comment') {\n                break;\n            }\n            node.prop += tokens.shift()[1];\n        }\n\n        node.raws.between = '';\n\n        var token = undefined;\n        while (tokens.length) {\n            token = tokens.shift();\n\n            if (token[0] === ':') {\n                node.raws.between += token[1];\n                break;\n            } else {\n                node.raws.between += token[1];\n            }\n        }\n\n        if (node.prop[0] === '_' || node.prop[0] === '*') {\n            node.raws.before += node.prop[0];\n            node.prop = node.prop.slice(1);\n        }\n        node.raws.between += this.spacesFromStart(tokens);\n        this.precheckMissedSemicolon(tokens);\n\n        for (var i = tokens.length - 1; i > 0; i--) {\n            token = tokens[i];\n            if (token[1] === '!important') {\n                node.important = true;\n                var string = this.stringFrom(tokens, i);\n                string = this.spacesFromEnd(tokens) + string;\n                if (string !== ' !important') node.raws.important = string;\n                break;\n            } else if (token[1] === 'important') {\n                var cache = tokens.slice(0);\n                var str = '';\n                for (var j = i; j > 0; j--) {\n                    var type = cache[j][0];\n                    if (str.trim().indexOf('!') === 0 && type !== 'space') {\n                        break;\n                    }\n                    str = cache.pop()[1] + str;\n                }\n                if (str.trim().indexOf('!') === 0) {\n                    node.important = true;\n                    node.raws.important = str;\n                    tokens = cache;\n                }\n            }\n\n            if (token[0] !== 'space' && token[0] !== 'comment') {\n                break;\n            }\n        }\n\n        this.raw(node, 'value', tokens);\n\n        if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);\n    };\n\n    Parser.prototype.atrule = function atrule(token) {\n        var node = new _atRule2.default();\n        node.name = token[1].slice(1);\n        if (node.name === '') {\n            this.unnamedAtrule(node, token);\n        }\n        this.init(node, token[2], token[3]);\n\n        var last = false;\n        var open = false;\n        var params = [];\n\n        this.pos += 1;\n        while (this.pos < this.tokens.length) {\n            token = this.tokens[this.pos];\n\n            if (token[0] === ';') {\n                node.source.end = { line: token[2], column: token[3] };\n                this.semicolon = true;\n                break;\n            } else if (token[0] === '{') {\n                open = true;\n                break;\n            } else if (token[0] === '}') {\n                this.end(token);\n                break;\n            } else {\n                params.push(token);\n            }\n\n            this.pos += 1;\n        }\n        if (this.pos === this.tokens.length) {\n            last = true;\n        }\n\n        node.raws.between = this.spacesFromEnd(params);\n        if (params.length) {\n            node.raws.afterName = this.spacesFromStart(params);\n            this.raw(node, 'params', params);\n            if (last) {\n                token = params[params.length - 1];\n                node.source.end = { line: token[4], column: token[5] };\n                this.spaces = node.raws.between;\n                node.raws.between = '';\n            }\n        } else {\n            node.raws.afterName = '';\n            node.params = '';\n        }\n\n        if (open) {\n            node.nodes = [];\n            this.current = node;\n        }\n    };\n\n    Parser.prototype.end = function end(token) {\n        if (this.current.nodes && this.current.nodes.length) {\n            this.current.raws.semicolon = this.semicolon;\n        }\n        this.semicolon = false;\n\n        this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n        this.spaces = '';\n\n        if (this.current.parent) {\n            this.current.source.end = { line: token[2], column: token[3] };\n            this.current = this.current.parent;\n        } else {\n            this.unexpectedClose(token);\n        }\n    };\n\n    Parser.prototype.endFile = function endFile() {\n        if (this.current.parent) this.unclosedBlock();\n        if (this.current.nodes && this.current.nodes.length) {\n            this.current.raws.semicolon = this.semicolon;\n        }\n        this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n    };\n\n    // Helpers\n\n    Parser.prototype.init = function init(node, line, column) {\n        this.current.push(node);\n\n        node.source = { start: { line: line, column: column }, input: this.input };\n        node.raws.before = this.spaces;\n        this.spaces = '';\n        if (node.type !== 'comment') this.semicolon = false;\n    };\n\n    Parser.prototype.raw = function raw(node, prop, tokens) {\n        var token = undefined,\n            type = undefined;\n        var length = tokens.length;\n        var value = '';\n        var clean = true;\n        for (var i = 0; i < length; i += 1) {\n            token = tokens[i];\n            type = token[0];\n            if (type === 'comment' || type === 'space' && i === length - 1) {\n                clean = false;\n            } else {\n                value += token[1];\n            }\n        }\n        if (!clean) {\n            var raw = tokens.reduce(function (all, i) {\n                return all + i[1];\n            }, '');\n            node.raws[prop] = { value: value, raw: raw };\n        }\n        node[prop] = value;\n    };\n\n    Parser.prototype.spacesFromEnd = function spacesFromEnd(tokens) {\n        var next = undefined;\n        var spaces = '';\n        while (tokens.length) {\n            next = tokens[tokens.length - 1][0];\n            if (next !== 'space' && next !== 'comment') break;\n            spaces += tokens.pop()[1];\n        }\n        return spaces;\n    };\n\n    Parser.prototype.spacesFromStart = function spacesFromStart(tokens) {\n        var next = undefined;\n        var spaces = '';\n        while (tokens.length) {\n            next = tokens[0][0];\n            if (next !== 'space' && next !== 'comment') break;\n            spaces += tokens.shift()[1];\n        }\n        return spaces;\n    };\n\n    Parser.prototype.stringFrom = function stringFrom(tokens, from) {\n        var result = '';\n        for (var i = from; i < tokens.length; i++) {\n            result += tokens[i][1];\n        }\n        tokens.splice(from, tokens.length - from);\n        return result;\n    };\n\n    Parser.prototype.colon = function colon(tokens) {\n        var brackets = 0;\n        var token = undefined,\n            type = undefined,\n            prev = undefined;\n        for (var i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            type = token[0];\n\n            if (type === '(') {\n                brackets += 1;\n            } else if (type === ')') {\n                brackets -= 1;\n            } else if (brackets === 0 && type === ':') {\n                if (!prev) {\n                    this.doubleColon(token);\n                } else if (prev[0] === 'word' && prev[1] === 'progid') {\n                    continue;\n                } else {\n                    return i;\n                }\n            }\n\n            prev = token;\n        }\n        return false;\n    };\n\n    // Errors\n\n    Parser.prototype.unclosedBracket = function unclosedBracket(bracket) {\n        throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);\n    };\n\n    Parser.prototype.unknownWord = function unknownWord(start) {\n        var token = this.tokens[start];\n        throw this.input.error('Unknown word', token[2], token[3]);\n    };\n\n    Parser.prototype.unexpectedClose = function unexpectedClose(token) {\n        throw this.input.error('Unexpected }', token[2], token[3]);\n    };\n\n    Parser.prototype.unclosedBlock = function unclosedBlock() {\n        var pos = this.current.source.start;\n        throw this.input.error('Unclosed block', pos.line, pos.column);\n    };\n\n    Parser.prototype.doubleColon = function doubleColon(token) {\n        throw this.input.error('Double colon', token[2], token[3]);\n    };\n\n    Parser.prototype.unnamedAtrule = function unnamedAtrule(node, token) {\n        throw this.input.error('At-rule without name', token[2], token[3]);\n    };\n\n    Parser.prototype.precheckMissedSemicolon = function precheckMissedSemicolon(tokens) {\n        // Hook for Safe Parser\n        tokens;\n    };\n\n    Parser.prototype.checkMissedSemicolon = function checkMissedSemicolon(tokens) {\n        var colon = this.colon(tokens);\n        if (colon === false) return;\n\n        var founded = 0;\n        var token = undefined;\n        for (var j = colon - 1; j >= 0; j--) {\n            token = tokens[j];\n            if (token[0] !== 'space') {\n                founded += 1;\n                if (founded === 2) break;\n            }\n        }\n        throw this.input.error('Missed semicolon', token[2], token[3]);\n    };\n\n    return Parser;\n}();\n\nexports.default = Parser;\nmodule.exports = exports['default'];"]}