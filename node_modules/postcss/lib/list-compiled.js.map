{"version":3,"sources":["list.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,IAAI,OAAO;AACP,WAAO,SAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,EAAmC,IAAnC,EAAyC;AAC5C,YAAI,QAAQ,EAAR,CADwC;AAE5C,YAAI,UAAU,EAAV,CAFwC;AAG5C,YAAI,QAAQ,KAAR,CAHwC;;AAK5C,YAAI,OAAO,CAAP,CALwC;AAM5C,YAAI,QAAQ,KAAR,CANwC;AAO5C,YAAI,SAAS,KAAT,CAPwC;;AAS5C,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAO,MAAP,EAAe,GAAnC,EAAwC;AACpC,gBAAI,SAAS,OAAO,CAAP,CAAT,CADgC;;AAGpC,gBAAI,KAAJ,EAAW;AACP,oBAAI,MAAJ,EAAY;AACR,6BAAS,KAAT,CADQ;iBAAZ,MAEO,IAAI,WAAW,IAAX,EAAiB;AACxB,6BAAS,IAAT,CADwB;iBAArB,MAEA,IAAI,WAAW,KAAX,EAAkB;AACzB,4BAAQ,KAAR,CADyB;iBAAtB;aALX,MAQO,IAAI,WAAW,GAAX,IAAkB,WAAW,IAAX,EAAiB;AAC1C,wBAAQ,MAAR,CAD0C;aAAvC,MAEA,IAAI,WAAW,GAAX,EAAgB;AACvB,wBAAQ,CAAR,CADuB;aAApB,MAEA,IAAI,WAAW,GAAX,EAAgB;AACvB,oBAAI,OAAO,CAAP,EAAU,QAAQ,CAAR,CAAd;aADG,MAEA,IAAI,SAAS,CAAT,EAAY;AACnB,oBAAI,WAAW,OAAX,CAAmB,MAAnB,MAA+B,CAAC,CAAD,EAAI,QAAQ,IAAR,CAAvC;aADG;;AAIP,gBAAI,KAAJ,EAAW;AACP,oBAAI,YAAY,EAAZ,EAAgB,MAAM,IAAN,CAAW,QAAQ,IAAR,EAAX,EAApB;AACA,0BAAU,EAAV,CAFO;AAGP,wBAAQ,KAAR,CAHO;aAAX,MAIO;AACH,2BAAW,MAAX,CADG;aAJP;SArBJ;;AA8BA,YAAI,QAAQ,YAAY,EAAZ,EAAgB,MAAM,IAAN,CAAW,QAAQ,IAAR,EAAX,EAA5B;AACA,eAAO,KAAP,CAxC4C;KAAzC;AA0CP,WAAO,SAAS,KAAT,CAAe,MAAf,EAAuB;AAC1B,YAAI,SAAS,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAT,CADsB;AAE1B,eAAO,KAAK,KAAL,CAAW,MAAX,EAAmB,MAAnB,CAAP,CAF0B;KAAvB;AAIP,WAAO,SAAS,KAAT,CAAe,MAAf,EAAuB;AAC1B,YAAI,QAAQ,GAAR,CADsB;AAE1B,eAAO,KAAK,KAAL,CAAW,MAAX,EAAmB,CAAC,KAAD,CAAnB,EAA4B,IAA5B,CAAP,CAF0B;KAAvB;CA/CP;;AAqDJ,QAAQ,OAAR,GAAkB,IAAlB;AACA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"list-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nvar list = {\n    split: function split(string, separators, last) {\n        var array = [];\n        var current = '';\n        var split = false;\n\n        var func = 0;\n        var quote = false;\n        var escape = false;\n\n        for (var i = 0; i < string.length; i++) {\n            var letter = string[i];\n\n            if (quote) {\n                if (escape) {\n                    escape = false;\n                } else if (letter === '\\\\') {\n                    escape = true;\n                } else if (letter === quote) {\n                    quote = false;\n                }\n            } else if (letter === '\"' || letter === '\\'') {\n                quote = letter;\n            } else if (letter === '(') {\n                func += 1;\n            } else if (letter === ')') {\n                if (func > 0) func -= 1;\n            } else if (func === 0) {\n                if (separators.indexOf(letter) !== -1) split = true;\n            }\n\n            if (split) {\n                if (current !== '') array.push(current.trim());\n                current = '';\n                split = false;\n            } else {\n                current += letter;\n            }\n        }\n\n        if (last || current !== '') array.push(current.trim());\n        return array;\n    },\n    space: function space(string) {\n        var spaces = [' ', '\\n', '\\t'];\n        return list.split(string, spaces);\n    },\n    comma: function comma(string) {\n        var comma = ',';\n        return list.split(string, [comma], true);\n    }\n};\n\nexports.default = list;\nmodule.exports = exports['default'];"]}