{"version":3,"sources":["added_formatters.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAU,QAAQ,MAAR,CAAV;;;AAGJ,IAAI,IAAI,QAAQ,UAAR,CAAJ;;AAEJ,IAAI,KAAK,QAAQ,UAAR,CAAL;AACJ,IAAI,gBAAgB,QAAQ,gBAAR,CAAhB;;;;;;;;;;;;AAYJ,SAAS,6BAAT,CAAuC,OAAvC,EAAgD;AAC9C,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,OAAzB,EAD8C;CAAhD;;AAIA,KAAK,QAAL,CAAc,6BAAd,EAA6C,aAA7C;;AAEA,8BAA8B,SAA9B,CAAwC,cAAxC,GAAyD,UAAU,MAAV,EAAkB;AACzE,MAAI,OAAO,OAAO,IAAP,CAD8D;AAEzE,MAAI,OAAO,IAAP,CAAY,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAD,EAAI;AAClD,QAAI,OAAO,YAAP,KAAwB,EAAE,QAAF,EAAY;AACtC,UAAI,mBAAmB,CAAE,EAAE,QAAF,EAAY,EAAE,YAAF,CAAjC,CADkC;AAEtC,UAAI,OAAO,UAAP,MAAwB,iBAAiB,OAAjB,CAAyB,OAAO,KAAP,CAAzB,IAA0C,CAA1C,EAA8C;AACxE,gBAAQ,8BAAR,CADwE;OAA1E;KAFF;GADF;AAQA,SAAO,IAAP,CAVyE;CAAlB;;AAazD,OAAO,OAAP,CAAe,6BAAf,GAA+C,6BAA/C;;;;;;;;;;;;AAYA,SAAS,2BAAT,CAAqC,OAArC,EAA8C;AAC5C,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,OAAzB,EAD4C;CAA9C;;AAIA,KAAK,QAAL,CAAc,2BAAd,EAA2C,aAA3C;;AAEA,4BAA4B,SAA5B,CAAsC,SAAtC,GAAkD,UAAU,IAAV,EAAgB,KAAhB,EAAuB,MAAvB,EAA+B;AAC/E,MAAI,QAAQ,KAAK,KAAL,CAAW,IAAX,CAAR,CAD2E;AAE/E,UAAQ,MAAM,GAAN,CAAU,UAAU,IAAV,EAAgB;AAC9B,WAAO,GAAG,OAAH,CAAW,SAAS,IAAT,CAAlB,CAD8B;GAAhB,CAAlB,CAF+E;AAK/E,SAAO,MAAM,IAAN,CAAW,IAAX,CAAP,CAL+E;CAA/B;AAOlD,OAAO,OAAP,CAAe,2BAAf,GAA6C,2BAA7C;;;;;;;;;;;;AAYA,SAAS,oBAAT,CAA8B,OAA9B,EAAuC;AACrC,8BAA4B,IAA5B,CAAiC,IAAjC,EAAuC,OAAvC,EADqC;CAAvC;;AAIA,KAAK,QAAL,CAAc,oBAAd,EAAoC,2BAApC;;AAEA,qBAAqB,SAArB,CAA+B,WAA/B,GAA6C,UAAU,IAAV,EAAgB;AAC3D,SAAO,KAAK,KAAL,CAAW,IAAX,CAAP,CAD2D;CAAhB;;AAI7C,OAAO,OAAP,CAAe,oBAAf,GAAsC,oBAAtC","file":"added_formatters-compiled.js","sourcesContent":["'use strict';\n\nvar util    = require('util');\n\n// Constants\nvar c = require('../const');\n\nvar $$ = require('../utils');\nvar HelpFormatter = require('./formatter.js');\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which adds default values to argument help.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction ArgumentDefaultsHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(ArgumentDefaultsHelpFormatter, HelpFormatter);\n\nArgumentDefaultsHelpFormatter.prototype._getHelpString = function (action) {\n  var help = action.help;\n  if (action.help.indexOf('%(defaultValue)s') === -1) {\n    if (action.defaultValue !== c.SUPPRESS) {\n      var defaulting_nargs = [ c.OPTIONAL, c.ZERO_OR_MORE ];\n      if (action.isOptional() || (defaulting_nargs.indexOf(action.nargs) >= 0)) {\n        help += ' (default: %(defaultValue)s)';\n      }\n    }\n  }\n  return help;\n};\n\nmodule.exports.ArgumentDefaultsHelpFormatter = ArgumentDefaultsHelpFormatter;\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which retains any formatting in descriptions.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawDescriptionHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(RawDescriptionHelpFormatter, HelpFormatter);\n\nRawDescriptionHelpFormatter.prototype._fillText = function (text, width, indent) {\n  var lines = text.split('\\n');\n  lines = lines.map(function (line) {\n      return $$.trimEnd(indent + line);\n    });\n  return lines.join('\\n');\n};\nmodule.exports.RawDescriptionHelpFormatter = RawDescriptionHelpFormatter;\n\n/**\n * new RawTextHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawTextHelpFormatter, ...})\n *\n * Help message formatter which retains formatting of all help text.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawTextHelpFormatter(options) {\n  RawDescriptionHelpFormatter.call(this, options);\n}\n\nutil.inherits(RawTextHelpFormatter, RawDescriptionHelpFormatter);\n\nRawTextHelpFormatter.prototype._splitLines = function (text) {\n  return text.split('\\n');\n};\n\nmodule.exports.RawTextHelpFormatter = RawTextHelpFormatter;\n"]}