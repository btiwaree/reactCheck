{"version":3,"sources":["formatter.js"],"names":[],"mappings":"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","file":"formatter-compiled.js","sourcesContent":["/**\n * class HelpFormatter\n *\n * Formatter for generating usage messages and argument help strings. Only the\n * name of this class is considered a public API. All the methods provided by\n * the class are considered an implementation detail.\n *\n * Do not call in your code, use this class only for inherits your own forvatter\n *\n * ToDo add [additonal formatters][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#formatter-class\n **/\n'use strict';\n\nvar sprintf = require('sprintf-js').sprintf;\n\n// Constants\nvar c = require('../const');\n\nvar $$ = require('../utils');\n\n\n/*:nodoc:* internal\n * new Support(parent, heding)\n * - parent (object): parent section\n * - heading (string): header string\n *\n **/\nfunction Section(parent, heading) {\n  this._parent = parent;\n  this._heading = heading;\n  this._items = [];\n}\n\n/*:nodoc:* internal\n * Section#addItem(callback) -> Void\n * - callback (array): tuple with function and args\n *\n * Add function for single element\n **/\nSection.prototype.addItem = function (callback) {\n  this._items.push(callback);\n};\n\n/*:nodoc:* internal\n * Section#formatHelp(formatter) -> string\n * - formatter (HelpFormatter): current formatter\n *\n * Form help section string\n *\n **/\nSection.prototype.formatHelp = function (formatter) {\n  var itemHelp, heading;\n\n  // format the indented section\n  if (this._parent) {\n    formatter._indent();\n  }\n\n  itemHelp = this._items.map(function (item) {\n    var obj, func, args;\n\n    obj = formatter;\n    func = item[0];\n    args = item[1];\n    return func.apply(obj, args);\n  });\n  itemHelp = formatter._joinParts(itemHelp);\n\n  if (this._parent) {\n    formatter._dedent();\n  }\n\n  // return nothing if the section was empty\n  if (!itemHelp) {\n    return '';\n  }\n\n  // add the heading if the section was non-empty\n  heading = '';\n  if (this._heading && this._heading !== c.SUPPRESS) {\n    var currentIndent = formatter.currentIndent;\n    heading = $$.repeat(' ', currentIndent) + this._heading + ':' + c.EOL;\n  }\n\n  // join the section-initialize newline, the heading and the help\n  return formatter._joinParts([ c.EOL, heading, itemHelp, c.EOL ]);\n};\n\n/**\n * new HelpFormatter(options)\n *\n * #### Options:\n * - `prog`: program name\n * - `indentIncriment`: indent step, default value 2\n * - `maxHelpPosition`: max help position, default value = 24\n * - `width`: line width\n *\n **/\nvar HelpFormatter = module.exports = function HelpFormatter(options) {\n  options = options || {};\n\n  this._prog = options.prog;\n\n  this._maxHelpPosition = options.maxHelpPosition || 24;\n  this._width = (options.width || ((process.env.COLUMNS || 80) - 2));\n\n  this._currentIndent = 0;\n  this._indentIncriment = options.indentIncriment || 2;\n  this._level = 0;\n  this._actionMaxLength = 0;\n\n  this._rootSection = new Section(null);\n  this._currentSection = this._rootSection;\n\n  this._whitespaceMatcher = new RegExp('\\\\s+', 'g');\n  this._longBreakMatcher = new RegExp(c.EOL + c.EOL + c.EOL + '+', 'g');\n};\n\nHelpFormatter.prototype._indent = function () {\n  this._currentIndent += this._indentIncriment;\n  this._level += 1;\n};\n\nHelpFormatter.prototype._dedent = function () {\n  this._currentIndent -= this._indentIncriment;\n  this._level -= 1;\n  if (this._currentIndent < 0) {\n    throw new Error('Indent decreased below 0.');\n  }\n};\n\nHelpFormatter.prototype._addItem = function (func, args) {\n  this._currentSection.addItem([ func, args ]);\n};\n\n//\n// Message building methods\n//\n\n/**\n * HelpFormatter#startSection(heading) -> Void\n * - heading (string): header string\n *\n * Start new help section\n *\n * See alse [code example][1]\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n *\n **/\nHelpFormatter.prototype.startSection = function (heading) {\n  this._indent();\n  var section = new Section(this._currentSection, heading);\n  var func = section.formatHelp.bind(section);\n  this._addItem(func, [ this ]);\n  this._currentSection = section;\n};\n\n/**\n * HelpFormatter#endSection -> Void\n *\n * End help section\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n **/\nHelpFormatter.prototype.endSection = function () {\n  this._currentSection = this._currentSection._parent;\n  this._dedent();\n};\n\n/**\n * HelpFormatter#addText(text) -> Void\n * - text (string): plain text\n *\n * Add plain text into current section\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n *\n **/\nHelpFormatter.prototype.addText = function (text) {\n  if (text && text !== c.SUPPRESS) {\n    this._addItem(this._formatText, [ text ]);\n  }\n};\n\n/**\n * HelpFormatter#addUsage(usage, actions, groups, prefix) -> Void\n * - usage (string): usage text\n * - actions (array): actions list\n * - groups (array): groups list\n * - prefix (string): usage prefix\n *\n * Add usage data into current section\n *\n * ##### Example\n *\n *      formatter.addUsage(this.usage, this._actions, []);\n *      return formatter.formatHelp();\n *\n **/\nHelpFormatter.prototype.addUsage = function (usage, actions, groups, prefix) {\n  if (usage !== c.SUPPRESS) {\n    this._addItem(this._formatUsage, [ usage, actions, groups, prefix ]);\n  }\n};\n\n/**\n * HelpFormatter#addArgument(action) -> Void\n * - action (object): action\n *\n * Add argument into current section\n *\n * Single variant of [[HelpFormatter#addArguments]]\n **/\nHelpFormatter.prototype.addArgument = function (action) {\n  if (action.help !== c.SUPPRESS) {\n    var self = this;\n\n    // find all invocations\n    var invocations = [ this._formatActionInvocation(action) ];\n    var invocationLength = invocations[0].length;\n\n    var actionLength;\n\n    if (action._getSubactions) {\n      this._indent();\n      action._getSubactions().forEach(function (subaction) {\n\n        var invocationNew = self._formatActionInvocation(subaction);\n        invocations.push(invocationNew);\n        invocationLength = Math.max(invocationLength, invocationNew.length);\n\n      });\n      this._dedent();\n    }\n\n    // update the maximum item length\n    actionLength = invocationLength + this._currentIndent;\n    this._actionMaxLength = Math.max(this._actionMaxLength, actionLength);\n\n    // add the item to the list\n    this._addItem(this._formatAction, [ action ]);\n  }\n};\n\n/**\n * HelpFormatter#addArguments(actions) -> Void\n * - actions (array): actions list\n *\n * Mass add arguments into current section\n *\n * ##### Example\n *\n *      formatter.startSection(actionGroup.title);\n *      formatter.addText(actionGroup.description);\n *      formatter.addArguments(actionGroup._groupActions);\n *      formatter.endSection();\n *\n **/\nHelpFormatter.prototype.addArguments = function (actions) {\n  var self = this;\n  actions.forEach(function (action) {\n    self.addArgument(action);\n  });\n};\n\n//\n// Help-formatting methods\n//\n\n/**\n * HelpFormatter#formatHelp -> string\n *\n * Format help\n *\n * ##### Example\n *\n *      formatter.addText(this.epilog);\n *      return formatter.formatHelp();\n *\n **/\nHelpFormatter.prototype.formatHelp = function () {\n  var help = this._rootSection.formatHelp(this);\n  if (help) {\n    help = help.replace(this._longBreakMatcher, c.EOL + c.EOL);\n    help = $$.trimChars(help, c.EOL) + c.EOL;\n  }\n  return help;\n};\n\nHelpFormatter.prototype._joinParts = function (partStrings) {\n  return partStrings.filter(function (part) {\n    return (part && part !== c.SUPPRESS);\n  }).join('');\n};\n\nHelpFormatter.prototype._formatUsage = function (usage, actions, groups, prefix) {\n  if (!prefix && typeof prefix !== 'string') {\n    prefix = 'usage: ';\n  }\n\n  actions = actions || [];\n  groups = groups || [];\n\n\n  // if usage is specified, use that\n  if (usage) {\n    usage = sprintf(usage, { prog: this._prog });\n\n    // if no optionals or positionals are available, usage is just prog\n  } else if (!usage && actions.length === 0) {\n    usage = this._prog;\n\n    // if optionals and positionals are available, calculate usage\n  } else if (!usage) {\n    var prog = this._prog;\n    var optionals = [];\n    var positionals = [];\n    var actionUsage;\n    var textWidth;\n\n    // split optionals from positionals\n    actions.forEach(function (action) {\n      if (action.isOptional()) {\n        optionals.push(action);\n      } else {\n        positionals.push(action);\n      }\n    });\n\n    // build full usage string\n    actionUsage = this._formatActionsUsage([].concat(optionals, positionals), groups);\n    usage = [ prog, actionUsage ].join(' ');\n\n    // wrap the usage parts if it's too long\n    textWidth = this._width - this._currentIndent;\n    if ((prefix.length + usage.length) > textWidth) {\n\n      // break usage into wrappable parts\n      var regexpPart = new RegExp('\\\\(.*?\\\\)+|\\\\[.*?\\\\]+|\\\\S+', 'g');\n      var optionalUsage = this._formatActionsUsage(optionals, groups);\n      var positionalUsage = this._formatActionsUsage(positionals, groups);\n\n\n      var optionalParts = optionalUsage.match(regexpPart);\n      var positionalParts = positionalUsage.match(regexpPart) || [];\n\n      if (optionalParts.join(' ') !== optionalUsage) {\n        throw new Error('assert \"optionalParts.join(\\' \\') === optionalUsage\"');\n      }\n      if (positionalParts.join(' ') !== positionalUsage) {\n        throw new Error('assert \"positionalParts.join(\\' \\') === positionalUsage\"');\n      }\n\n      // helper for wrapping lines\n      /*eslint-disable func-style*/ // node 0.10 compat\n      var _getLines = function (parts, indent, prefix) {\n        var lines = [];\n        var line = [];\n\n        var lineLength = prefix ? prefix.length - 1 : indent.length - 1;\n\n        parts.forEach(function (part) {\n          if (lineLength + 1 + part.length > textWidth) {\n            lines.push(indent + line.join(' '));\n            line = [];\n            lineLength = indent.length - 1;\n          }\n          line.push(part);\n          lineLength += part.length + 1;\n        });\n\n        if (line) {\n          lines.push(indent + line.join(' '));\n        }\n        if (prefix) {\n          lines[0] = lines[0].substr(indent.length);\n        }\n        return lines;\n      };\n\n      var lines, indent, parts;\n      // if prog is short, follow it with optionals or positionals\n      if (prefix.length + prog.length <= 0.75 * textWidth) {\n        indent = $$.repeat(' ', (prefix.length + prog.length + 1));\n        if (optionalParts) {\n          lines = [].concat(\n            _getLines([ prog ].concat(optionalParts), indent, prefix),\n            _getLines(positionalParts, indent)\n          );\n        } else if (positionalParts) {\n          lines = _getLines([ prog ].concat(positionalParts), indent, prefix);\n        } else {\n          lines = [ prog ];\n        }\n\n        // if prog is long, put it on its own line\n      } else {\n        indent = $$.repeat(' ', prefix.length);\n        parts = optionalParts + positionalParts;\n        lines = _getLines(parts, indent);\n        if (lines.length > 1) {\n          lines = [].concat(\n            _getLines(optionalParts, indent),\n            _getLines(positionalParts, indent)\n          );\n        }\n        lines = [ prog ] + lines;\n      }\n      // join lines into usage\n      usage = lines.join(c.EOL);\n    }\n  }\n\n  // prefix with 'usage:'\n  return prefix + usage + c.EOL + c.EOL;\n};\n\nHelpFormatter.prototype._formatActionsUsage = function (actions, groups) {\n  // find group indices and identify actions in groups\n  var groupActions = [];\n  var inserts = [];\n  var self = this;\n\n  groups.forEach(function (group) {\n    var end;\n    var i;\n\n    var start = actions.indexOf(group._groupActions[0]);\n    if (start >= 0) {\n      end = start + group._groupActions.length;\n\n      //if (actions.slice(start, end) === group._groupActions) {\n      if ($$.arrayEqual(actions.slice(start, end), group._groupActions)) {\n        group._groupActions.forEach(function (action) {\n          groupActions.push(action);\n        });\n\n        if (!group.required) {\n          if (inserts[start]) {\n            inserts[start] += ' [';\n          } else {\n            inserts[start] = '[';\n          }\n          inserts[end] = ']';\n        } else {\n          if (inserts[start]) {\n            inserts[start] += ' (';\n          } else {\n            inserts[start] = '(';\n          }\n          inserts[end] = ')';\n        }\n        for (i = start + 1; i < end; i += 1) {\n          inserts[i] = '|';\n        }\n      }\n    }\n  });\n\n  // collect all actions format strings\n  var parts = [];\n\n  actions.forEach(function (action, actionIndex) {\n    var part;\n    var optionString;\n    var argsDefault;\n    var argsString;\n\n    // suppressed arguments are marked with None\n    // remove | separators for suppressed arguments\n    if (action.help === c.SUPPRESS) {\n      parts.push(null);\n      if (inserts[actionIndex] === '|') {\n        inserts.splice(actionIndex, actionIndex);\n      } else if (inserts[actionIndex + 1] === '|') {\n        inserts.splice(actionIndex + 1, actionIndex + 1);\n      }\n\n      // produce all arg strings\n    } else if (!action.isOptional()) {\n      part = self._formatArgs(action, action.dest);\n\n      // if it's in a group, strip the outer []\n      if (groupActions.indexOf(action) >= 0) {\n        if (part[0] === '[' && part[part.length - 1] === ']') {\n          part = part.slice(1, -1);\n        }\n      }\n      // add the action string to the list\n      parts.push(part);\n\n    // produce the first way to invoke the option in brackets\n    } else {\n      optionString = action.optionStrings[0];\n\n      // if the Optional doesn't take a value, format is: -s or --long\n      if (action.nargs === 0) {\n        part = '' + optionString;\n\n      // if the Optional takes a value, format is: -s ARGS or --long ARGS\n      } else {\n        argsDefault = action.dest.toUpperCase();\n        argsString = self._formatArgs(action, argsDefault);\n        part = optionString + ' ' + argsString;\n      }\n      // make it look optional if it's not required or in a group\n      if (!action.required && groupActions.indexOf(action) < 0) {\n        part = '[' + part + ']';\n      }\n      // add the action string to the list\n      parts.push(part);\n    }\n  });\n\n  // insert things at the necessary indices\n  for (var i = inserts.length - 1; i >= 0; --i) {\n    if (inserts[i] !== null) {\n      parts.splice(i, 0, inserts[i]);\n    }\n  }\n\n  // join all the action items with spaces\n  var text = parts.filter(function (part) {\n    return !!part;\n  }).join(' ');\n\n  // clean up separators for mutually exclusive groups\n  text = text.replace(/([\\[(]) /g, '$1'); // remove spaces\n  text = text.replace(/ ([\\])])/g, '$1');\n  text = text.replace(/\\[ *\\]/g, ''); // remove empty groups\n  text = text.replace(/\\( *\\)/g, '');\n  text = text.replace(/\\(([^|]*)\\)/g, '$1'); // remove () from single action groups\n\n  text = text.trim();\n\n  // return the text\n  return text;\n};\n\nHelpFormatter.prototype._formatText = function (text) {\n  text = sprintf(text, { prog: this._prog });\n  var textWidth = this._width - this._currentIndent;\n  var indentIncriment = $$.repeat(' ', this._currentIndent);\n  return this._fillText(text, textWidth, indentIncriment) + c.EOL + c.EOL;\n};\n\nHelpFormatter.prototype._formatAction = function (action) {\n  var self = this;\n\n  var helpText;\n  var helpLines;\n  var parts;\n  var indentFirst;\n\n  // determine the required width and the entry label\n  var helpPosition = Math.min(this._actionMaxLength + 2, this._maxHelpPosition);\n  var helpWidth = this._width - helpPosition;\n  var actionWidth = helpPosition - this._currentIndent - 2;\n  var actionHeader = this._formatActionInvocation(action);\n\n  // no help; start on same line and add a final newline\n  if (!action.help) {\n    actionHeader = $$.repeat(' ', this._currentIndent) + actionHeader + c.EOL;\n\n  // short action name; start on the same line and pad two spaces\n  } else if (actionHeader.length <= actionWidth) {\n    actionHeader = $$.repeat(' ', this._currentIndent) +\n        actionHeader +\n        '  ' +\n        $$.repeat(' ', actionWidth - actionHeader.length);\n    indentFirst = 0;\n\n  // long action name; start on the next line\n  } else {\n    actionHeader = $$.repeat(' ', this._currentIndent) + actionHeader + c.EOL;\n    indentFirst = helpPosition;\n  }\n\n  // collect the pieces of the action help\n  parts = [ actionHeader ];\n\n  // if there was help for the action, add lines of help text\n  if (action.help) {\n    helpText = this._expandHelp(action);\n    helpLines = this._splitLines(helpText, helpWidth);\n    parts.push($$.repeat(' ', indentFirst) + helpLines[0] + c.EOL);\n    helpLines.slice(1).forEach(function (line) {\n      parts.push($$.repeat(' ', helpPosition) + line + c.EOL);\n    });\n\n  // or add a newline if the description doesn't end with one\n  } else if (actionHeader.charAt(actionHeader.length - 1) !== c.EOL) {\n    parts.push(c.EOL);\n  }\n  // if there are any sub-actions, add their help as well\n  if (action._getSubactions) {\n    this._indent();\n    action._getSubactions().forEach(function (subaction) {\n      parts.push(self._formatAction(subaction));\n    });\n    this._dedent();\n  }\n  // return a single string\n  return this._joinParts(parts);\n};\n\nHelpFormatter.prototype._formatActionInvocation = function (action) {\n  if (!action.isOptional()) {\n    var format_func = this._metavarFormatter(action, action.dest);\n    var metavars = format_func(1);\n    return metavars[0];\n  }\n\n  var parts = [];\n  var argsDefault;\n  var argsString;\n\n  // if the Optional doesn't take a value, format is: -s, --long\n  if (action.nargs === 0) {\n    parts = parts.concat(action.optionStrings);\n\n  // if the Optional takes a value, format is: -s ARGS, --long ARGS\n  } else {\n    argsDefault = action.dest.toUpperCase();\n    argsString = this._formatArgs(action, argsDefault);\n    action.optionStrings.forEach(function (optionString) {\n      parts.push(optionString + ' ' + argsString);\n    });\n  }\n  return parts.join(', ');\n};\n\nHelpFormatter.prototype._metavarFormatter = function (action, metavarDefault) {\n  var result;\n\n  if (action.metavar || action.metavar === '') {\n    result = action.metavar;\n  } else if (action.choices) {\n    var choices = action.choices;\n\n    if (typeof choices === 'string') {\n      choices = choices.split('').join(', ');\n    } else if (Array.isArray(choices)) {\n      choices = choices.join(',');\n    } else {\n      choices = Object.keys(choices).join(',');\n    }\n    result = '{' + choices + '}';\n  } else {\n    result = metavarDefault;\n  }\n\n  return function (size) {\n    if (Array.isArray(result)) {\n      return result;\n    }\n\n    var metavars = [];\n    for (var i = 0; i < size; i += 1) {\n      metavars.push(result);\n    }\n    return metavars;\n  };\n};\n\nHelpFormatter.prototype._formatArgs = function (action, metavarDefault) {\n  var result;\n  var metavars;\n\n  var buildMetavar = this._metavarFormatter(action, metavarDefault);\n\n  switch (action.nargs) {\n  /*eslint-disable no-undefined*/\n  case undefined:\n  case null:\n    metavars = buildMetavar(1);\n    result = '' + metavars[0];\n    break;\n  case c.OPTIONAL:\n    metavars = buildMetavar(1);\n    result = '[' + metavars[0] + ']';\n    break;\n  case c.ZERO_OR_MORE:\n    metavars = buildMetavar(2);\n    result = '[' + metavars[0] + ' [' + metavars[1] + ' ...]]';\n    break;\n  case c.ONE_OR_MORE:\n    metavars = buildMetavar(2);\n    result = '' + metavars[0] + ' [' + metavars[1] + ' ...]';\n    break;\n  case c.REMAINDER:\n    result = '...';\n    break;\n  case c.PARSER:\n    metavars = buildMetavar(1);\n    result = metavars[0] + ' ...';\n    break;\n  default:\n    metavars = buildMetavar(action.nargs);\n    result = metavars.join(' ');\n  }\n  return result;\n};\n\nHelpFormatter.prototype._expandHelp = function (action) {\n  var params = { prog: this._prog };\n\n  Object.keys(action).forEach(function (actionProperty) {\n    var actionValue = action[actionProperty];\n\n    if (actionValue !== c.SUPPRESS) {\n      params[actionProperty] = actionValue;\n    }\n  });\n\n  if (params.choices) {\n    if (typeof params.choices === 'string') {\n      params.choices = params.choices.split('').join(', ');\n    } else if (Array.isArray(params.choices)) {\n      params.choices = params.choices.join(', ');\n    } else {\n      params.choices = Object.keys(params.choices).join(', ');\n    }\n  }\n\n  return sprintf(this._getHelpString(action), params);\n};\n\nHelpFormatter.prototype._splitLines = function (text, width) {\n  var lines = [];\n  var delimiters = [ ' ', '.', ',', '!', '?' ];\n  var re = new RegExp('[' + delimiters.join('') + '][^' + delimiters.join('') + ']*$');\n\n  text = text.replace(/[\\n\\|\\t]/g, ' ');\n\n  text = text.trim();\n  text = text.replace(this._whitespaceMatcher, ' ');\n\n  // Wraps the single paragraph in text (a string) so every line\n  // is at most width characters long.\n  text.split(c.EOL).forEach(function (line) {\n    if (width >= line.length) {\n      lines.push(line);\n      return;\n    }\n\n    var wrapStart = 0;\n    var wrapEnd = width;\n    var delimiterIndex = 0;\n    while (wrapEnd <= line.length) {\n      if (wrapEnd !== line.length && delimiters.indexOf(line[wrapEnd] < -1)) {\n        delimiterIndex = (re.exec(line.substring(wrapStart, wrapEnd)) || {}).index;\n        wrapEnd = wrapStart + delimiterIndex + 1;\n      }\n      lines.push(line.substring(wrapStart, wrapEnd));\n      wrapStart = wrapEnd;\n      wrapEnd += width;\n    }\n    if (wrapStart < line.length) {\n      lines.push(line.substring(wrapStart, wrapEnd));\n    }\n  });\n\n  return lines;\n};\n\nHelpFormatter.prototype._fillText = function (text, width, indent) {\n  var lines = this._splitLines(text, width);\n  lines = lines.map(function (line) {\n    return indent + line;\n  });\n  return lines.join(c.EOL);\n};\n\nHelpFormatter.prototype._getHelpString = function (action) {\n  return action.help;\n};\n"]}