{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,GAAiB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACnC,MAAI,SAAS,EAAT,CAD+B;AAEnC,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,GAAJ,EAAS,GAAzB,EAA8B;AAAE,cAAU,GAAV,CAAF;GAA9B;AACA,SAAO,MAAP,CAHmC;CAApB;;AAMjB,QAAQ,UAAR,GAAqB,UAAU,CAAV,EAAa,CAAb,EAAgB;AACnC,MAAI,EAAE,MAAF,KAAa,EAAE,MAAF,EAAU;AAAE,WAAO,KAAP,CAAF;GAA3B;AACA,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,EAAE,MAAF,EAAU,GAA9B,EAAmC;AACjC,QAAI,EAAE,CAAF,MAAS,EAAE,CAAF,CAAT,EAAe;AAAE,aAAO,KAAP,CAAF;KAAnB;GADF;AAGA,SAAO,IAAP,CALmC;CAAhB;;AAQrB,QAAQ,SAAR,GAAoB,UAAU,GAAV,EAAe,KAAf,EAAsB;AACxC,MAAI,QAAQ,CAAR,CADoC;AAExC,MAAI,MAAM,IAAI,MAAJ,GAAa,CAAb,CAF8B;AAGxC,SAAO,MAAM,OAAN,CAAc,IAAI,MAAJ,CAAW,KAAX,CAAd,KAAoC,CAApC,EAAuC;AAAE,YAAF;GAA9C;AACA,SAAO,MAAM,OAAN,CAAc,IAAI,MAAJ,CAAW,GAAX,CAAd,KAAkC,CAAlC,EAAqC;AAAE,UAAF;GAA5C;AACA,SAAO,IAAI,KAAJ,CAAU,KAAV,EAAiB,MAAM,CAAN,CAAxB,CALwC;CAAtB;;AAQpB,QAAQ,UAAR,GAAqB,UAAU,GAAV,EAAe;AAClC,SAAO,IAAI,MAAJ,CAAW,CAAX,EAAc,WAAd,KAA8B,IAAI,KAAJ,CAAU,CAAV,CAA9B,CAD2B;CAAf;;AAIrB,QAAQ,UAAR,GAAqB,YAAY;AAC/B,MAAI,SAAS,EAAT,CAD2B;AAE/B,OAAK,IAAI,IAAI,CAAJ,EAAO,SAAS,EAAT,EAAa,IAAI,UAAU,MAAV,EAAkB,GAAnD,EAAwD;AACtD,QAAI,MAAM,UAAU,CAAV,CAAN,CADkD;AAEtD,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,IAAI,MAAJ,EAAY,GAAhC,EAAqC;AACnC,UAAI,CAAC,OAAO,IAAI,CAAJ,CAAP,CAAD,EAAiB;AACnB,eAAO,IAAI,CAAJ,CAAP,IAAiB,IAAjB,CADmB;AAEnB,eAAO,IAAP,CAAY,IAAI,CAAJ,CAAZ,EAFmB;OAArB;KADF;GAFF;AASA,SAAO,MAAP,CAX+B;CAAZ;;AAcrB,SAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,EAAuB;AACrB,SAAO,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAP,CADqB;CAAvB;;AAIA,QAAQ,GAAR,GAAc,GAAd;;AAEA,QAAQ,MAAR,GAAiB,UAAU,IAAV,EAAgB,GAAhB,EAAqB;AACpC,OAAK,IAAI,CAAJ,IAAS,GAAd,EAAmB;AACjB,QAAI,IAAI,GAAJ,EAAS,CAAT,CAAJ,EAAiB;AAAE,WAAK,CAAL,IAAU,IAAI,CAAJ,CAAV,CAAF;KAAjB;GADF;CADe;;AAMjB,QAAQ,OAAR,GAAkB,UAAU,GAAV,EAAe;AAC/B,SAAO,IAAI,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAP,CAD+B;CAAf","file":"utils-compiled.js","sourcesContent":["'use strict';\n\nexports.repeat = function (str, num) {\n  var result = '';\n  for (var i = 0; i < num; i++) { result += str; }\n  return result;\n};\n\nexports.arrayEqual = function (a, b) {\n  if (a.length !== b.length) { return false; }\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) { return false; }\n  }\n  return true;\n};\n\nexports.trimChars = function (str, chars) {\n  var start = 0;\n  var end = str.length - 1;\n  while (chars.indexOf(str.charAt(start)) >= 0) { start++; }\n  while (chars.indexOf(str.charAt(end)) >= 0) { end--; }\n  return str.slice(start, end + 1);\n};\n\nexports.capitalize = function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexports.arrayUnion = function () {\n  var result = [];\n  for (var i = 0, values = {}; i < arguments.length; i++) {\n    var arr = arguments[i];\n    for (var j = 0; j < arr.length; j++) {\n      if (!values[arr[j]]) {\n        values[arr[j]] = true;\n        result.push(arr[j]);\n      }\n    }\n  }\n  return result;\n};\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.has = has;\n\nexports.extend = function (dest, src) {\n  for (var i in src) {\n    if (has(src, i)) { dest[i] = src[i]; }\n  }\n};\n\nexports.trimEnd = function (str) {\n  return str.replace(/\\s+$/g, '');\n};\n"]}