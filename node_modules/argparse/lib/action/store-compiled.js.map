{"version":3,"sources":["store.js"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,IAAI,SAAS,QAAQ,WAAR,CAAT;;;AAGJ,IAAI,IAAI,QAAQ,UAAR,CAAJ;;;;;;;AAQJ,IAAI,cAAc,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAC/D,YAAU,WAAW,EAAX,CADqD;AAE/D,MAAI,KAAK,KAAL,IAAc,CAAd,EAAiB;AACnB,UAAM,IAAI,KAAJ,CAAU,iDACZ,+CADY,GAEZ,6CAFY,CAAhB,CADmB;GAArB;AAMA,MAAI,OAAO,KAAK,QAAL,KAAkB,WAAzB,IAAwC,KAAK,KAAL,KAAe,EAAE,QAAF,EAAY;AACrE,UAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN,CADqE;GAAvE;AAGA,SAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,EAX+D;CAA9B;AAanC,KAAK,QAAL,CAAc,WAAd,EAA2B,MAA3B;;;;;;;;;;;AAWA,YAAY,SAAZ,CAAsB,IAAtB,GAA6B,UAAU,MAAV,EAAkB,SAAlB,EAA6B,MAA7B,EAAqC;AAChE,YAAU,GAAV,CAAc,KAAK,IAAL,EAAW,MAAzB,EADgE;CAArC","file":"store-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionStore\n *\n * This action just stores the argumentâ€™s value. This is the default action.\n *\n * This class inherited from [[Action]]\n *\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n// Constants\nvar c = require('../const');\n\n\n/*:nodoc:*\n * new ActionStore(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionStore = module.exports = function ActionStore(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for store actions must be > 0; if you ' +\n        'have nothing to store, actions such as store ' +\n        'true or store const may be more appropriate');\n\n  }\n  if (typeof this.constant !== 'undefined' && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionStore, Action);\n\n/*:nodoc:*\n * ActionStore#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionStore.prototype.call = function (parser, namespace, values) {\n  namespace.set(this.dest, values);\n};\n"]}