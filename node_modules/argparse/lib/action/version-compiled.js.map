{"version":3,"sources":["version.js"],"names":[],"mappings":";;;;;;AAMA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,IAAI,SAAS,QAAQ,WAAR,CAAT;;;;;AAKJ,IAAI,IAAI,QAAQ,UAAR,CAAJ;;;;;;;AAOJ,IAAI,gBAAgB,OAAO,OAAP,GAAiB,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AACnE,YAAU,WAAW,EAAX,CADyD;AAEnE,UAAQ,YAAR,GAAwB,QAAQ,YAAR,GAAuB,QAAQ,YAAR,GAAuB,EAAE,QAAF,CAFH;AAGnE,UAAQ,IAAR,GAAgB,QAAQ,IAAR,IAAgB,EAAE,QAAF,CAHmC;AAInE,UAAQ,KAAR,GAAgB,CAAhB,CAJmE;AAKnE,OAAK,OAAL,GAAe,QAAQ,OAAR,CALoD;AAMnE,SAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,EANmE;CAAhC;AAQrC,KAAK,QAAL,CAAc,aAAd,EAA6B,MAA7B;;;;;;;;;;;AAWA,cAAc,SAAd,CAAwB,IAAxB,GAA+B,UAAU,MAAV,EAAkB;AAC/C,MAAI,UAAU,KAAK,OAAL,IAAgB,OAAO,OAAP,CADiB;AAE/C,MAAI,YAAY,OAAO,aAAP,EAAZ,CAF2C;AAG/C,YAAU,OAAV,CAAkB,OAAlB,EAH+C;AAI/C,SAAO,IAAP,CAAY,CAAZ,EAAe,UAAU,UAAV,EAAf,EAJ+C;CAAlB","file":"version-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n//\n// Constants\n//\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = (options.defaultValue ? options.defaultValue : c.SUPPRESS);\n  options.dest = (options.dest || c.SUPPRESS);\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\nutil.inherits(ActionVersion, Action);\n\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n  var formatter = parser._getFormatter();\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};\n"]}