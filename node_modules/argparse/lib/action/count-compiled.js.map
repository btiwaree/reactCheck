{"version":3,"sources":["count.js"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,IAAI,SAAS,QAAQ,WAAR,CAAT;;;;;;;AAOJ,IAAI,cAAc,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAC/D,YAAU,WAAW,EAAX,CADqD;AAE/D,UAAQ,KAAR,GAAgB,CAAhB,CAF+D;;AAI/D,SAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,EAJ+D;CAA9B;AAMnC,KAAK,QAAL,CAAc,WAAd,EAA2B,MAA3B;;;;;;;;;;;AAWA,YAAY,SAAZ,CAAsB,IAAtB,GAA6B,UAAU,MAAV,EAAkB,SAAlB,EAA6B;AACxD,YAAU,GAAV,CAAc,KAAK,IAAL,EAAW,CAAC,UAAU,KAAK,IAAL,CAAV,IAAwB,CAAxB,CAAD,GAA8B,CAA9B,CAAzB,CADwD;CAA7B","file":"count-compiled.js","sourcesContent":["/*:nodoc:*\n * class ActionCount\n *\n * This counts the number of times a keyword argument occurs.\n * For example, this is useful for increasing verbosity levels\n *\n * This class inherided from [[Action]]\n *\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n/*:nodoc:*\n * new ActionCount(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionCount = module.exports = function ActionCount(options) {\n  options = options || {};\n  options.nargs = 0;\n\n  Action.call(this, options);\n};\nutil.inherits(ActionCount, Action);\n\n/*:nodoc:*\n * ActionCount#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionCount.prototype.call = function (parser, namespace) {\n  namespace.set(this.dest, (namespace[this.dest] || 0) + 1);\n};\n"]}