{"version":3,"sources":["action_container.js"],"names":[],"mappings":"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","file":"action_container-compiled.js","sourcesContent":["/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n\n'use strict';\n\nvar format = require('util').format;\n\n// Constants\nvar c = require('./const');\n\nvar $$ = require('./utils');\n\n//Actions\nvar ActionHelp = require('./action/help');\nvar ActionAppend = require('./action/append');\nvar ActionAppendConstant = require('./action/append/constant');\nvar ActionCount = require('./action/count');\nvar ActionStore = require('./action/store');\nvar ActionStoreConstant = require('./action/store/constant');\nvar ActionStoreTrue = require('./action/store/true');\nvar ActionStoreFalse = require('./action/store/false');\nvar ActionVersion = require('./action/version');\nvar ActionSubparsers = require('./action/subparsers');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler;\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // raise an exception if the conflict handler is invalid\n  this._getHandler();\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n};\n\n// Groups must be required, then ActionContainer already defined\nvar ArgumentGroup = require('./argument/group');\nvar MutuallyExclusiveGroup = require('./argument/exclusive');\n\n//\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\n\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (arguments.length < 3) {\n    defaultValue = null;\n  }\n  return this._registries[registryName][value] || defaultValue;\n};\n\n//\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n  for (var property in options) {\n    if ($$.has(options, property)) {\n      this._defaults[property] = options[property];\n    }\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if ($$.has(options, action.dest)) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\nActionContainer.prototype.getDefault = function (dest) {\n  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;\n\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && $$.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n\n  return result;\n};\n//\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (String|Array): argument key, or array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })\n * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })\n * - addArgument('--baz', { action: 'store', nargs: 1, ... })\n **/\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (typeof args === 'string') {\n    args = [ args ];\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError('addArgument first argument should be a string or an array');\n  }\n  if (typeof options !== 'object' || Array.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (typeof options.defaultValue === 'undefined') {\n    var dest = options.dest;\n    if ($$.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (typeof this.argumentDefault !== 'undefined') {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (typeof ActionClass !== 'function') {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n\n  return this._addAction(action);\n};\n\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n};\n\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n  this._mutuallyExclusiveGroups.push(group);\n  return group;\n};\n\nActionContainer.prototype._addAction = function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals.some(Boolean)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n};\n\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\n\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this);\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  var mutexGroup;\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n        required: group.required\n      });\n    // map the actions to their new mutex group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this);  // forEach takes a 'this' argument\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n    if (groupMap[key]) {\n      groupMap[key]._addAction(action);\n    } else {\n      this._addAction(action);\n    }\n  });\n};\n\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (Array.isArray(dest)) {\n    dest = dest[0];\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\n\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',\n        optionString,\n        prefixChars\n      ));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];\n    dest = $$.trimChars(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(\n        format('dest= is required for options like \"%s\"', optionStrings.join(', '))\n      );\n    }\n    dest = dest.replace(/-/g, '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n\n  return options;\n};\n\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n\n  var action = (options.action || defaultValue);\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n};\n\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);\n  var func = this[handlerFuncName];\n  if (typeof func === 'undefined') {\n    var msg = 'invalid conflict resolution value: ' + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\n\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([ optionString, conflOptional ]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\n\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = conflOptionals.map(function (pair) { return pair[0]; });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(\n    action,\n    format('Conflicting option string(s): %s', conflicts)\n  );\n};\n\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1];\n    // remove the conflicting option string\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n    delete self._optionStringActions[optionString];\n    // if the option now has no option string, remove it from the\n    // container holding it\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};\n"]}