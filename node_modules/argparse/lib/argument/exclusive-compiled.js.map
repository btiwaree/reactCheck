{"version":3,"sources":["exclusive.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,IAAI,gBAAgB,QAAQ,SAAR,CAAhB;;;;;;;;;;AAUJ,IAAI,yBAAyB,OAAO,OAAP,GAAiB,SAAS,sBAAT,CAAgC,SAAhC,EAA2C,OAA3C,EAAoD;AAChG,MAAI,QAAJ,CADgG;AAEhG,YAAU,WAAW,EAAX,CAFsF;AAGhG,aAAW,QAAQ,QAAR,IAAoB,KAApB,CAHqF;AAIhG,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,SAAzB,EAJgG;AAKhG,OAAK,QAAL,GAAgB,QAAhB,CALgG;CAApD;AAQ9C,KAAK,QAAL,CAAc,sBAAd,EAAsC,aAAtC;;AAGA,uBAAuB,SAAvB,CAAiC,UAAjC,GAA8C,UAAU,MAAV,EAAkB;AAC9D,MAAI,GAAJ,CAD8D;AAE9D,MAAI,OAAO,QAAP,EAAiB;AACnB,UAAM,+CAAN,CADmB;AAEnB,UAAM,IAAI,KAAJ,CAAU,GAAV,CAAN,CAFmB;GAArB;AAIA,WAAS,KAAK,UAAL,CAAgB,UAAhB,CAA2B,MAA3B,CAAT,CAN8D;AAO9D,OAAK,aAAL,CAAmB,IAAnB,CAAwB,MAAxB,EAP8D;AAQ9D,SAAO,MAAP,CAR8D;CAAlB;;AAY9C,uBAAuB,SAAvB,CAAiC,aAAjC,GAAiD,UAAU,MAAV,EAAkB;AACjE,OAAK,UAAL,CAAgB,aAAhB,CAA8B,MAA9B,EADiE;AAEjE,OAAK,aAAL,CAAmB,MAAnB,CAA0B,MAA1B,EAFiE;CAAlB","file":"exclusive-compiled.js","sourcesContent":["/** internal\n * class MutuallyExclusiveGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ArgumentGroup = require('./group');\n\n/**\n * new MutuallyExclusiveGroup(container, options)\n * - container (object): main container\n * - options (object): options.required -> true/false\n *\n * `required` could be an argument itself, but making it a property of\n * the options argument is more consistent with the JS adaptation of the Python)\n **/\nvar MutuallyExclusiveGroup = module.exports = function MutuallyExclusiveGroup(container, options) {\n  var required;\n  options = options || {};\n  required = options.required || false;\n  ArgumentGroup.call(this, container);\n  this.required = required;\n\n};\nutil.inherits(MutuallyExclusiveGroup, ArgumentGroup);\n\n\nMutuallyExclusiveGroup.prototype._addAction = function (action) {\n  var msg;\n  if (action.required) {\n    msg = 'mutually exclusive arguments must be optional';\n    throw new Error(msg);\n  }\n  action = this._container._addAction(action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nMutuallyExclusiveGroup.prototype._removeAction = function (action) {\n  this._container._removeAction(action);\n  this._groupActions.remove(action);\n};\n\n"]}