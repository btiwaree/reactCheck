{"version":3,"sources":["mountable.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,UAAU,QAAQ,UAAR,CAAV;;;;;;;;;;;;;;;AAeJ,SAAS,QAAT,CAAkB,KAAlB,EAAyB,QAAzB,EAAmC,aAAnC,EAAkD;AAChD,MAAI,OAAO,MAAM,QAAN,CAAP,KAA2B,QAA3B,IAAuC,OAAO,MAAM,QAAN,EAAgB,MAAhB,KAA2B,UAAlC,IAAgD,MAAM,QAAN,EAAgB,QAAhB,KAA6B,CAA7B,EAAgC;AACzH,WAAO,IAAI,KAAJ,CAAU,QAAQ,MAAR,CAAe,KAAf,EAAsB,QAAtB,EAAgC,aAAhC,EAA+C,kEAA/C,CAAV,CAAP,CADyH;GAA3H;CADF;;AAMA,QAAQ,SAAR,IAAqB,QAAQ,0BAAR,CAAmC,QAAnC,CAArB;AACA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"mountable-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _common = require('./common');\n\n/**\n * Checks whether a prop provides a DOM element\n *\n * The element can be provided in two forms:\n * - Directly passed\n * - Or passed an object that has a `render` method\n *\n * @param props\n * @param propName\n * @param componentName\n * @returns {Error|undefined}\n */\n\nfunction validate(props, propName, componentName) {\n  if (typeof props[propName] !== 'object' || typeof props[propName].render !== 'function' && props[propName].nodeType !== 1) {\n    return new Error(_common.errMsg(props, propName, componentName, ', expected a DOM element or an object that has a `render` method'));\n  }\n}\n\nexports['default'] = _common.createChainableTypeChecker(validate);\nmodule.exports = exports['default'];"]}