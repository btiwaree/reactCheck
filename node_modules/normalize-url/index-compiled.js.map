{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\nvar url = require('url');\nvar punycode = require('punycode');\nvar queryString = require('query-string');\nvar prependHttp = require('prepend-http');\nvar sortKeys = require('sort-keys');\nvar objectAssign = require('object-assign');\n\nvar DEFAULT_PORTS = {\n\t'http:': 80,\n\t'https:': 443,\n\t'ftp:': 21\n};\n\n// protocols that always contain a `//`` bit\nvar slashedProtocol = {\n\t'http': true,\n\t'https': true,\n\t'ftp': true,\n\t'gopher': true,\n\t'file': true,\n\t'http:': true,\n\t'https:': true,\n\t'ftp:': true,\n\t'gopher:': true,\n\t'file:': true\n};\n\nmodule.exports = function (str, opts) {\n\topts = objectAssign({\n\t\tnormalizeProtocol: true,\n\t\tstripFragment: true,\n\t\tstripWWW: true\n\t}, opts);\n\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tvar hasRelativeProtocol = str.indexOf('//') === 0;\n\n\t// prepend protocol\n\tstr = prependHttp(str.trim()).replace(/^\\/\\//, 'http://');\n\n\tvar urlObj = url.parse(str);\n\n\t// prevent these from being used by `url.format`\n\tdelete urlObj.host;\n\tdelete urlObj.query;\n\n\t// remove fragment\n\tif (opts.stripFragment) {\n\t\tdelete urlObj.hash;\n\t}\n\n\t// remove default port\n\tvar port = DEFAULT_PORTS[urlObj.protocol];\n\tif (Number(urlObj.port) === port) {\n\t\tdelete urlObj.port;\n\t}\n\n\t// remove duplicate slashes\n\tif (urlObj.pathname) {\n\t\turlObj.pathname = urlObj.pathname.replace(/\\/{2,}/, '/');\n\t}\n\n\t// resolve relative paths, but only for slashed protocols\n\tif (slashedProtocol[urlObj.protocol]) {\n\t\tvar domain = urlObj.protocol + '//' + urlObj.hostname;\n\t\tvar relative = url.resolve(domain, urlObj.pathname);\n\t\turlObj.pathname = relative.replace(domain, '');\n\t}\n\n\tif (urlObj.hostname) {\n\t\t// IDN to Unicode\n\t\turlObj.hostname = punycode.toUnicode(urlObj.hostname).toLowerCase();\n\n\t\t// remove `www.`\n\t\tif (opts.stripWWW) {\n\t\t\turlObj.hostname = urlObj.hostname.replace(/^www\\./, '');\n\t\t}\n\t}\n\n\t// remove URL with empty query string\n\tif (urlObj.search === '?') {\n\t\tdelete urlObj.search;\n\t}\n\n\t// sort query parameters\n\turlObj.search = queryString.stringify(sortKeys(queryString.parse(urlObj.search)));\n\n\t// decode query parameters\n\turlObj.search = decodeURIComponent(urlObj.search);\n\n\t// take advantage of many of the Node `url` normalizations\n\tstr = url.format(urlObj);\n\n\t// remove ending `/`\n\tstr = str.replace(/\\/$/, '');\n\n\t// restore relative protocol, if applicable\n\tif (hasRelativeProtocol && !opts.normalizeProtocol) {\n\t\tstr = str.replace(/^http:\\/\\//, '//');\n\t}\n\n\treturn str;\n};\n"]}