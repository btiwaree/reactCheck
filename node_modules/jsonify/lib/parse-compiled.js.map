{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n"]}