{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,SAAS,UAAT,CAAoB,GAApB,EAAyB;;AAEvB,MAAI,SAAS,IAAI,OAAO,SAAP,CAAiB,EAAC,YAAY,IAAZ,EAAtB,CAAT,CAFmB;;AAIvB,WAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,QAAI,UAAU,KAAK,OAAL,CAAa,IAAb,CAAV,CADmB;AAEvB,WAAO;AACL,eAAS,KAAK,OAAL,CAAa,IAAb,CAAT;AACA,gBAAU,KAAK,QAAL,CAAc,IAAd,EAAoB,OAApB,CAAV;AACA,eAAS,OAAT;KAHF,CAFuB;GAAzB;;AASA,SAAO,UAAP,GAAoB,UAAS,IAAT,EAAe,MAAf,EAAuB,QAAvB,EAAiC;;AAEnD,QAAI,aAAa,UAAU,KAAK,QAAL,CAAvB,CAF+C;AAGnD,QAAI,IAAJ,CAHmD;;AAKnD,QAAI,OAAO,OAAO,GAAP,CALwC;;AAOnD,QAAI,SAAS,QAAT,IAAqB,QAAQ,EAAR,EAAY;;AAEnC,aAAO,GAAP,CAFmC;KAArC,MAIO,IAAI,SAAS,UAAT,EAAqB;;AAE9B,UAAI,UAAJ,EAF8B;AAG9B,aAAO,KAAK,IAAL,CAAU,WAAW,OAAX,EAAoB,WAAW,QAAX,GAAsB,WAAW,OAAX,CAA3D,CAH8B;KAAzB,MAKA,IAAI,SAAS,QAAT,IAAqB,QAAQ,SAAR,IAAqB,QAAQ,IAAR,EAAc;;AAEjE,UAAI,UAAU,aAAa,GAAb,GAAmB,IAAI,OAAJ,GAAc,WAAW,OAAX;UAC7C,SAAS,IAAI,MAAJ,IAAc,EAAd;UACT,SAAS,IAAI,MAAJ,IAAc,EAAd;UACT,WAAW,cAAc,GAAd,GAAoB,IAAI,QAAJ,GAAe,WAAW,QAAX;UAC9C,UAAU,aAAa,GAAb,GAAmB,IAAI,OAAJ,GAAc,WAAW,OAAX,CANoB;;AAQjE,aAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,SAAS,QAAT,GAAoB,MAApB,GAA6B,OAA7B,CAA1B,CARiE;KAA5D,MAUA;;AAEL,eAAS,IAAI,KAAJ,CAAU,8CAAV,CAAT,EAAoE,SAApE,EAFK;AAGL,aAHK;KAVA;;AAiBP,SAAK,IAAL,GAAY,KAAK,IAAL,CAAU,KAAK,IAAL,EAAW,IAArB,CAAZ;;;AAjCmD,QAoC/C,KAAK,SAAL,EAAgB;AAClB,WAAK,SAAL,CAAe,IAAf,GAAsB,KAAK,QAAL,CADJ;KAApB;;AAIA,aAAS,IAAT,EAAe,IAAf,EAxCmD;GAAjC,CAbG;;AAwDvB,SAAO,MAAP,CAxDuB;CAAzB;;AA2DA,OAAO,OAAP,GAAiB,UAAjB","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar Stream = require('stream');\nvar Path = require('path');\n\nfunction gulpRename(obj) {\n\n  var stream = new Stream.Transform({objectMode: true});\n\n  function parsePath(path) {\n    var extname = Path.extname(path);\n    return {\n      dirname: Path.dirname(path),\n      basename: Path.basename(path, extname),\n      extname: extname\n    };\n  }\n\n  stream._transform = function(file, unused, callback) {\n\n    var parsedPath = parsePath(file.relative);\n    var path;\n\n    var type = typeof obj;\n\n    if (type === 'string' && obj !== '') {\n\n      path = obj;\n\n    } else if (type === 'function') {\n\n      obj(parsedPath);\n      path = Path.join(parsedPath.dirname, parsedPath.basename + parsedPath.extname);\n\n    } else if (type === 'object' && obj !== undefined && obj !== null) {\n\n      var dirname = 'dirname' in obj ? obj.dirname : parsedPath.dirname,\n        prefix = obj.prefix || '',\n        suffix = obj.suffix || '',\n        basename = 'basename' in obj ? obj.basename : parsedPath.basename,\n        extname = 'extname' in obj ? obj.extname : parsedPath.extname;\n\n      path = Path.join(dirname, prefix + basename + suffix + extname);\n\n    } else {\n\n      callback(new Error('Unsupported renaming parameter type supplied'), undefined);\n      return;\n\n    }\n\n    file.path = Path.join(file.base, path);\n\n    // Rename sourcemap if present\n    if (file.sourceMap) {\n      file.sourceMap.file = file.relative;\n    }\n\n    callback(null, file);\n  };\n\n  return stream;\n}\n\nmodule.exports = gulpRename;\n"]}