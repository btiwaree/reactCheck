{"version":3,"sources":["sax.js"],"names":[],"mappings":"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","file":"sax-compiled.js","sourcesContent":[";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n"]}