{"version":3,"sources":["moveGroupAttrsToElems.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,IAAR,GAAe,SAAf;;AAEA,QAAQ,MAAR,GAAiB,IAAjB;;AAEA,QAAQ,WAAR,GAAsB,qDAAtB;;AAEA,IAAI,cAAc,QAAQ,mBAAR,CAAd;IACA,YAAY,YAAY,SAAZ,CAAsB,MAAtB,CAA6B,CAAC,GAAD,EAAM,MAAN,CAA7B,CAAZ;IACA,kBAAkB,YAAY,eAAZ;;;;;;;;;;;;;;;;;;;;;AAqBtB,QAAQ,EAAR,GAAa,UAAS,IAAT,EAAe;;;AAGxB,QACI,KAAK,MAAL,CAAY,GAAZ,KACA,KAAK,OAAL,CAAa,WAAb,CADA,IAEA,CAAC,KAAK,OAAL,EAAD,IACA,CAAC,KAAK,QAAL,CAAc,UAAS,IAAT,EAAe;AAC1B,eAAO,CAAC,gBAAgB,OAAhB,CAAwB,KAAK,IAAL,CAAzB,IAAuC,CAAC,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAAD,CADpB;KAAf,CAAf,IAGA,KAAK,OAAL,CAAa,KAAb,CAAmB,UAAS,KAAT,EAAgB;AAC/B,eAAO,MAAM,MAAN,CAAa,SAAb,CAAP,CAD+B;KAAhB,CANnB,EASF;AACE,aAAK,OAAL,CAAa,OAAb,CAAqB,UAAS,KAAT,EAAgB;AACjC,gBAAI,MAAM,OAAN,CAAc,WAAd,CAAJ,EAAgC;AAC5B,sBAAM,IAAN,CAAW,WAAX,EAAwB,KAAxB,GAAgC,KAAK,IAAL,CAAU,WAAV,EAAuB,KAAvB,GAA+B,GAA/B,GAAqC,MAAM,IAAN,CAAW,WAAX,EAAwB,KAAxB,CADzC;aAAhC,MAEO;AACH,sBAAM,OAAN,CAAc,KAAK,IAAL,CAAU,WAAV,CAAd,EADG;aAFP;SADiB,CAArB,CADF;;AASE,aAAK,UAAL,CAAgB,WAAhB,EATF;KAVF;CAHS","file":"moveGroupAttrsToElems-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'moves some group attributes to the content elements';\n\nvar collections = require('./_collections.js'),\n    pathElems = collections.pathElems.concat(['g', 'text']),\n    referencesProps = collections.referencesProps;\n\n/**\n * Move group attrs to the content elements.\n *\n * @example\n * <g transform=\"scale(2)\">\n *     <path transform=\"rotate(45)\" d=\"M0,0 L10,20\"/>\n *     <path transform=\"translate(10, 20)\" d=\"M0,10 L20,30\"/>\n * </g>\n *                          â¬‡\n * <g>\n *     <path transform=\"scale(2) rotate(45)\" d=\"M0,0 L10,20\"/>\n *     <path transform=\"scale(2) translate(10, 20)\" d=\"M0,10 L20,30\"/>\n * </g>\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item) {\n\n    // move group transform attr to content's pathElems\n    if (\n        item.isElem('g') &&\n        item.hasAttr('transform') &&\n        !item.isEmpty() &&\n        !item.someAttr(function(attr) {\n            return ~referencesProps.indexOf(attr.name) && ~attr.value.indexOf('url(');\n        }) &&\n        item.content.every(function(inner) {\n            return inner.isElem(pathElems);\n        })\n    ) {\n        item.content.forEach(function(inner) {\n            if (inner.hasAttr('transform')) {\n                inner.attr('transform').value = item.attr('transform').value + ' ' + inner.attr('transform').value;\n            } else {\n                inner.addAttr(item.attr('transform'));\n            }\n        });\n\n        item.removeAttr('transform');\n    }\n\n};\n"]}