{"version":3,"sources":["addClassesToSVGElement.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,IAAR,GAAe,MAAf;;AAEA,QAAQ,MAAR,GAAiB,KAAjB;;AAEA,QAAQ,WAAR,GAAsB,2CAAtB;;AAEA,IAAI,SAAS;;;;;;;;;;wCAAT;;;;;;;;;;;;;;;AAyBJ,QAAQ,EAAR,GAAa,UAAS,IAAT,EAAe,MAAf,EAAuB;AAChC,QAAI,CAAC,MAAD,IAAW,EAAE,MAAM,OAAN,CAAc,OAAO,UAAP,CAAd,IAAoC,OAAO,UAAP,CAAkB,IAAlB,CAAuB,MAAvB,CAApC,IAAsE,OAAO,SAAP,CAAxE,EAA2F;AACtG,gBAAQ,KAAR,CAAc,MAAd,EADsG;AAEtG,eAAO,IAAP,CAFsG;KAA1G;;AAKA,QAAI,aAAa,OAAO,UAAP,IAAqB,CAAE,OAAO,SAAP,CAAvB;QACb,MAAM,KAAK,OAAL,CAAa,CAAb,CAAN,CAP4B;;AAShC,QAAI,IAAI,MAAJ,CAAW,KAAX,CAAJ,EAAuB;AACnB,YAAI,IAAI,OAAJ,CAAY,OAAZ,CAAJ,EAA0B;AACtB,gBAAI,IAAJ,CAAS,OAAT,EAAkB,KAAlB,GACI,IAAI,IAAJ,CAAS,OAAT,EAAkB,KAAlB,CACK,KADL,CACW,GADX,EAEK,MAFL,CAEY,UAFZ,EAGK,IAHL,CAGU,GAHV,CADJ,CADsB;SAA1B,MAMO;AACH,gBAAI,OAAJ,CAAY;AACR,sBAAM,OAAN;AACA,uBAAO,WAAW,IAAX,CAAgB,GAAhB,CAAP;AACA,wBAAQ,EAAR;AACA,uBAAO,OAAP;aAJJ,EADG;SANP;KADJ;;AAiBA,WAAO,IAAP,CA1BgC;CAAvB","file":"addClassesToSVGElement-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'full';\n\nexports.active = false;\n\nexports.description = 'adds classnames to an outer <svg> element';\n\nvar ENOCLS = 'Error in plugin \"addClassesToSVGElement\": absent parameters.\\n\\\nIt should have a list of classes in \"classNames\" or one \"className\".\\n\\\nConfig example:\\n\\n\\\n\\\nplugins:\\n\\\n- addClassesToSVGElement:\\n\\\n    className: \"mySvg\"\\n\\n\\\n\\\nplugins:\\n\\\n- addClassesToSVGElement:\\n\\\n    classNames: [\"mySvg\", \"size-big\"]\\n';\n\n/**\n * Add classnames to an outer <svg> element. Example config:\n *\n * plugins:\n * - addClassesToSVGElement:\n *     className: 'mySvg'\n *\n * plugins:\n * - addClassesToSVGElement:\n *     classNames: ['mySvg', 'size-big']\n *\n * @author April Arcus\n */\nexports.fn = function(data, params) {\n    if (!params || !(Array.isArray(params.classNames) && params.classNames.some(String) || params.className)) {\n        console.error(ENOCLS);\n        return data;\n    }\n\n    var classNames = params.classNames || [ params.className ],\n        svg = data.content[0];\n\n    if (svg.isElem('svg')) {\n        if (svg.hasAttr('class')) {\n            svg.attr('class').value =\n                svg.attr('class').value\n                    .split(' ')\n                    .concat(classNames)\n                    .join(' ');\n        } else {\n            svg.addAttr({\n                name: 'class',\n                value: classNames.join(' '),\n                prefix: '',\n                local: 'class'\n            });\n        }\n    }\n\n    return data;\n\n};\n"]}