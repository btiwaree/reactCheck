{"version":3,"sources":["convertShapeToPath.js"],"names":[],"mappings":"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","file":"convertShapeToPath-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'converts basic shapes to more compact path form';\n\nvar none = { value: 0 },\n    regNumber = /[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?/g;\n\n/**\n * Converts basic shape to more compact path.\n * It also allows further optimizations like\n * combining paths with similar attributes.\n *\n * @see http://www.w3.org/TR/SVG/shapes.html\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Lev Solntsev\n */\nexports.fn = function(item) {\n\n    if (\n        item.isElem('rect') &&\n        item.hasAttr('width') &&\n        item.hasAttr('height') &&\n        !item.hasAttr('rx') &&\n        !item.hasAttr('ry')\n    ) {\n\n        var x = +(item.attr('x') || none).value,\n            y = +(item.attr('y') || none).value,\n            width  = +item.attr('width').value,\n            height = +item.attr('height').value;\n\n            // Values like '100%' compute to NaN, thus running after\n            // cleanupNumericValues when 'px' units has already been removed.\n            // TODO: Calculate sizes from % and non-px units if possible.\n        if (isNaN(x - y + width - height)) return;\n\n        var pathData =\n            'M' + x + ' ' + y +\n            'H' + (x + width) +\n            'V' + (y + height) +\n            'H' + x +\n            'z';\n\n        item.addAttr({\n                name: 'd',\n                value: pathData,\n                prefix: '',\n                local: 'd'\n            });\n\n        item.renameElem('path')\n            .removeAttr(['x', 'y', 'width', 'height']);\n\n    } else if (item.isElem('line')) {\n\n        var x1 = +(item.attr('x1') || none).value,\n            y1 = +(item.attr('y1') || none).value,\n            x2 = +(item.attr('x2') || none).value,\n            y2 = +(item.attr('y2') || none).value;\n        if (isNaN(x1 - y1 + x2 - y2)) return;\n\n        item.addAttr({\n                name: 'd',\n                value: 'M' + x1 + ' ' + y1 + 'L' + x2 + ' ' + y2,\n                prefix: '',\n                local: 'd'\n            });\n\n        item.renameElem('path')\n            .removeAttr(['x1', 'y1', 'x2', 'y2']);\n\n    } else if ((\n            item.isElem('polyline') ||\n            item.isElem('polygon')\n        ) &&\n        item.hasAttr('points')\n    ) {\n\n        var coords = (item.attr('points').value.match(regNumber) || []).map(Number);\n        if (coords.length < 4) return false;\n\n        item.addAttr({\n                name: 'd',\n                value: 'M' + coords.slice(0,2).join(' ') +\n                       'L' + coords.slice(2).join(' ') +\n                       (item.isElem('polygon') ? 'z' : ''),\n                prefix: '',\n                local: 'd'\n            });\n\n        item.renameElem('path')\n            .removeAttr('points');\n    }\n\n};\n"]}