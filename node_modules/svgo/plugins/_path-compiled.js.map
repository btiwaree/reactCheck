{"version":3,"sources":["_path.js"],"names":[],"mappings":"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","file":"_path-compiled.js","sourcesContent":["/* global a2c */\n'use strict';\n\nvar regPathInstructions = /([MmLlHhVvCcSsQqTtAaZz])\\s*/,\n    regPathData = /[-+]?(?:\\d*\\.\\d+|\\d+\\.?)([eE][-+]?\\d+)?/g,\n    regNumericValues = /[-+]?(\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?/,\n    transform2js = require('./_transforms').transform2js,\n    transformsMultiply = require('./_transforms').transformsMultiply,\n    transformArc = require('./_transforms').transformArc,\n    collections = require('./_collections.js'),\n    referencesProps = collections.referencesProps,\n    defaultStrokeWidth = collections.attrsGroupsDefaults.presentation['stroke-width'],\n    cleanupOutData = require('../lib/svgo/tools').cleanupOutData,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    prevCtrlPoint;\n\n/**\n * Convert path string to JS representation.\n *\n * @param {String} pathString input string\n * @param {Object} params plugin params\n * @return {Array} output array\n */\nexports.path2js = function(path) {\n    if (path.pathJS) return path.pathJS;\n\n    var paramsLength = { // Number of parameters of every path command\n            H: 1, V: 1, M: 2, L: 2, T: 2, Q: 4, S: 4, C: 6, A: 7,\n            h: 1, v: 1, m: 2, l: 2, t: 2, q: 4, s: 4, c: 6, a: 7\n        },\n        pathData = [],   // JS representation of the path data\n        instruction, // current instruction context\n        startMoveto = false;\n\n    // splitting path string into array like ['M', '10 50', 'L', '20 30']\n    path.attr('d').value.split(regPathInstructions).forEach(function(data) {\n        if (!data) return;\n        if (!startMoveto) {\n            if (data == 'M' || data == 'm') {\n                startMoveto = true;\n            } else return;\n        }\n\n        // instruction item\n        if (regPathInstructions.test(data)) {\n            instruction = data;\n\n            // z - instruction w/o data\n            if (instruction == 'Z' || instruction == 'z') {\n                pathData.push({\n                    instruction: 'z'\n                });\n            }\n        // data item\n        } else {\n            data = data.match(regPathData);\n            if (!data) return;\n\n            data = data.map(Number);\n\n            // Subsequent moveto pairs of coordinates are threated as implicit lineto commands\n            // http://www.w3.org/TR/SVG/paths.html#PathDataMovetoCommands\n            if (instruction == 'M' || instruction == 'm') {\n                pathData.push({\n                    instruction: pathData.length == 0 ? 'M' : instruction,\n                    data: data.splice(0, 2)\n                });\n                instruction = instruction == 'M' ? 'L' : 'l';\n            }\n\n            for (var pair = paramsLength[instruction]; data.length;) {\n                pathData.push({\n                    instruction: instruction,\n                    data: data.splice(0, pair)\n                });\n            }\n        }\n    });\n\n    // First moveto is actually absolute. Subsequent coordinates were separated above.\n    if (pathData.length && pathData[0].instruction == 'm') {\n        pathData[0].instruction = 'M';\n    }\n    path.pathJS = pathData;\n\n    return pathData;\n};\n\n/**\n * Convert relative Path data to absolute.\n *\n * @param {Array} data input data\n * @return {Array} output data\n */\nvar relative2absolute = exports.relative2absolute = function(data) {\n    var currentPoint = [0, 0],\n        subpathPoint = [0, 0],\n        i;\n\n    data = data.map(function(item) {\n\n        var instruction = item.instruction,\n            itemData = item.data && item.data.slice();\n\n        if (instruction == 'M') {\n\n            set(currentPoint, itemData);\n            set(subpathPoint, itemData);\n\n        } else if ('mlcsqt'.indexOf(instruction) > -1) {\n\n            for (i = 0; i < itemData.length; i++) {\n                itemData[i] += currentPoint[i % 2];\n            }\n            set(currentPoint, itemData);\n\n            if (instruction == 'm') {\n                set(subpathPoint, itemData);\n            }\n\n        } else if (instruction == 'a') {\n\n            itemData[5] += currentPoint[0];\n            itemData[6] += currentPoint[1];\n            set(currentPoint, itemData);\n\n        } else if (instruction == 'h') {\n\n            itemData[0] += currentPoint[0];\n            currentPoint[0] = itemData[0];\n\n        } else if (instruction == 'v') {\n\n            itemData[0] += currentPoint[1];\n            currentPoint[1] = itemData[0];\n\n        } else if ('MZLCSQTA'.indexOf(instruction) > -1) {\n\n            set(currentPoint, itemData);\n\n        } else if (instruction == 'H') {\n\n            currentPoint[0] = itemData[0];\n\n        } else if (instruction == 'V') {\n\n            currentPoint[1] = itemData[0];\n\n        } else if (instruction == 'z') {\n\n            set(currentPoint, subpathPoint);\n\n        }\n\n        return instruction == 'z' ?\n            { instruction: 'z' } :\n            {\n                instruction: instruction.toUpperCase(),\n                data: itemData\n            };\n\n    });\n\n    return data;\n};\n\n/**\n * Apply transformation(s) to the Path data.\n *\n * @param {Object} elem current element\n * @param {Array} path input path data\n * @param {Object} params whether to apply transforms to stroked lines and transform precision (used for stroke width)\n * @return {Array} output path data\n */\nexports.applyTransforms = function(elem, path, params) {\n    // if there are no 'stroke' attr and references to other objects such as\n    // gradiends or clip-path which are also subjects to transform.\n    if (!elem.hasAttr('transform') || !elem.attr('transform').value ||\n        elem.someAttr(function(attr) {\n            return ~referencesProps.indexOf(attr.name) && ~attr.value.indexOf('url(');\n        }))\n        return path;\n\n    var matrix = transformsMultiply(transform2js(elem.attr('transform').value)),\n        stroke = elem.computedAttr('stroke'),\n        id = elem.computedAttr('id'),\n        transformPrecision = params.transformPrecision,\n        newPoint, scale;\n\n    if (stroke && stroke != 'none') {\n        if (!params.applyTransformsStroked ||\n            (matrix.data[0] != matrix.data[3] || matrix.data[1] != -matrix.data[2]) &&\n            (matrix.data[0] != -matrix.data[3] || matrix.data[1] != matrix.data[2]))\n            return path;\n\n        // \"stroke-width\" should be inside the part with ID, otherwise it can be overrided in <use>\n        if (id) {\n            var idElem = elem,\n                hasStrokeWidth = false;\n\n            do {\n                if (idElem.hasAttr('stroke-width')) hasStrokeWidth = true;\n            } while (!idElem.hasAttr('id', id) && !hasStrokeWidth && (idElem = idElem.parentNode));\n\n            if (!hasStrokeWidth) return path;\n        }\n\n        scale = +Math.sqrt(matrix.data[0] * matrix.data[0] + matrix.data[1] * matrix.data[1]).toFixed(transformPrecision);\n\n        if (scale !== 1) {\n            var strokeWidth = elem.computedAttr('stroke-width') || defaultStrokeWidth;\n\n            if (elem.hasAttr('stroke-width')) {\n                elem.attrs['stroke-width'].value = elem.attrs['stroke-width'].value.trim()\n                    .replace(regNumericValues, function(num) { return removeLeadingZero(num * scale) });\n            } else {\n                elem.addAttr({\n                    name: 'stroke-width',\n                    prefix: '',\n                    local: 'stroke-width',\n                    value: strokeWidth.replace(regNumericValues, function(num) { return removeLeadingZero(num * scale) })\n                });\n            }\n        }\n    } else if (id) { // Stroke and stroke-width can be redefined with <use>\n        return path;\n    }\n\n    path.forEach(function(pathItem) {\n\n        if (pathItem.data) {\n\n            // h -> l\n            if (pathItem.instruction === 'h') {\n\n                pathItem.instruction = 'l';\n                pathItem.data[1] = 0;\n\n            // v -> l\n            } else if (pathItem.instruction === 'v') {\n\n                pathItem.instruction = 'l';\n                pathItem.data[1] = pathItem.data[0];\n                pathItem.data[0] = 0;\n\n            }\n\n            // if there is a translate() transform\n            if (pathItem.instruction === 'M' &&\n                (matrix.data[4] !== 0 ||\n                matrix.data[5] !== 0)\n            ) {\n\n                // then apply it only to the first absoluted M\n                newPoint = transformPoint(matrix.data, pathItem.data[0], pathItem.data[1]);\n                set(pathItem.data, newPoint);\n                set(pathItem.coords, newPoint);\n\n                // clear translate() data from transform matrix\n                matrix.data[4] = 0;\n                matrix.data[5] = 0;\n\n            } else {\n\n                if (pathItem.instruction == 'a') {\n\n                    transformArc(pathItem.data, matrix.data);\n\n                    // reduce number of digits in rotation angle\n                    if (Math.abs(pathItem.data[2]) > 80) {\n                        var a = pathItem.data[0],\n                            rotation = pathItem.data[2];\n                        pathItem.data[0] = pathItem.data[1];\n                        pathItem.data[1] = a;\n                        pathItem.data[2] = rotation + (rotation > 0 ? -90 : 90);\n                    }\n\n                    newPoint = transformPoint(matrix.data, pathItem.data[5], pathItem.data[6]);\n                    pathItem.data[5] = newPoint[0];\n                    pathItem.data[6] = newPoint[1];\n\n                } else {\n\n                    for (var i = 0; i < pathItem.data.length; i += 2) {\n                        newPoint = transformPoint(matrix.data, pathItem.data[i], pathItem.data[i + 1]);\n                        pathItem.data[i] = newPoint[0];\n                        pathItem.data[i + 1] = newPoint[1];\n                    }\n                }\n\n                pathItem.coords[0] = pathItem.base[0] + pathItem.data[pathItem.data.length - 2];\n                pathItem.coords[1] = pathItem.base[1] + pathItem.data[pathItem.data.length - 1];\n\n            }\n\n        }\n\n    });\n\n    // remove transform attr\n    elem.removeAttr('transform');\n\n    return path;\n};\n\n/**\n * Apply transform 3x3 matrix to x-y point.\n *\n * @param {Array} matrix transform 3x3 matrix\n * @param {Array} point x-y point\n * @return {Array} point with new coordinates\n */\nfunction transformPoint(matrix, x, y) {\n\n    return [\n        matrix[0] * x + matrix[2] * y + matrix[4],\n        matrix[1] * x + matrix[3] * y + matrix[5]\n    ];\n\n}\n\n/**\n * Compute Cubic Bézie bounding box.\n *\n * @see http://processingjs.nihongoresources.com/bezierinfo/\n *\n * @param {Float} xa\n * @param {Float} ya\n * @param {Float} xb\n * @param {Float} yb\n * @param {Float} xc\n * @param {Float} yc\n * @param {Float} xd\n * @param {Float} yd\n *\n * @return {Object}\n */\nexports.computeCubicBoundingBox = function(xa, ya, xb, yb, xc, yc, xd, yd) {\n\n    var minx = Number.POSITIVE_INFINITY,\n        miny = Number.POSITIVE_INFINITY,\n        maxx = Number.NEGATIVE_INFINITY,\n        maxy = Number.NEGATIVE_INFINITY,\n        ts,\n        t,\n        x,\n        y,\n        i;\n\n    // X\n    if (xa < minx) { minx = xa; }\n    if (xa > maxx) { maxx = xa; }\n    if (xd < minx) { minx= xd; }\n    if (xd > maxx) { maxx = xd; }\n\n    ts = computeCubicFirstDerivativeRoots(xa, xb, xc, xd);\n\n    for (i = 0; i < ts.length; i++) {\n\n        t = ts[i];\n\n        if (t >= 0 && t <= 1) {\n            x = computeCubicBaseValue(t, xa, xb, xc, xd);\n            // y = computeCubicBaseValue(t, ya, yb, yc, yd);\n\n            if (x < minx) { minx = x; }\n            if (x > maxx) { maxx = x; }\n        }\n\n    }\n\n    // Y\n    if (ya < miny) { miny = ya; }\n    if (ya > maxy) { maxy = ya; }\n    if (yd < miny) { miny = yd; }\n    if (yd > maxy) { maxy = yd; }\n\n    ts = computeCubicFirstDerivativeRoots(ya, yb, yc, yd);\n\n    for (i = 0; i < ts.length; i++) {\n\n        t = ts[i];\n\n        if (t >= 0 && t <= 1) {\n            // x = computeCubicBaseValue(t, xa, xb, xc, xd);\n            y = computeCubicBaseValue(t, ya, yb, yc, yd);\n\n            if (y < miny) { miny = y; }\n            if (y > maxy) { maxy = y; }\n        }\n\n    }\n\n    return {\n        minx: minx,\n        miny: miny,\n        maxx: maxx,\n        maxy: maxy\n    };\n\n};\n\n// compute the value for the cubic bezier function at time=t\nfunction computeCubicBaseValue(t, a, b, c, d) {\n\n    var mt = 1 - t;\n\n    return mt * mt * mt * a + 3 * mt * mt * t * b + 3 * mt * t * t * c + t * t * t * d;\n\n}\n\n// compute the value for the first derivative of the cubic bezier function at time=t\nfunction computeCubicFirstDerivativeRoots(a, b, c, d) {\n\n    var result = [-1, -1],\n        tl = -a + 2 * b - c,\n        tr = -Math.sqrt(-a * (c - d) + b * b - b * (c + d) + c * c),\n        dn = -a + 3 * b - 3 * c + d;\n\n    if (dn !== 0) {\n        result[0] = (tl + tr) / dn;\n        result[1] = (tl - tr) / dn;\n    }\n\n    return result;\n\n}\n\n/**\n * Compute Quadratic Bézier bounding box.\n *\n * @see http://processingjs.nihongoresources.com/bezierinfo/\n *\n * @param {Float} xa\n * @param {Float} ya\n * @param {Float} xb\n * @param {Float} yb\n * @param {Float} xc\n * @param {Float} yc\n *\n * @return {Object}\n */\nexports.computeQuadraticBoundingBox = function(xa, ya, xb, yb, xc, yc) {\n\n    var minx = Number.POSITIVE_INFINITY,\n        miny = Number.POSITIVE_INFINITY,\n        maxx = Number.NEGATIVE_INFINITY,\n        maxy = Number.NEGATIVE_INFINITY,\n        t,\n        x,\n        y;\n\n    // X\n    if (xa < minx) { minx = xa; }\n    if (xa > maxx) { maxx = xa; }\n    if (xc < minx) { minx = xc; }\n    if (xc > maxx) { maxx = xc; }\n\n    t = computeQuadraticFirstDerivativeRoot(xa, xb, xc);\n\n    if (t >= 0 && t <= 1) {\n        x = computeQuadraticBaseValue(t, xa, xb, xc);\n        // y = computeQuadraticBaseValue(t, ya, yb, yc);\n\n        if (x < minx) { minx = x; }\n        if (x > maxx) { maxx = x; }\n    }\n\n    // Y\n    if (ya < miny) { miny = ya; }\n    if (ya > maxy) { maxy = ya; }\n    if (yc < miny) { miny = yc; }\n    if (yc > maxy) { maxy = yc; }\n\n    t = computeQuadraticFirstDerivativeRoot(ya, yb, yc);\n\n    if (t >= 0 && t <=1 ) {\n        // x = computeQuadraticBaseValue(t, xa, xb, xc);\n        y = computeQuadraticBaseValue(t, ya, yb, yc);\n\n        if (y < miny) { miny = y; }\n        if (y > maxy) { maxy = y ; }\n\n    }\n\n    return {\n        minx: minx,\n        miny: miny,\n        maxx: maxx,\n        maxy: maxy\n    };\n\n};\n\n// compute the value for the quadratic bezier function at time=t\nfunction computeQuadraticBaseValue(t, a, b, c) {\n\n    var mt = 1 - t;\n\n    return mt * mt * a + 2 * mt * t * b + t * t * c;\n\n}\n\n// compute the value for the first derivative of the quadratic bezier function at time=t\nfunction computeQuadraticFirstDerivativeRoot(a, b, c) {\n\n    var t = -1,\n        denominator = a - 2 * b + c;\n\n    if (denominator !== 0) {\n        t = (a - b) / denominator;\n    }\n\n    return t;\n\n}\n\n/**\n * Convert path array to string.\n *\n * @param {Array} path input path data\n * @param {Object} params plugin params\n * @return {String} output path string\n */\nexports.js2path = function(path, data, params) {\n\n    path.pathJS = data;\n\n    if (params.collapseRepeated) {\n        data = collapseRepeated(data);\n    }\n\n    path.attr('d').value = data.reduce(function(pathString, item) {\n        return pathString += item.instruction + (item.data ? cleanupOutData(item.data, params) : '');\n    }, '');\n\n};\n\n/**\n * Collapse repeated instructions data\n *\n * @param {Array} path input path data\n * @return {Array} output path data\n */\nfunction collapseRepeated(data) {\n\n    var prev,\n        prevIndex;\n\n    // copy an array and modifieds item to keep original data untouched\n    data = data.reduce(function(newPath, item) {\n        if (\n            prev && item.data &&\n            item.instruction == prev.instruction\n        ) {\n            // concat previous data with current\n            if (item.instruction != 'M') {\n                prev = newPath[prevIndex] = {\n                    instruction: prev.instruction,\n                    data: prev.data.concat(item.data),\n                    coords: item.coords,\n                    base: prev.base\n                };\n            } else {\n                prev.data = item.data;\n                prev.coords = item.coords;\n            }\n        } else {\n            newPath.push(item);\n            prev = item;\n            prevIndex = newPath.length - 1;\n        }\n\n        return newPath;\n    }, []);\n\n    return data;\n\n}\n\nfunction set(dest, source) {\n    dest[0] = source[source.length - 2];\n    dest[1] = source[source.length - 1];\n    return dest;\n}\n\n/**\n * Checks if two paths have an intersection by checking convex hulls\n * collision using Gilbert-Johnson-Keerthi distance algorithm\n * http://entropyinteractive.com/2011/04/gjk-algorithm/\n *\n * @param {Array} path1 JS path representation\n * @param {Array} path2 JS path representation\n * @return {Boolean}\n */\nexports.intersects = function(path1, path2) {\n    if (path1.length < 3 || path2.length < 3) return false; // nothing to fill\n\n    // Collect points of every subpath.\n    var points1 = relative2absolute(path1).reduce(gatherPoints, []),\n        points2 = relative2absolute(path2).reduce(gatherPoints, []);\n\n    // Axis-aligned bounding box check.\n    if (points1.maxX <= points2.minX || points2.maxX <= points1.minX ||\n        points1.maxY <= points2.minY || points2.maxY <= points1.minY ||\n        points1.every(function (set1) {\n            return points2.every(function (set2) {\n                return set1[set1.maxX][0] <= set2[set2.minX][0] ||\n                    set2[set2.maxX][0] <= set1[set1.minX][0] ||\n                    set1[set1.maxY][1] <= set2[set2.minY][1] ||\n                    set2[set2.maxY][1] <= set1[set1.minY][1];\n            });\n        })\n    ) return false;\n\n    // Get a convex hull from points of each subpath. Has the most complexity O(n·log n).\n    var hullNest1 = points1.map(convexHull),\n        hullNest2 = points2.map(convexHull);\n\n    // Check intersection of every subpath of the first path with every subpath of the second.\n    return hullNest1.some(function(hull1) {\n        if (hull1.length < 3) return false;\n\n        return hullNest2.some(function(hull2) {\n            if (hull2.length < 3) return false;\n\n            var simplex = [getSupport(hull1, hull2, [1, 0])], // create the initial simplex\n                direction = minus(simplex[0]); // set the direction to point towards the origin\n\n            var iterations = 1e4; // infinite loop protection, 10 000 iterations is more than enough\n            while (true) {\n                if (iterations-- == 0) {\n                    console.error('Error: infinite loop while processing mergePaths plugin.');\n                    return true; // true is the safe value that means “do nothing with paths”\n                }\n                // add a new point\n                simplex.push(getSupport(hull1, hull2, direction));\n                // see if the new point was on the correct side of the origin\n                if (dot(direction, simplex[simplex.length - 1]) <= 0) return false;\n                // process the simplex\n                if (processSimplex(simplex, direction)) return true;\n            }\n        });\n    });\n\n    function getSupport(a, b, direction) {\n        return sub(supportPoint(a, direction), supportPoint(b, minus(direction)));\n    }\n\n    // Computes farthest polygon point in particular direction.\n    // Thanks to knowledge of min/max x and y coordinates we can choose a quadrant to search in.\n    // Since we're working on convex hull, the dot product is increasing until we find the farthest point.\n    function supportPoint(polygon, direction) {\n        var index = direction[1] >= 0 ?\n                direction[0] < 0 ? polygon.maxY : polygon.maxX :\n                direction[0] < 0 ? polygon.minX : polygon.minY,\n            max = -Infinity,\n            value;\n        while ((value = dot(polygon[index], direction)) > max) {\n            max = value;\n            index = ++index % polygon.length;\n        }\n        return polygon[(index || polygon.length) - 1];\n    }\n};\n\nfunction processSimplex(simplex, direction) {\n    /* jshint -W004 */\n\n    // we only need to handle to 1-simplex and 2-simplex\n    if (simplex.length == 2) { // 1-simplex\n        var a = simplex[1],\n            b = simplex[0],\n            AO = minus(simplex[1]),\n            AB = sub(b, a);\n        // AO is in the same direction as AB\n        if (dot(AO, AB) > 0) {\n            // get the vector perpendicular to AB facing O\n            set(direction, orth(AB, a));\n        } else {\n            set(direction, AO);\n            // only A remains in the simplex\n            simplex.shift();\n        }\n    } else { // 2-simplex\n        var a = simplex[2], // [a, b, c] = simplex\n            b = simplex[1],\n            c = simplex[0],\n            AB = sub(b, a),\n            AC = sub(c, a),\n            AO = minus(a),\n            ACB = orth(AB, AC), // the vector perpendicular to AB facing away from C\n            ABC = orth(AC, AB); // the vector perpendicular to AC facing away from B\n\n        if (dot(ACB, AO) > 0) {\n            if (dot(AB, AO) > 0) { // region 4\n                set(direction, ACB);\n                simplex.shift(); // simplex = [b, a]\n            } else { // region 5\n                set(direction, AO);\n                simplex.splice(0, 2); // simplex = [a]\n            }\n        } else if (dot(ABC, AO) > 0) {\n            if (dot(AC, AO) > 0) { // region 6\n                set(direction, ABC);\n                simplex.splice(1, 1); // simplex = [c, a]\n            } else { // region 5 (again)\n                set(direction, AO);\n                simplex.splice(0, 2); // simplex = [a]\n            }\n        } else // region 7\n            return true;\n    }\n    return false;\n}\n\nfunction minus(v) {\n    return [-v[0], -v[1]];\n}\n\nfunction sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n}\n\nfunction dot(v1, v2) {\n    return v1[0] * v2[0] + v1[1] * v2[1];\n}\n\nfunction orth(v, from) {\n    var o = [-v[1], v[0]];\n    return dot(o, minus(from)) < 0 ? minus(o) : o;\n}\n\nfunction gatherPoints(points, item, index, path) {\n\n    var subPath = points.length && points[points.length - 1],\n        prev = index && path[index - 1],\n        basePoint = subPath.length && subPath[subPath.length - 1],\n        data = item.data,\n        ctrlPoint = basePoint;\n\n    switch (item.instruction) {\n        case 'M':\n            points.push(subPath = []);\n            break;\n        case 'H':\n            addPoint(subPath, [data[0], basePoint[1]]);\n            break;\n        case 'V':\n            addPoint(subPath, [basePoint[0], data[0]]);\n            break;\n        case 'Q':\n            addPoint(subPath, data.slice(0, 2));\n            prevCtrlPoint = [data[2] - data[0], data[3] - data[1]]; // Save control point for shorthand\n            break;\n        case 'T':\n            if (prev.instruction == 'Q' && prev.instruction == 'T') {\n                ctrlPoint = [basePoint[0] + prevCtrlPoint[0], basePoint[1] + prevCtrlPoint[1]];\n                addPoint(subPath, ctrlPoint);\n                prevCtrlPoint = [data[0] - ctrlPoint[0], data[1] - ctrlPoint[1]];\n            }\n            break;\n        case 'C':\n            // Approximate quibic Bezier curve with middle points between control points\n            addPoint(subPath, [.5 * (basePoint[0] + data[0]), .5 * (basePoint[1] + data[1])]);\n            addPoint(subPath, [.5 * (data[0] + data[2]), .5 * (data[1] + data[3])]);\n            addPoint(subPath, [.5 * (data[2] + data[4]), .5 * (data[3] + data[5])]);\n            prevCtrlPoint = [data[4] - data[2], data[5] - data[3]]; // Save control point for shorthand\n            break;\n        case 'S':\n            if (prev.instruction == 'C' && prev.instruction == 'S') {\n                addPoint(subPath, [basePoint[0] + .5 * prevCtrlPoint[0], basePoint[1] + .5 * prevCtrlPoint[1]]);\n                ctrlPoint = [basePoint[0] + prevCtrlPoint[0], basePoint[1] + prevCtrlPoint[1]];\n            }\n            addPoint(subPath, [.5 * (ctrlPoint[0] + data[0]), .5 * (ctrlPoint[1]+ data[1])]);\n            addPoint(subPath, [.5 * (data[0] + data[2]), .5 * (data[1] + data[3])]);\n            prevCtrlPoint = [data[2] - data[0], data[3] - data[1]];\n            break;\n        case 'A':\n            // Convert the arc to bezier curves and use the same approximation\n            var curves = a2c.apply(0, basePoint.concat(data));\n            for (var cData; (cData = curves.splice(0,6).map(toAbsolute)).length;) {\n                addPoint(subPath, [.5 * (basePoint[0] + cData[0]), .5 * (basePoint[1] + cData[1])]);\n                addPoint(subPath, [.5 * (cData[0] + cData[2]), .5 * (cData[1] + cData[3])]);\n                addPoint(subPath, [.5 * (cData[2] + cData[4]), .5 * (cData[3] + cData[5])]);\n                if (curves.length) addPoint(subPath, basePoint = cData.slice(-2));\n            }\n            break;\n    }\n    // Save final command coordinates\n    if (data && data.length >= 2) addPoint(subPath, data.slice(-2));\n    return points;\n\n    function toAbsolute(n, i) { return n + basePoint[i % 2] }\n\n    // Writes data about the extreme points on each axle\n    function addPoint(path, point) {\n        if (!path.length || point[1] > path[path.maxY][1]) {\n            path.maxY = path.length;\n            points.maxY = points.length ? Math.max(point[1], points.maxY) : point[1];\n        }\n        if (!path.length || point[0] > path[path.maxX][0]) {\n            path.maxX = path.length;\n            points.maxX = points.length ? Math.max(point[0], points.maxX) : point[0];\n        }\n        if (!path.length || point[1] < path[path.minY][1]) {\n            path.minY = path.length;\n            points.minY = points.length ? Math.min(point[1], points.minY) : point[1];\n        }\n        if (!path.length || point[0] < path[path.minX][0]) {\n            path.minX = path.length;\n            points.minX = points.length ? Math.min(point[0], points.minX) : point[0];\n        }\n        path.push(point);\n    }\n}\n\n/**\n * Forms a convex hull from set of points of every subpath using monotone chain convex hull algorithm.\n * http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain\n *\n * @param points An array of [X, Y] coordinates\n */\nfunction convexHull(points) {\n    /* jshint -W004 */\n\n    points.sort(function(a, b) {\n        return a[0] == b[0] ? a[1] - b[1] : a[0] - b[0];\n    });\n\n    var lower = [],\n        minY = 0,\n        bottom = 0;\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        if (points[i][1] < points[minY][1]) {\n            minY = i;\n            bottom = lower.length;\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [],\n        maxY = points.length - 1,\n        top = 0;\n    for (var i = points.length; i--;) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[i]) <= 0) {\n            upper.pop();\n        }\n        if (points[i][1] > points[maxY][1]) {\n            maxY = i;\n            top = upper.length;\n        }\n        upper.push(points[i]);\n    }\n\n    // last points are equal to starting points of the other part\n    upper.pop();\n    lower.pop();\n\n    var hull = lower.concat(upper);\n\n    hull.minX = 0; // by sorting\n    hull.maxX = lower.length;\n    hull.minY = bottom;\n    hull.maxY = (lower.length + top) % hull.length;\n\n    return hull;\n}\n\nfunction cross(o, a, b) {\n    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);\n}\n\n/* Based on code from Snap.svg (Apache 2 license). http://snapsvg.io/\n * Thanks to Dmitry Baranovskiy for his great work!\n */\n\n// jshint ignore: start\nfunction a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this Math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    var _120 = Math.PI * 120 / 180,\n        rad = Math.PI / 180 * (+angle || 0),\n        res = [],\n        rotateX = function(x, y, rad) { return x * Math.cos(rad) - y * Math.sin(rad) },\n        rotateY = function(x, y, rad) { return x * Math.sin(rad) + y * Math.cos(rad) };\n    if (!recursive) {\n        x1 = rotateX(x1, y1, -rad);\n        y1 = rotateY(x1, y1, -rad);\n        x2 = rotateX(x2, y2, -rad);\n        y2 = rotateY(x2, y2, -rad);\n        var x = (x1 - x2) / 2,\n            y = (y1 - y2) / 2;\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n        if (h > 1) {\n            h = Math.sqrt(h);\n            rx = h * rx;\n            ry = h * ry;\n        }\n        var rx2 = rx * rx,\n            ry2 = ry * ry,\n            k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n            cx = k * rx * y / ry + (x1 + x2) / 2,\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\n            f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n            f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n        f1 = x1 < cx ? Math.PI - f1 : f1;\n        f2 = x2 < cx ? Math.PI - f2 : f2;\n        f1 < 0 && (f1 = Math.PI * 2 + f1);\n        f2 < 0 && (f2 = Math.PI * 2 + f2);\n        if (sweep_flag && f1 > f2) {\n            f1 = f1 - Math.PI * 2;\n        }\n        if (!sweep_flag && f2 > f1) {\n            f2 = f2 - Math.PI * 2;\n        }\n    } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n    }\n    var df = f2 - f1;\n    if (Math.abs(df) > _120) {\n        var f2old = f2,\n            x2old = x2,\n            y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * Math.cos(f2);\n        y2 = cy + ry * Math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n    df = f2 - f1;\n    var c1 = Math.cos(f1),\n        s1 = Math.sin(f1),\n        c2 = Math.cos(f2),\n        s2 = Math.sin(f2),\n        t = Math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m = [\n            - hx * s1, hy * c1,\n            x2 + hx * s2 - x1, y2 - hy * c2 - y1,\n            x2 - x1, y2 - y1\n        ];\n    if (recursive) {\n        return m.concat(res);\n    } else {\n        res = m.concat(res);\n        var newres = [];\n        for (var i = 0, n = res.length; i < n; i++) {\n            newres[i] = i % 2 ? rotateY(res[i - 1], res[i], rad) : rotateX(res[i], res[i + 1], rad);\n        }\n        return newres;\n    }\n}\n// jshint ignore: end\n"]}