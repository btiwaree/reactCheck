{"version":3,"sources":["removeUselessStrokeAndFill.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,IAAR,GAAe,SAAf;;AAEA,QAAQ,MAAR,GAAiB,IAAjB;;AAEA,QAAQ,WAAR,GAAsB,4CAAtB;;AAEA,QAAQ,MAAR,GAAiB;AACb,YAAQ,IAAR;AACA,UAAM,IAAN;CAFJ;;AAKA,IAAI,QAAQ,QAAQ,gBAAR,EAA0B,WAA1B,CAAsC,KAAtC;IACR,iBAAiB,SAAjB;IACA,eAAe,QAAf;IACA,gBAAgB,CAAC,OAAD,EAAU,QAAV,CAAhB;IACA,mBAAmB,KAAnB;;;;;;;;;;;AAWJ,QAAQ,EAAR,GAAa,UAAS,IAAT,EAAe,MAAf,EAAuB;;AAEhC,QAAI,KAAK,MAAL,CAAY,aAAZ,CAAJ,EAAgC;AAC5B,2BAAmB,IAAnB,CAD4B;KAAhC;;AAIA,QAAI,CAAC,gBAAD,IAAqB,KAAK,MAAL,CAAY,KAAZ,CAArB,IAA2C,CAAC,KAAK,YAAL,CAAkB,IAAlB,CAAD,EAA0B;;AAErE,YAAI,SAAS,OAAO,MAAP,IAAiB,KAAK,YAAL,CAAkB,QAAlB,CAAjB;YACT,OAAO,OAAO,IAAP,IAAe,CAAC,KAAK,YAAL,CAAkB,MAAlB,EAA0B,MAA1B,CAAD;;;AAH2C,YAOjE,OAAO,MAAP,KACC,CAAC,MAAD,IACG,UAAU,MAAV,IACA,KAAK,YAAL,CAAkB,gBAAlB,EAAoC,GAApC,CAFH,IAGG,KAAK,YAAL,CAAkB,cAAlB,EAAkC,GAAlC,CAHH,CADD,EAMF;AACE,gBAAI,eAAe,KAAK,UAAL,CAAgB,YAAhB,CAA6B,QAA7B,CAAf;gBACA,gBAAgB,gBAAgB,gBAAgB,MAAhB,CAFtC;;AAIE,iBAAK,QAAL,CAAc,UAAS,IAAT,EAAe;AACzB,oBAAI,eAAe,IAAf,CAAoB,KAAK,IAAL,CAAxB,EAAoC;AAChC,yBAAK,UAAL,CAAgB,KAAK,IAAL,CAAhB,CADgC;iBAApC;aADU,CAAd,CAJF;;AAUE,gBAAI,aAAJ,EAAmB,KAAK,OAAL,CAAa;AAC5B,sBAAM,QAAN;AACA,uBAAO,MAAP;AACA,wBAAQ,EAAR;AACA,uBAAO,QAAP;aAJe,EAAnB;SAjBJ;;;AANqE,YAiCjE,OAAO,IAAP,KACC,CAAC,IAAD,IAAS,KAAK,YAAL,CAAkB,cAAlB,EAAkC,GAAlC,CAAT,CADD,EAEF;AACE,iBAAK,QAAL,CAAc,UAAS,IAAT,EAAe;AACzB,oBAAI,aAAa,IAAb,CAAkB,KAAK,IAAL,CAAtB,EAAkC;AAC9B,yBAAK,UAAL,CAAgB,KAAK,IAAL,CAAhB,CAD8B;iBAAlC;aADU,CAAd,CADF;;AAOE,gBAAI,IAAJ,EAAU;AACN,oBAAI,KAAK,OAAL,CAAa,MAAb,CAAJ,EACI,KAAK,IAAL,CAAU,MAAV,EAAkB,KAAlB,GAA0B,MAA1B,CADJ,KAGI,KAAK,OAAL,CAAa;AACT,0BAAM,MAAN;AACA,2BAAO,MAAP;AACA,4BAAQ,EAAR;AACA,2BAAO,MAAP;iBAJJ,EAHJ;aADJ;SAVJ;KAhCJ;CANS","file":"removeUselessStrokeAndFill-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'removes useless stroke and fill attributes';\n\nexports.params = {\n    stroke: true,\n    fill: true\n};\n\nvar shape = require('./_collections').elemsGroups.shape,\n    regStrokeProps = /^stroke/,\n    regFillProps = /^fill-/,\n    styleOrScript = ['style', 'script'],\n    hasStyleOrScript = false;\n\n/**\n * Remove useless stroke and fill attrs.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    if (item.isElem(styleOrScript)) {\n        hasStyleOrScript = true;\n    }\n\n    if (!hasStyleOrScript && item.isElem(shape) && !item.computedAttr('id')) {\n\n        var stroke = params.stroke && item.computedAttr('stroke'),\n            fill = params.fill && !item.computedAttr('fill', 'none');\n\n        // remove stroke*\n        if (\n            params.stroke &&\n            (!stroke ||\n                stroke == 'none' ||\n                item.computedAttr('stroke-opacity', '0') ||\n                item.computedAttr('stroke-width', '0')\n            )\n        ) {\n            var parentStroke = item.parentNode.computedAttr('stroke'),\n                declineStroke = parentStroke && parentStroke != 'none';\n\n            item.eachAttr(function(attr) {\n                if (regStrokeProps.test(attr.name)) {\n                    item.removeAttr(attr.name);\n                }\n            });\n\n            if (declineStroke) item.addAttr({\n                name: 'stroke',\n                value: 'none',\n                prefix: '',\n                local: 'stroke'\n            });\n        }\n\n        // remove fill*\n        if (\n            params.fill &&\n            (!fill || item.computedAttr('fill-opacity', '0'))\n        ) {\n            item.eachAttr(function(attr) {\n                if (regFillProps.test(attr.name)) {\n                    item.removeAttr(attr.name);\n                }\n            });\n\n            if (fill) {\n                if (item.hasAttr('fill'))\n                    item.attr('fill').value = 'none';\n                else\n                    item.addAttr({\n                        name: 'fill',\n                        value: 'none',\n                        prefix: '',\n                        local: 'fill'\n                    });\n            }\n        }\n\n    }\n\n};\n"]}