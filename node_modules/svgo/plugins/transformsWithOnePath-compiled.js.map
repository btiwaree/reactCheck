{"version":3,"sources":["transformsWithOnePath.js"],"names":[],"mappings":"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","file":"transformsWithOnePath-compiled.js","sourcesContent":["'use strict';\n\n/*\n * Thanks to http://fontello.com project for sponsoring this plugin\n */\n\nexports.type = 'full';\n\nexports.active = false;\n\nexports.description = 'performs a set of operations on SVG with one path inside (disabled by default)';\n\nexports.params = {\n    // width and height to resize SVG and rescale inner Path\n    width: false,\n    height: false,\n\n    // scale inner Path without resizing SVG\n    scale: false,\n\n    // shiftX/Y inner Path\n    shiftX: false,\n    shiftY: false,\n\n    // crop SVG width along the real width of inner Path\n    hcrop: false,\n\n    // vertical center inner Path inside SVG height\n    vcenter: false,\n\n    // stringify params\n    floatPrecision: 3,\n    leadingZero: true,\n    negativeExtraSpace: true\n};\n\nvar _path = require('./_path.js'),\n    relative2absolute = _path.relative2absolute,\n    computeCubicBoundingBox = _path.computeCubicBoundingBox,\n    computeQuadraticBoundingBox = _path.computeQuadraticBoundingBox,\n    applyTransforms = _path.applyTransforms,\n    js2path = _path.js2path,\n    path2js = _path.path2js,\n    EXTEND = require('whet.extend');\n\nexports.fn = function(data, params) {\n\n    data.content.forEach(function(item) {\n\n        // only for SVG with one Path inside\n        if (item.isElem('svg') &&\n            item.content.length === 1 &&\n            item.content[0].isElem('path')\n        ) {\n\n            var svgElem = item,\n                pathElem = svgElem.content[0],\n                // get absoluted Path data\n                path = relative2absolute(EXTEND(true, [], path2js(pathElem))),\n                xs = [],\n                ys = [],\n                cubicСontrolPoint = [0, 0],\n                quadraticСontrolPoint = [0, 0],\n                lastPoint = [0, 0],\n                cubicBoundingBox,\n                quadraticBoundingBox,\n                i,\n                segment;\n\n            path.forEach(function(pathItem) {\n\n                // ML\n                if ('ML'.indexOf(pathItem.instruction) > -1) {\n\n                    for (i = 0; i < pathItem.data.length; i++) {\n                        if (i % 2 === 0) {\n                            xs.push(pathItem.data[i]);\n                        } else {\n                            ys.push(pathItem.data[i]);\n                        }\n                    }\n\n                    lastPoint = cubicСontrolPoint = quadraticСontrolPoint = pathItem.data.slice(-2);\n\n                // H\n                } else if (pathItem.instruction === 'H') {\n\n                    pathItem.data.forEach(function(d) {\n                        xs.push(d);\n                    });\n\n                    lastPoint[0] = cubicСontrolPoint[0] = quadraticСontrolPoint[0] = pathItem.data[pathItem.data.length - 2];\n\n                // V\n                } else if (pathItem.instruction === 'V') {\n\n                    pathItem.data.forEach(function(d) {\n                        ys.push(d);\n                    });\n\n                    lastPoint[1] = cubicСontrolPoint[1] = quadraticСontrolPoint[1] = pathItem.data[pathItem.data.length - 1];\n\n                // C\n                } else if (pathItem.instruction === 'C') {\n\n                    for (i = 0; i < pathItem.data.length; i += 6) {\n\n                        segment = pathItem.data.slice(i, i + 6);\n\n                        cubicBoundingBox = computeCubicBoundingBox.apply(this, lastPoint.concat(segment));\n\n                        xs.push(cubicBoundingBox.minx);\n                        xs.push(cubicBoundingBox.maxx);\n\n                        ys.push(cubicBoundingBox.miny);\n                        ys.push(cubicBoundingBox.maxy);\n\n                        // reflected control point for the next possible S\n                        cubicСontrolPoint = [\n                            2 * segment[4] - segment[2],\n                            2 * segment[5] - segment[3]\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                // S\n                } else if (pathItem.instruction === 'S') {\n\n                    for (i = 0; i < pathItem.data.length; i += 4) {\n\n                        segment = pathItem.data.slice(i, i + 4);\n\n                        cubicBoundingBox = computeCubicBoundingBox.apply(this, lastPoint.concat(cubicСontrolPoint).concat(segment));\n\n                        xs.push(cubicBoundingBox.minx);\n                        xs.push(cubicBoundingBox.maxx);\n\n                        ys.push(cubicBoundingBox.miny);\n                        ys.push(cubicBoundingBox.maxy);\n\n                        // reflected control point for the next possible S\n                        cubicСontrolPoint = [\n                            2 * segment[2] - cubicСontrolPoint[0],\n                            2 * segment[3] - cubicСontrolPoint[1],\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                // Q\n                } else if (pathItem.instruction === 'Q') {\n\n                    for (i = 0; i < pathItem.data.length; i += 4) {\n\n                        segment = pathItem.data.slice(i, i + 4);\n\n                        quadraticBoundingBox = computeQuadraticBoundingBox.apply(this, lastPoint.concat(segment));\n\n                        xs.push(quadraticBoundingBox.minx);\n                        xs.push(quadraticBoundingBox.maxx);\n\n                        ys.push(quadraticBoundingBox.miny);\n                        ys.push(quadraticBoundingBox.maxy);\n\n                        // reflected control point for the next possible T\n                        quadraticСontrolPoint = [\n                            2 * segment[2] - segment[0],\n                            2 * segment[3] - segment[1]\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                // S\n                } else if (pathItem.instruction === 'T') {\n\n                    for (i = 0; i < pathItem.data.length; i += 2) {\n\n                        segment = pathItem.data.slice(i, i + 2);\n\n                        quadraticBoundingBox = computeQuadraticBoundingBox.apply(this, lastPoint.concat(quadraticСontrolPoint).concat(segment));\n\n                        xs.push(quadraticBoundingBox.minx);\n                        xs.push(quadraticBoundingBox.maxx);\n\n                        ys.push(quadraticBoundingBox.miny);\n                        ys.push(quadraticBoundingBox.maxy);\n\n                        // reflected control point for the next possible T\n                        quadraticСontrolPoint = [\n                            2 * segment[0] - quadraticСontrolPoint[0],\n                            2 * segment[1] - quadraticСontrolPoint[1]\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                }\n\n            });\n\n            var xmin = Math.min.apply(this, xs).toFixed(params.floatPrecision),\n                xmax = Math.max.apply(this, xs).toFixed(params.floatPrecision),\n                ymin = Math.min.apply(this, ys).toFixed(params.floatPrecision),\n                ymax = Math.max.apply(this, ys).toFixed(params.floatPrecision),\n                svgWidth = +svgElem.attr('width').value,\n                svgHeight = +svgElem.attr('height').value,\n                realWidth = Math.round(xmax - xmin),\n                realHeight = Math.round(ymax - ymin),\n                transform = '',\n                scale;\n\n            // width & height\n            if (params.width && params.height) {\n\n                scale = Math.min(params.width / svgWidth, params.height / svgHeight);\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                svgWidth = svgElem.attr('width').value = params.width;\n                svgHeight = svgElem.attr('height').value = params.height;\n\n                transform += ' scale(' + scale + ')';\n\n            // width\n            } else if (params.width && !params.height) {\n\n                scale = params.width / svgWidth;\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                svgWidth = svgElem.attr('width').value = params.width;\n                svgHeight = svgElem.attr('height').value = svgHeight * scale;\n\n                transform += ' scale(' + scale + ')';\n\n            // height\n            } else if (params.height && !params.width) {\n\n                scale = params.height / svgHeight;\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                svgWidth = svgElem.attr('width').value = svgWidth * scale;\n                svgHeight = svgElem.attr('height').value = params.height;\n\n                transform += ' scale(' + scale + ')';\n\n            }\n\n            // shiftX\n            if (params.shiftX) {\n                transform += ' translate(' + realWidth * params.shiftX + ', 0)';\n            }\n\n            // shiftY\n            if (params.shiftY) {\n                transform += ' translate(0, ' + realHeight * params.shiftY + ')';\n            }\n\n            // scale\n            if (params.scale) {\n                scale = params.scale;\n\n                var shiftX = svgWidth / 2,\n                    shiftY = svgHeight / 2;\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                if (params.shiftX || params.shiftY) {\n                    transform += ' scale(' + scale + ')';\n                } else {\n                    transform += ' translate(' + shiftX + ' ' + shiftY + ') scale(' + scale + ') translate(-' + shiftX + ' -' + shiftY + ')';\n                }\n            }\n\n            // hcrop\n            if (params.hcrop) {\n                transform += ' translate(' + (-xmin) + ' 0)';\n\n                svgElem.attr('width').value = realWidth;\n            }\n\n            // vcenter\n            if (params.vcenter) {\n                transform += ' translate(0 ' + (((svgHeight - realHeight) / 2) - ymin) + ')';\n            }\n\n            if (transform) {\n                pathElem.addAttr({\n                    name: 'transform',\n                    prefix: '',\n                    local: 'transform',\n                    value: transform\n                });\n\n                path = applyTransforms(pathElem, pathElem.pathJS, true, params.floatPrecision);\n\n                // transformed data rounding\n                path.forEach(function(pathItem) {\n                    if (pathItem.data) {\n                        pathItem.data = pathItem.data.map(function(num) {\n                            return +num.toFixed(params.floatPrecision);\n                        });\n                    }\n                });\n\n                // save new\n                js2path(pathElem, path, params);\n            }\n\n        }\n\n    });\n\n    return data;\n\n};\n"]}