{"version":3,"sources":["cleanupAttrs.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,IAAR,GAAe,SAAf;;AAEA,QAAQ,MAAR,GAAiB,IAAjB;;AAEA,QAAQ,WAAR,GAAsB,kEAAtB;;AAEA,QAAQ,MAAR,GAAiB;AACb,cAAU,IAAV;AACA,UAAM,IAAN;AACA,YAAQ,IAAR;CAHJ;;AAMA,IAAI,uBAAuB,aAAvB;IACA,cAAc,KAAd;IACA,YAAY,SAAZ;;;;;;;;;;;AAWJ,QAAQ,EAAR,GAAa,UAAS,IAAT,EAAe,MAAf,EAAuB;;AAEhC,QAAI,KAAK,MAAL,EAAJ,EAAmB;;AAEf,aAAK,QAAL,CAAc,UAAS,IAAT,EAAe;;AAEzB,gBAAI,OAAO,QAAP,EAAiB;;AAEjB,qBAAK,KAAL,GAAa,KAAK,KAAL,CAAW,OAAX,CAAmB,oBAAnB,EAAyC,UAAS,KAAT,EAAgB,EAAhB,EAAoB,EAApB,EAAwB;AAC1E,2BAAO,KAAK,GAAL,GAAW,EAAX,CADmE;iBAAxB,CAAtD;;;AAFiB,oBAOjB,CAAK,KAAL,GAAa,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAb,CAPiB;aAArB;;AAUA,gBAAI,OAAO,IAAP,EAAa;AACb,qBAAK,KAAL,GAAa,KAAK,KAAL,CAAW,IAAX,EAAb,CADa;aAAjB;;AAIA,gBAAI,OAAO,MAAP,EAAe;AACf,qBAAK,KAAL,GAAa,KAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,EAA8B,GAA9B,CAAb,CADe;aAAnB;SAhBU,CAAd,CAFe;KAAnB;CAFS","file":"cleanupAttrs-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'cleanups attributes from newlines, trailing and repeating spaces';\n\nexports.params = {\n    newlines: true,\n    trim: true,\n    spaces: true\n};\n\nvar regNewlinesNeedSpace = /(\\S)\\n(\\S)/g,\n    regNewlines = /\\n/g,\n    regSpaces = /\\s{2,}/g;\n\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    if (item.isElem()) {\n\n        item.eachAttr(function(attr) {\n\n            if (params.newlines) {\n                // new line which requires a space instead of themselve\n                attr.value = attr.value.replace(regNewlinesNeedSpace, function(match, p1, p2) {\n                    return p1 + ' ' + p2;\n                });\n\n                // simple new line\n                attr.value = attr.value.replace(regNewlines, '');\n            }\n\n            if (params.trim) {\n                attr.value = attr.value.trim();\n            }\n\n            if (params.spaces) {\n                attr.value = attr.value.replace(regSpaces, ' ');\n            }\n\n        });\n\n    }\n\n};\n"]}