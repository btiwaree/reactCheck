{"version":3,"sources":["convertPathData.js"],"names":[],"mappings":"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","file":"convertPathData-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'optimizes path data: writes in shorter form, applies transformations';\n\nexports.params = {\n    applyTransforms: true,\n    applyTransformsStroked: true,\n    makeArcs: {\n        threshold: 2.5, // coefficient of rounding error\n        tolerance: 0.5  // percentage of radius\n    },\n    straightCurves: true,\n    lineShorthands: true,\n    curveSmoothShorthands: true,\n    floatPrecision: 3,\n    transformPrecision: 5,\n    removeUseless: true,\n    collapseRepeated: true,\n    utilizeAbsolute: true,\n    leadingZero: true,\n    negativeExtraSpace: true\n};\n\nvar pathElems = require('./_collections.js').pathElems,\n    path2js = require('./_path.js').path2js,\n    js2path = require('./_path.js').js2path,\n    applyTransforms = require('./_path.js').applyTransforms,\n    cleanupOutData = require('../lib/svgo/tools').cleanupOutData,\n    roundData,\n    precision,\n    error,\n    arcThreshold,\n    arcTolerance,\n    hasMarkerMid;\n\n/**\n * Convert absolute Path to relative,\n * collapse repeated instructions,\n * detect and convert Lineto shorthands,\n * remove useless instructions like \"l0,0\",\n * trim useless delimiters and leading zeros,\n * decrease accuracy of floating-point numbers.\n *\n * @see http://www.w3.org/TR/SVG/paths.html#PathData\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    if (item.isElem(pathElems) && item.hasAttr('d')) {\n\n        precision = params.floatPrecision;\n        error = precision !== false ? +Math.pow(.1, precision).toFixed(precision) : 1e-2;\n        roundData = precision > 0 && precision < 20 ? strongRound : round;\n        if (params.makeArcs) {\n            arcThreshold = params.makeArcs.threshold;\n            arcTolerance = params.makeArcs.tolerance;\n        }\n        hasMarkerMid = item.hasAttr('marker-mid');\n\n        var data = path2js(item);\n\n        // TODO: get rid of functions returns\n        if (data.length) {\n            convertToRelative(data);\n\n            if (params.applyTransforms) {\n                data = applyTransforms(item, data, params);\n            }\n\n            data = filters(data, params);\n\n            if (params.utilizeAbsolute) {\n                data = convertToMixed(data, params);\n            }\n\n            js2path(item, data, params);\n        }\n\n    }\n\n};\n\n/**\n * Convert absolute path data coordinates to relative.\n *\n * @param {Array} path input path data\n * @param {Object} params plugin params\n * @return {Array} output path data\n */\nfunction convertToRelative(path) {\n\n    var point = [0, 0],\n        subpathPoint = [0, 0],\n        baseItem;\n\n    path.forEach(function(item, index) {\n\n        var instruction = item.instruction,\n            data = item.data;\n\n        // data !== !z\n        if (data) {\n\n            // already relative\n            // recalculate current point\n            if ('mcslqta'.indexOf(instruction) > -1) {\n\n                point[0] += data[data.length - 2];\n                point[1] += data[data.length - 1];\n\n                if (instruction === 'm') {\n                    subpathPoint[0] = point[0];\n                    subpathPoint[1] = point[1];\n                    baseItem = item;\n                }\n\n            } else if (instruction === 'h') {\n\n                point[0] += data[0];\n\n            } else if (instruction === 'v') {\n\n                point[1] += data[0];\n\n            }\n\n            // convert absolute path data coordinates to relative\n            // if \"M\" was not transformed from \"m\"\n            // M → m\n            if (instruction === 'M') {\n\n                if (index > 0) instruction = 'm';\n\n                data[0] -= point[0];\n                data[1] -= point[1];\n\n                subpathPoint[0] = point[0] += data[0];\n                subpathPoint[1] = point[1] += data[1];\n\n                baseItem = item;\n\n            }\n\n            // L → l\n            // T → t\n            else if ('LT'.indexOf(instruction) > -1) {\n\n                instruction = instruction.toLowerCase();\n\n                // x y\n                // 0 1\n                data[0] -= point[0];\n                data[1] -= point[1];\n\n                point[0] += data[0];\n                point[1] += data[1];\n\n            // C → c\n            } else if (instruction === 'C') {\n\n                instruction = 'c';\n\n                // x1 y1 x2 y2 x y\n                // 0  1  2  3  4 5\n                data[0] -= point[0];\n                data[1] -= point[1];\n                data[2] -= point[0];\n                data[3] -= point[1];\n                data[4] -= point[0];\n                data[5] -= point[1];\n\n                point[0] += data[4];\n                point[1] += data[5];\n\n            // S → s\n            // Q → q\n            } else if ('SQ'.indexOf(instruction) > -1) {\n\n                instruction = instruction.toLowerCase();\n\n                // x1 y1 x y\n                // 0  1  2 3\n                data[0] -= point[0];\n                data[1] -= point[1];\n                data[2] -= point[0];\n                data[3] -= point[1];\n\n                point[0] += data[2];\n                point[1] += data[3];\n\n            // A → a\n            } else if (instruction === 'A') {\n\n                instruction = 'a';\n\n                // rx ry x-axis-rotation large-arc-flag sweep-flag x y\n                // 0  1  2               3              4          5 6\n                data[5] -= point[0];\n                data[6] -= point[1];\n\n                point[0] += data[5];\n                point[1] += data[6];\n\n            // H → h\n            } else if (instruction === 'H') {\n\n                instruction = 'h';\n\n                data[0] -= point[0];\n\n                point[0] += data[0];\n\n            // V → v\n            } else if (instruction === 'V') {\n\n                instruction = 'v';\n\n                data[0] -= point[1];\n\n                point[1] += data[0];\n\n            }\n\n            item.instruction = instruction;\n            item.data = data;\n\n            // store absolute coordinates for later use\n            item.coords = point.slice(-2);\n\n        }\n\n        // !data === z, reset current point\n        else if (instruction == 'z') {\n            if (baseItem) {\n                item.coords = baseItem.coords;\n            }\n            point[0] = subpathPoint[0];\n            point[1] = subpathPoint[1];\n        }\n\n        item.base = index > 0 ? path[index - 1].coords : [0, 0];\n\n    });\n\n    return path;\n\n}\n\n/**\n * Main filters loop.\n *\n * @param {Array} path input path data\n * @param {Object} params plugin params\n * @return {Array} output path data\n */\nfunction filters(path, params) {\n\n    var stringify = data2Path.bind(null, params),\n        relSubpoint = [0, 0],\n        pathBase = [0, 0],\n        prev = {};\n\n    path = path.filter(function(item, index, path) {\n\n        var instruction = item.instruction,\n            data = item.data,\n            next = path[index + 1];\n\n        if (data) {\n\n            var sdata = data,\n                circle;\n\n            if (instruction === 's') {\n                sdata = [0, 0].concat(data);\n\n                if ('cs'.indexOf(prev.instruction) > -1) {\n                    var pdata = prev.data,\n                        n = pdata.length;\n\n                    // (-x, -y) of the prev tangent point relative to the current point\n                    sdata[0] = pdata[n - 2] - pdata[n - 4];\n                    sdata[1] = pdata[n - 1] - pdata[n - 3];\n                }\n\n            }\n\n            // convert curves to arcs if possible\n            if (\n                params.makeArcs &&\n                (instruction == 'c' || instruction == 's') &&\n                isConvex(sdata) &&\n                (circle = findCircle(sdata))\n            ) {\n                var r = roundData([circle.radius])[0],\n                    angle = findArcAngle(sdata, circle),\n                    sweep = sdata[5] * sdata[0] - sdata[4] * sdata[1] > 0 ? 1 : 0,\n                    arc = {\n                        instruction: 'a',\n                        data: [r, r, 0, 0, sweep, sdata[4], sdata[5]],\n                        coords: item.coords.slice(),\n                        base: item.base\n                    },\n                    output = [arc],\n                    // relative coordinates to adjust the found circle\n                    relCenter = [circle.center[0] - sdata[4], circle.center[1] - sdata[5]],\n                    relCircle = { center: relCenter, radius: circle.radius },\n                    arcCurves = [item],\n                    hasPrev = 0,\n                    suffix = '',\n                    nextLonghand;\n\n                if (\n                    prev.instruction == 'c' && isConvex(prev.data) && isArcPrev(prev.data, circle) ||\n                    prev.instruction == 'a' && prev.sdata && isArcPrev(prev.sdata, circle)\n                ) {\n                    arcCurves.unshift(prev);\n                    arc.base = prev.base;\n                    arc.data[5] = arc.coords[0] - arc.base[0];\n                    arc.data[6] = arc.coords[1] - arc.base[1];\n                    var prevData = prev.instruction == 'a' ? prev.sdata : prev.data;\n                    angle += findArcAngle(prevData,\n                        {\n                            center: [prevData[4] + relCenter[0], prevData[5] + relCenter[1]],\n                            radius: circle.radius\n                        }\n                    );\n                    if (angle > Math.PI) arc.data[3] = 1;\n                    hasPrev = 1;\n                }\n\n                // check if next curves are fitting the arc\n                for (var j = index; (next = path[++j]) && ~'cs'.indexOf(next.instruction);) {\n                    var nextData = next.data;\n                    if (next.instruction == 's') {\n                        nextLonghand = makeLonghand({instruction: 's', data: next.data.slice() },\n                            path[j - 1].data);\n                        nextData = nextLonghand.data;\n                        nextLonghand.data = nextData.slice(0, 2);\n                        suffix = stringify([nextLonghand]);\n                    }\n                    if (isConvex(nextData) && isArc(nextData, relCircle)) {\n                        angle += findArcAngle(nextData, relCircle);\n                        if (angle - 2 * Math.PI > 1e-3) break; // more than 360°\n                        if (angle > Math.PI) arc.data[3] = 1;\n                        arcCurves.push(next);\n                        if (2 * Math.PI - angle > 1e-3) { // less than 360°\n                            arc.coords = next.coords;\n                            arc.data[5] = arc.coords[0] - arc.base[0];\n                            arc.data[6] = arc.coords[1] - arc.base[1];\n                        } else {\n                            // full circle, make a half-circle arc and add a second one\n                            arc.data[5] = 2 * (relCircle.center[0] - nextData[4]);\n                            arc.data[6] = 2 * (relCircle.center[1] - nextData[5]);\n                            arc.coords = [arc.base[0] + arc.data[5], arc.base[1] + arc.data[6]];\n                            arc = {\n                                instruction: 'a',\n                                data: [r, r, 0, 0, sweep,\n                                    next.coords[0] - arc.coords[0], next.coords[1] - arc.coords[1]],\n                                coords: next.coords,\n                                base: arc.coords\n                            };\n                            output.push(arc);\n                            j++;\n                            break;\n                        }\n                        relCenter[0] -= nextData[4];\n                        relCenter[1] -= nextData[5];\n                    } else break;\n                }\n\n                if ((stringify(output) + suffix).length < stringify(arcCurves).length) {\n                    if (path[j] && path[j].instruction == 's') {\n                        makeLonghand(path[j], path[j - 1].data);\n                    }\n                    if (hasPrev) {\n                        var prevArc = output.shift();\n                        roundData(prevArc.data);\n                        relSubpoint[0] += prevArc.data[5] - prev.data[prev.data.length - 2];\n                        relSubpoint[1] += prevArc.data[6] - prev.data[prev.data.length - 1];\n                        prev.instruction = 'a';\n                        prev.data = prevArc.data;\n                        item.base = prev.coords = prevArc.coords;\n                    }\n                    arc = output.shift();\n                    if (arcCurves.length == 1) {\n                        item.sdata = sdata.slice(); // preserve curve data for future checks\n                    } else if (arcCurves.length - 1 - hasPrev > 0) {\n                        // filter out consumed next items\n                        path.splice.apply(path, [index + 1, arcCurves.length - 1 - hasPrev].concat(output));\n                    }\n                    if (!arc) return false;\n                    instruction = 'a';\n                    data = arc.data;\n                    item.coords = arc.coords;\n                }\n            }\n\n            // Rounding relative coordinates, taking in account accummulating error\n            // to get closer to absolute coordinates. Sum of rounded value remains same:\n            // l .25 3 .25 2 .25 3 .25 2 -> l .3 3 .2 2 .3 3 .2 2\n            if (precision !== false) {\n                if ('mltqsc'.indexOf(instruction) > -1) {\n                    for (var i = data.length; i--;) {\n                        data[i] += item.base[i % 2] - relSubpoint[i % 2];\n                    }\n                } else if (instruction == 'h') {\n                    data[0] += item.base[0] - relSubpoint[0];\n                } else if (instruction == 'v') {\n                    data[0] += item.base[1] - relSubpoint[1];\n                } else if (instruction == 'a') {\n                    data[5] += item.base[0] - relSubpoint[0];\n                    data[6] += item.base[1] - relSubpoint[1];\n                }\n                roundData(data);\n\n                if      (instruction == 'h') relSubpoint[0] += data[0];\n                else if (instruction == 'v') relSubpoint[1] += data[0];\n                else {\n                    relSubpoint[0] += data[data.length - 2];\n                    relSubpoint[1] += data[data.length - 1];\n                }\n                roundData(relSubpoint);\n\n                if (instruction.toLowerCase() == 'm') {\n                    pathBase[0] = relSubpoint[0];\n                    pathBase[1] = relSubpoint[1];\n                }\n            }\n\n            // convert straight curves into lines segments\n            if (params.straightCurves) {\n\n                if (\n                    instruction === 'c' &&\n                    isCurveStraightLine(data) ||\n                    instruction === 's' &&\n                    isCurveStraightLine(sdata)\n                ) {\n                    if (next && next.instruction == 's')\n                        makeLonghand(next, data); // fix up next curve\n                    instruction = 'l';\n                    data = data.slice(-2);\n                }\n\n                else if (\n                    instruction === 'q' &&\n                    isCurveStraightLine(data)\n                ) {\n                    if (next && next.instruction == 't')\n                        makeLonghand(next, data); // fix up next curve\n                    instruction = 'l';\n                    data = data.slice(-2);\n                }\n\n                else if (\n                    instruction === 't' &&\n                    prev.instruction !== 'q' &&\n                    prev.instruction !== 't'\n                ) {\n                    instruction = 'l';\n                    data = data.slice(-2);\n                }\n\n                else if (\n                    instruction === 'a' &&\n                    (data[0] === 0 || data[1] === 0)\n                ) {\n                    instruction = 'l';\n                    data = data.slice(-2);\n                }\n            }\n\n            // horizontal and vertical line shorthands\n            // l 50 0 → h 50\n            // l 0 50 → v 50\n            if (\n                params.lineShorthands &&\n                instruction === 'l'\n            ) {\n                if (data[1] === 0) {\n                    instruction = 'h';\n                    data.pop();\n                } else if (data[0] === 0) {\n                    instruction = 'v';\n                    data.shift();\n                }\n            }\n\n            // collapse repeated commands\n            // h 20 h 30 -> h 50\n            if (\n                params.collapseRepeated &&\n                !hasMarkerMid &&\n                ('mhv'.indexOf(instruction) > -1) &&\n                prev.instruction &&\n                instruction == prev.instruction.toLowerCase() &&\n                (\n                    (instruction != 'h' && instruction != 'v') ||\n                    (prev.data[0] >= 0) == (item.data[0] >= 0)\n            )) {\n                prev.data[0] += data[0];\n                if (instruction != 'h' && instruction != 'v') {\n                    prev.data[1] += data[1];\n                }\n                prev.coords = item.coords;\n                path[index] = prev;\n                return false;\n            }\n\n            // convert curves into smooth shorthands\n            if (params.curveSmoothShorthands && prev.instruction) {\n\n                // curveto\n                if (instruction === 'c') {\n\n                    // c + c → c + s\n                    if (\n                        prev.instruction === 'c' &&\n                        data[0] === -(prev.data[2] - prev.data[4]) &&\n                        data[1] === -(prev.data[3] - prev.data[5])\n                    ) {\n                        instruction = 's';\n                        data = data.slice(2);\n                    }\n\n                    // s + c → s + s\n                    else if (\n                        prev.instruction === 's' &&\n                        data[0] === -(prev.data[0] - prev.data[2]) &&\n                        data[1] === -(prev.data[1] - prev.data[3])\n                    ) {\n                        instruction = 's';\n                        data = data.slice(2);\n                    }\n\n                    // [^cs] + c → [^cs] + s\n                    else if (\n                        'cs'.indexOf(prev.instruction) === -1 &&\n                        data[0] === 0 &&\n                        data[1] === 0\n                    ) {\n                        instruction = 's';\n                        data = data.slice(2);\n                    }\n\n                }\n\n                // quadratic Bézier curveto\n                else if (instruction === 'q') {\n\n                    // q + q → q + t\n                    if (\n                        prev.instruction === 'q' &&\n                        data[0] === (prev.data[2] - prev.data[0]) &&\n                        data[1] === (prev.data[3] - prev.data[1])\n                    ) {\n                        instruction = 't';\n                        data = data.slice(2);\n                    }\n\n                    // t + q → t + t\n                    else if (\n                        prev.instruction === 't' &&\n                        data[2] === prev.data[0] &&\n                        data[3] === prev.data[1]\n                    ) {\n                        instruction = 't';\n                        data = data.slice(2);\n                    }\n\n                }\n\n            }\n\n            // remove useless non-first path segments\n            if (params.removeUseless) {\n\n                // l 0,0 / h 0 / v 0 / q 0,0 0,0 / t 0,0 / c 0,0 0,0 0,0 / s 0,0 0,0\n                if (\n                    (\n                     'lhvqtcs'.indexOf(instruction) > -1\n                    ) &&\n                    data.every(function(i) { return i === 0; })\n                ) {\n                    path[index] = prev;\n                    return false;\n                }\n\n                // a 25,25 -30 0,1 0,0\n                if (\n                    instruction === 'a' &&\n                    data[5] === 0 &&\n                    data[6] === 0\n                ) {\n                    path[index] = prev;\n                    return false;\n                }\n\n            }\n\n            item.instruction = instruction;\n            item.data = data;\n\n            prev = item;\n\n        } else {\n\n            // z resets coordinates\n            relSubpoint[0] = pathBase[0];\n            relSubpoint[1] = pathBase[1];\n            if (prev.instruction == 'z') return false;\n            prev = item;\n\n        }\n\n        return true;\n\n    });\n\n    return path;\n\n}\n\n/**\n * Writes data in shortest form using absolute or relative coordinates.\n *\n * @param {Array} data input path data\n * @return {Boolean} output\n */\nfunction convertToMixed(path, params) {\n\n    var prev = path[0];\n\n    path = path.filter(function(item, index) {\n\n        if (index == 0) return true;\n        if (!item.data) {\n            prev = item;\n            return true;\n        }\n\n        var instruction = item.instruction,\n            data = item.data,\n            adata = data && data.slice(0);\n\n        if ('mltqsc'.indexOf(instruction) > -1) {\n            for (var i = adata.length; i--;) {\n                adata[i] += item.base[i % 2];\n            }\n        } else if (instruction == 'h') {\n                adata[0] += item.base[0];\n        } else if (instruction == 'v') {\n                adata[0] += item.base[1];\n        } else if (instruction == 'a') {\n                adata[5] += item.base[0];\n                adata[6] += item.base[1];\n        }\n\n        roundData(adata);\n\n        var absoluteDataStr = cleanupOutData(adata, params),\n            relativeDataStr = cleanupOutData(data, params);\n\n        // Convert to absolute coordinates if it's shorter.\n        // v-20 -> V0\n        // Don't convert if it fits following previous instruction.\n        // l20 30-10-50 instead of l20 30L20 30\n        if (\n            absoluteDataStr.length < relativeDataStr.length &&\n            !(\n                params.negativeExtraSpace &&\n                instruction == prev.instruction &&\n                prev.instruction.charCodeAt(0) > 96 &&\n                absoluteDataStr.length == relativeDataStr.length - 1 &&\n                (data[0] < 0 || /^0\\./.test(data[0]) && prev.data[prev.data.length - 1] % 1)\n            )\n        ) {\n            item.instruction = instruction.toUpperCase();\n            item.data = adata;\n        }\n\n        prev = item;\n\n        return true;\n\n    });\n\n    return path;\n\n}\n\n/**\n * Checks if curve is convex. Control points of such a curve must form\n * a convex quadrilateral with diagonals crosspoint inside of it.\n *\n * @param {Array} data input path data\n * @return {Boolean} output\n */\nfunction isConvex(data) {\n\n    var center = getIntersection([0, 0, data[2], data[3], data[0], data[1], data[4], data[5]]);\n\n    return center &&\n        (data[2] < center[0] == center[0] < 0) &&\n        (data[3] < center[1] == center[1] < 0) &&\n        (data[4] < center[0] == center[0] < data[0]) &&\n        (data[5] < center[1] == center[1] < data[1]);\n\n}\n\n/**\n * Computes lines equations by two points and returns their intersection point.\n *\n * @param {Array} coords 8 numbers for 4 pairs of coordinates (x,y)\n * @return {Array|undefined} output coordinate of lines' crosspoint\n */\nfunction getIntersection(coords) {\n\n        // Prev line equation parameters.\n    var a1 = coords[1] - coords[3], // y1 - y2\n        b1 = coords[2] - coords[0], // x2 - x1\n        c1 = coords[0] * coords[3] - coords[2] * coords[1], // x1 * y2 - x2 * y1\n\n        // Next line equation parameters\n        a2 = coords[5] - coords[7], // y1 - y2\n        b2 = coords[6] - coords[4], // x2 - x1\n        c2 = coords[4] * coords[7] - coords[5] * coords[6], // x1 * y2 - x2 * y1\n        denom = (a1 * b2 - a2 * b1);\n\n    if (!denom) return; // parallel lines havn't an intersection\n\n    var cross = [\n            (b1 * c2 - b2 * c1) / denom,\n            (a1 * c2 - a2 * c1) / -denom\n        ];\n    if (\n        !isNaN(cross[0]) && !isNaN(cross[1]) &&\n        isFinite(cross[0]) && isFinite(cross[1])\n    ) {\n        return cross;\n    }\n\n}\n\n/**\n * Decrease accuracy of floating-point numbers\n * in path data keeping a specified number of decimals.\n * Smart rounds values like 2.3491 to 2.35 instead of 2.349.\n * Doesn't apply \"smartness\" if the number precision fits already.\n *\n * @param {Array} data input data array\n * @return {Array} output data array\n */\nfunction strongRound(data) {\n    for (var i = data.length; i-- > 0;) {\n        if (data[i].toFixed(precision) != data[i]) {\n            var rounded = +data[i].toFixed(precision - 1);\n            data[i] = +Math.abs(rounded - data[i]).toFixed(precision + 1) >= error ?\n                +data[i].toFixed(precision) :\n                rounded;\n        }\n    }\n    return data;\n}\n\n/**\n * Simple rounding function if precision is 0.\n *\n * @param {Array} data input data array\n * @return {Array} output data array\n */\nfunction round(data) {\n    for (var i = data.length; i-- > 0;) {\n        data[i] = Math.round(data[i]);\n    }\n    return data;\n}\n\n/**\n * Checks if a curve is a straight line by measuring distance\n * from middle points to the line formed by end points.\n *\n * @param {Array} xs array of curve points x-coordinates\n * @param {Array} ys array of curve points y-coordinates\n * @return {Boolean}\n */\n\nfunction isCurveStraightLine(data) {\n\n    // Get line equation a·x + b·y + c = 0 coefficients a, b (c = 0) by start and end points.\n    var i = data.length - 2,\n        a = -data[i + 1], // y1 − y2 (y1 = 0)\n        b = data[i],      // x2 − x1 (x1 = 0)\n        d = 1 / (a * a + b * b); // same part for all points\n\n    if (i <= 1 || !isFinite(d)) return false; // curve that ends at start point isn't the case\n\n    // Distance from point (x0, y0) to the line is sqrt((c − a·x0 − b·y0)² / (a² + b²))\n    while ((i -= 2) >= 0) {\n        if (Math.sqrt(Math.pow(a * data[i] + b * data[i + 1], 2) * d) > error)\n            return false;\n    }\n\n    return true;\n\n}\n\n/**\n * Converts next curve from shorthand to full form using the current curve data.\n *\n * @param {Object} item curve to convert\n * @param {Array} data current curve data\n */\n\nfunction makeLonghand(item, data) {\n    switch (item.instruction) {\n        case 's': item.instruction = 'c'; break;\n        case 't': item.instruction = 'q'; break;\n    }\n    item.data.unshift(data[data.length - 2] - data[data.length - 4], data[data.length - 1] - data[data.length - 3]);\n    return item;\n}\n\n/**\n * Returns distance between two points\n *\n * @param {Array} point1 first point coordinates\n * @param {Array} point2 second point coordinates\n * @return {Number} distance\n */\n\nfunction getDistance(point1, point2) {\n    return Math.sqrt(Math.pow(point1[0] - point2[0], 2) + Math.pow(point1[1] - point2[1], 2));\n}\n\n/**\n * Returns coordinates of the curve point corresponding to the certain t\n * a·(1 - t)³·p1 + b·(1 - t)²·t·p2 + c·(1 - t)·t²·p3 + d·t³·p4,\n * where pN are control points and p1 is zero due to relative coordinates.\n *\n * @param {Array} curve array of curve points coordinates\n * @param {Number} t parametric position from 0 to 1\n * @return {Array} Point coordinates\n */\n\nfunction getCubicBezierPoint(curve, t) {\n    var sqrT = t * t,\n        cubT = sqrT * t,\n        mt = 1 - t,\n        sqrMt = mt * mt;\n\n    return [\n        3 * sqrMt * t * curve[0] + 3 * mt * sqrT * curve[2] + cubT * curve[4],\n        3 * sqrMt * t * curve[1] + 3 * mt * sqrT * curve[3] + cubT * curve[5]\n    ];\n}\n\n/**\n * Finds circle by 3 points of the curve and checks if the curve fits the found circle.\n *\n * @param {Array} curve\n * @return {Object|undefined} circle\n */\n\nfunction findCircle(curve) {\n    var midPoint = getCubicBezierPoint(curve, 1/2),\n        m1 = [midPoint[0] / 2, midPoint[1] / 2],\n        m2 = [(midPoint[0] + curve[4]) / 2, (midPoint[1] + curve[5]) / 2],\n        center = getIntersection([\n            m1[0], m1[1],\n            m1[0] + m1[1], m1[1] - m1[0],\n            m2[0], m2[1],\n            m2[0] + (m2[1] - midPoint[1]), m2[1] - (m2[0] - midPoint[0])\n        ]),\n        radius = center && getDistance([0, 0], center),\n        tolerance = Math.min(arcThreshold * error, arcTolerance * radius / 100);\n\n    if (center && [1/4, 3/4].every(function(point) {\n        return Math.abs(getDistance(getCubicBezierPoint(curve, point), center) - radius) <= tolerance;\n    }))\n        return { center: center, radius: radius};\n}\n\n/**\n * Checks if a curve fits the given circe.\n *\n * @param {Object} circle\n * @param {Array} curve\n * @return {Boolean}\n */\n\nfunction isArc(curve,  circle) {\n    var tolerance = Math.min(arcThreshold * error, arcTolerance * circle.radius / 100);\n\n    return [0, 1/4, 1/2, 3/4, 1].every(function(point) {\n        return Math.abs(getDistance(getCubicBezierPoint(curve, point), circle.center) - circle.radius) <= tolerance;\n    });\n}\n\n/**\n * Checks if a previos curve fits the given circe.\n *\n * @param {Object} circle\n * @param {Array} curve\n * @return {Boolean}\n */\n\nfunction isArcPrev(curve,  circle) {\n    return isArc(curve, {\n        center: [circle.center[0] + curve[4], circle.center[1] + curve[5]],\n        radius: circle.radius\n    });\n}\n\n/**\n * Finds angle of a curve fitting the given arc.\n\n * @param {Array} curve\n * @param {Object} relCircle\n * @return {Number} angle\n */\n\nfunction findArcAngle(curve, relCircle) {\n    var x1 = -relCircle.center[0],\n        y1 = -relCircle.center[1],\n        x2 = curve[4] - relCircle.center[0],\n        y2 = curve[5] - relCircle.center[1];\n\n    return Math.acos(\n            (x1 * x2 + y1 * y2) /\n            Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n        );\n}\n\n/**\n * Converts given path data to string.\n *\n * @param {Object} params\n * @param {Array} pathData\n * @return {String}\n */\n\nfunction data2Path(params, pathData) {\n    return pathData.reduce(function(pathString, item) {\n        return pathString += item.instruction + (item.data ? cleanupOutData(roundData(item.data.slice()), params) : '');\n    }, '');\n}\n"]}