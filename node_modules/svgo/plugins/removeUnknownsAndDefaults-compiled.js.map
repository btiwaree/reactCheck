{"version":3,"sources":["removeUnknownsAndDefaults.js"],"names":[],"mappings":"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","file":"removeUnknownsAndDefaults-compiled.js","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'removes unknown elements content and attributes, removes attrs with default values';\n\nexports.params = {\n    unknownContent: true,\n    unknownAttrs: true,\n    defaultAttrs: true,\n    uselessOverrides: true,\n    keepDataAttrs: true\n};\n\nvar collections = require('./_collections'),\n    elems = collections.elems,\n    attrsGroups = collections.attrsGroups,\n    elemsGroups = collections.elemsGroups,\n    attrsGroupsDefaults = collections.attrsGroupsDefaults,\n    attrsInheritable = collections.inheritableAttrs;\n\n// collect and extend all references\nfor (var elem in elems) {\n    elem = elems[elem];\n\n    if (elem.attrsGroups) {\n        elem.attrs = elem.attrs || [];\n\n        elem.attrsGroups.forEach(function(attrsGroupName) {\n            elem.attrs = elem.attrs.concat(attrsGroups[attrsGroupName]);\n\n            var groupDefaults = attrsGroupsDefaults[attrsGroupName];\n\n            if (groupDefaults) {\n                elem.defaults = elem.defaults || {};\n\n                for(var attrName in groupDefaults) {\n                    elem.defaults[attrName] = groupDefaults[attrName];\n                }\n            }\n        });\n\n    }\n\n    if (elem.contentGroups) {\n        elem.content = elem.content || [];\n\n        elem.contentGroups.forEach(function(contentGroupName) {\n            elem.content = elem.content.concat(elemsGroups[contentGroupName]);\n        });\n    }\n}\n\n/**\n * Remove unknown elements content and attributes,\n * remove attributes with default values.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    // elems w/o namespace prefix\n    if (item.isElem() && !item.prefix) {\n\n        var elem = item.elem;\n\n        // remove unknown element's content\n        if (\n            params.unknownContent &&\n            !item.isEmpty() &&\n            elems[elem] && //make sure we know of this element before checking its children\n            elem !== 'foreignObject'//Don't check foreignObject\n        ) {\n            item.content.forEach(function(content, i) {\n                if (\n                    content.isElem() &&\n                    !content.prefix && \n                    (\n                        (\n                            elems[elem].content && // Do we have a record of its permitted content?\n                            elems[elem].content.indexOf(content.elem) === -1\n                        ) || \n                        (\n                            !elems[elem].content && // we dont know about its permitted content\n                            !elems[content.elem] // check that we know about the element at all\n                        )\n                    )\n                ) {\n                    item.content.splice(i, 1);\n                }\n            });\n        }\n\n        // remove element's unknown attrs and attrs with default values\n        if (elems[elem] && elems[elem].attrs) {\n\n            item.eachAttr(function(attr) {\n\n                if (\n                    attr.name !== 'xmlns' &&\n                    (attr.prefix === 'xml' || !attr.prefix) &&\n                    (!params.keepDataAttrs || attr.name.indexOf('data-') != 0)\n                ) {\n                    if (\n                        // unknown attrs\n                        (\n                            params.unknownAttrs &&\n                            elems[elem].attrs.indexOf(attr.name) === -1\n                        ) ||\n                        // attrs with default values\n                        (\n                            params.defaultAttrs &&\n                            elems[elem].defaults &&\n                            elems[elem].defaults[attr.name] === attr.value && (\n                                attrsInheritable.indexOf(attr.name) < 0 ||\n                                !item.parentNode.computedAttr(attr.name)\n                        )) ||\n                        // useless overrides\n                        (\n                            params.uselessOverrides &&\n                            attrsInheritable.indexOf(attr.name) > -1 &&\n                            item.parentNode.computedAttr(attr.name, attr.value)\n                        )\n                    ) {\n                        item.removeAttr(attr.name);\n                    }\n                }\n\n            });\n\n        }\n\n    }\n\n};\n"]}