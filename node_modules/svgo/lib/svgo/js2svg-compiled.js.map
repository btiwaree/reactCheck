{"version":3,"sources":["js2svg.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,aAAR,CAAT;IACA,WAAW,QAAQ,+BAAR,EAAyC,WAAzC,CAAqD,WAArD,CAAiE,MAAjE,CAAwE,OAAxE,CAAX;;AAEJ,IAAI,WAAW;AACX,kBAAc,WAAd;AACA,gBAAY,GAAZ;AACA,mBAAe,IAAf;AACA,iBAAa,IAAb;AACA,kBAAc,GAAd;AACA,gBAAY,GAAZ;AACA,mBAAe,IAAf;AACA,iBAAa,GAAb;AACA,mBAAe,GAAf;AACA,iBAAa,IAAb;AACA,eAAW,IAAX;AACA,aAAS,GAAT;AACA,kBAAc,MAAd;AACA,gBAAY,KAAZ;AACA,gBAAY,WAAZ;AACA,cAAU,KAAV;AACA,eAAW,EAAX;AACA,aAAS,EAAT;AACA,YAAQ,CAAR;AACA,iBAAa,UAAb;AACA,oBAAgB,SAAhB;AACA,kBAAc,YAAd;AACA,YAAQ,KAAR;AACA,kBAAc,IAAd;CAxBA;;AA2BJ,IAAI,WAAW;AACT,SAAK,OAAL;AACA,UAAM,QAAN;AACA,SAAK,QAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;CALF;;;;;;;;;;AAgBJ,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAe,MAAf,EAAuB;;AAEpC,WAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,OAAnB,CAA2B,IAA3B,CAAP,CAFoC;CAAvB;;AAMjB,SAAS,MAAT,CAAgB,MAAhB,EAAwB;;AAEpB,QAAI,MAAJ,EAAY;AACR,aAAK,MAAL,GAAc,OAAO,IAAP,EAAa,EAAb,EAAiB,QAAjB,EAA2B,MAA3B,CAAd,CADQ;KAAZ,MAEO;AACH,aAAK,MAAL,GAAc,QAAd,CADG;KAFP;;AAMA,QAAI,SAAS,KAAK,MAAL,CAAY,MAAZ,CARO;AASpB,QAAI,OAAO,MAAP,IAAiB,QAAjB,IAA6B,CAAC,MAAM,MAAN,CAAD,EAAgB;AAC7C,aAAK,MAAL,CAAY,MAAZ,GAAqB,EAArB,CAD6C;AAE7C,aAAK,IAAI,IAAI,MAAJ,EAAY,MAAM,CAAN,GAAU,KAAK,MAAL,CAAY,MAAZ,IAAsB,GAAtB,CAA/B;KAFJ,MAGO,IAAI,OAAO,MAAP,IAAiB,QAAjB,EAA2B;AAClC,aAAK,MAAL,CAAY,MAAZ,GAAqB,MAArB,CADkC;KAA/B;;AAIP,QAAI,KAAK,MAAL,CAAY,MAAZ,EAAoB;AACpB,aAAK,MAAL,CAAY,UAAZ,IAA0B,IAA1B,CADoB;AAEpB,aAAK,MAAL,CAAY,WAAZ,IAA2B,IAA3B,CAFoB;AAGpB,aAAK,MAAL,CAAY,UAAZ,IAA0B,IAA1B,CAHoB;AAIpB,aAAK,MAAL,CAAY,QAAZ,IAAwB,IAAxB,CAJoB;AAKpB,aAAK,MAAL,CAAY,WAAZ,IAA2B,IAA3B,CALoB;AAMpB,aAAK,MAAL,CAAY,UAAZ,IAA0B,IAA1B,CANoB;AAOpB,aAAK,MAAL,CAAY,WAAZ,IAA2B,IAA3B,CAPoB;AAQpB,aAAK,MAAL,CAAY,OAAZ,IAAuB,IAAvB,CARoB;KAAxB;;AAWA,SAAK,WAAL,GAAmB,CAAnB,CA3BoB;AA4BpB,SAAK,WAAL,GAAmB,IAAnB,CA5BoB;CAAxB;;AAgCA,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AACxB,WAAO,SAAS,IAAT,CAAP,CADwB;CAA5B;;;;;;;;;AAWA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,UAAS,IAAT,EAAe;;AAEtC,QAAI,MAAM,EAAN,CAFkC;;AAItC,QAAI,KAAK,OAAL,EAAc;;AAEd,aAAK,WAAL,GAFc;;AAId,aAAK,OAAL,CAAa,OAAb,CAAqB,UAAS,IAAT,EAAe;;AAEhC,gBAAI,KAAK,IAAL,EAAW;AACZ,uBAAO,KAAK,UAAL,CAAgB,IAAhB,CAAP,CADY;aAAf,MAEO,IAAI,KAAK,IAAL,EAAW;AACnB,uBAAO,KAAK,UAAL,CAAgB,KAAK,IAAL,CAAvB,CADmB;aAAf,MAEA,IAAI,KAAK,OAAL,EAAc;AACrB,uBAAO,KAAK,aAAL,CAAmB,KAAK,OAAL,CAA1B,CADqB;aAAlB,MAEA,IAAI,KAAK,qBAAL,EAA4B;AACnC,uBAAO,KAAK,cAAL,CAAoB,KAAK,qBAAL,CAA3B,CADmC;aAAhC,MAEA,IAAI,KAAK,OAAL,EAAc;AACrB,uBAAO,KAAK,aAAL,CAAmB,KAAK,OAAL,CAA1B,CADqB;aAAlB,MAEA,IAAI,KAAK,KAAL,EAAY;AACnB,uBAAO,KAAK,WAAL,CAAiB,KAAK,KAAL,CAAxB,CADmB;aAAhB;SAZU,EAgBlB,IAhBH,EAJc;KAAlB;;AAwBA,SAAK,WAAL,GA5BsC;;AA8BtC,WAAO;AACH,cAAM,GAAN;AACA,cAAM;AACF,mBAAO,KAAK,KAAL;AACP,oBAAQ,KAAK,MAAL;SAFZ;KAFJ,CA9BsC;CAAf;;;;;;;AA6C3B,OAAO,SAAP,CAAiB,YAAjB,GAAgC,YAAW;;AAEvC,QAAI,SAAS,EAAT,CAFmC;;AAIvC,QAAI,KAAK,MAAL,CAAY,MAAZ,IAAsB,CAAC,KAAK,WAAL,EAAkB;AACzC,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,WAAL,EAAkB,GAAtC,EAA2C;AACvC,sBAAU,KAAK,MAAL,CAAY,MAAZ,CAD6B;SAA3C;KADJ;;AAMA,WAAO,MAAP,CAVuC;CAAX;;;;;;;;;AAqBhC,OAAO,SAAP,CAAiB,aAAjB,GAAiC,UAAS,OAAT,EAAkB;;AAE/C,WAAQ,KAAK,MAAL,CAAY,YAAZ,GACA,OADA,GAEA,KAAK,MAAL,CAAY,UAAZ,CAJuC;CAAlB;;;;;;;;;AAejC,OAAO,SAAP,CAAiB,cAAjB,GAAkC,UAAS,WAAT,EAAsB;;AAEpD,WAAQ,KAAK,MAAL,CAAY,aAAZ,GACA,YAAY,IAAZ,GACA,GAFA,GAGA,YAAY,IAAZ,GACA,KAAK,MAAL,CAAY,WAAZ,CAN4C;CAAtB;;;;;;;;;AAiBlC,OAAO,SAAP,CAAiB,aAAjB,GAAiC,UAAS,OAAT,EAAkB;;AAE/C,WAAQ,KAAK,MAAL,CAAY,YAAZ,GACA,OADA,GAEA,KAAK,MAAL,CAAY,UAAZ,CAJuC;CAAlB;;;;;;;;;AAejC,OAAO,SAAP,CAAiB,WAAjB,GAA+B,UAAS,KAAT,EAAgB;;AAE3C,WAAQ,KAAK,YAAL,KACA,KAAK,MAAL,CAAY,UAAZ,GACA,KAFA,GAGA,KAAK,MAAL,CAAY,QAAZ,CALmC;CAAhB;;;;;;;;;AAgB/B,OAAO,SAAP,CAAiB,UAAjB,GAA8B,UAAS,IAAT,EAAe;;;AAGzC,QACI,KAAK,MAAL,CAAY,KAAZ,KACA,KAAK,OAAL,CAAa,OAAb,CADA,IAEA,KAAK,OAAL,CAAa,QAAb,CAFA,EAGF;AACE,aAAK,KAAL,GAAa,KAAK,IAAL,CAAU,OAAV,EAAmB,KAAnB,CADf;AAEE,aAAK,MAAL,GAAc,KAAK,IAAL,CAAU,QAAV,EAAoB,KAApB,CAFhB;KAJF;;;AAHyC,QAarC,KAAK,OAAL,EAAJ,EAAoB;AAChB,YAAI,KAAK,MAAL,CAAY,YAAZ,EAA0B;AAC1B,mBAAO,KAAK,YAAL,KACA,KAAK,MAAL,CAAY,aAAZ,GACA,KAAK,IAAL,GACA,KAAK,WAAL,CAAiB,IAAjB,CAHA,GAIA,KAAK,MAAL,CAAY,WAAZ,CALmB;SAA9B,MAMO;AACH,mBAAO,KAAK,YAAL,KACA,KAAK,MAAL,CAAY,aAAZ,GACA,KAAK,IAAL,GACA,KAAK,WAAL,CAAiB,IAAjB,CAHA,GAIA,KAAK,MAAL,CAAY,UAAZ,GACA,KAAK,MAAL,CAAY,aAAZ,GACA,KAAK,IAAL,GACA,KAAK,MAAL,CAAY,WAAZ,CARJ;SANP;;AADgB,KAApB,MAkBO;AACH,gBAAI,eAAe,KAAK,MAAL,CAAY,YAAZ;gBACf,aAAa,KAAK,MAAL,CAAY,UAAZ;gBACb,gBAAgB,KAAK,MAAL,CAAY,aAAZ;gBAChB,cAAc,KAAK,MAAL,CAAY,WAAZ;gBACd,aAAa,KAAK,YAAL,EAAb;gBACA,aAAa,EAAb;gBACA,gBAAgB,EAAhB;gBACA,UAAU,EAAV,CARD;;AAUH,gBAAI,KAAK,WAAL,EAAkB;AAClB,+BAAe,SAAS,YAAT,CADG;AAElB,6BAAa,SAAS,UAAT,CAFK;AAGlB,gCAAgB,SAAS,aAAT,CAHE;AAIlB,8BAAc,SAAS,WAAT,CAJI;AAKlB,6BAAa,EAAb,CALkB;aAAtB,MAMO,IAAI,KAAK,MAAL,CAAY,QAAZ,CAAJ,EAA2B;AAC9B,oBAAI,KAAK,MAAL,CAAY,MAAZ,EAAoB;AACpB,kCAAc,aAAa,KAAK,MAAL,CAAY,MAAZ,CADP;iBAAxB;AAGA,qBAAK,WAAL,GAAmB,IAAnB,CAJ8B;aAA3B;;AAOP,6BAAiB,KAAK,OAAL,CAAa,IAAb,EAAmB,IAAnB,CAvBd;;AAyBH,gBAAI,KAAK,WAAL,IAAoB,IAApB,EAA0B;AAC1B,qBAAK,WAAL,GAAmB,IAAnB,CAD0B;AAE1B,oBAAI,KAAK,MAAL,CAAY,MAAZ,EAAoB,UAAU,IAAV,CAAxB;aAFJ;;AAKA,mBAAQ,aACA,YADA,GAEA,KAAK,IAAL,GACA,KAAK,WAAL,CAAiB,IAAjB,CAHA,GAIA,UAJA,GAKA,UALA,GAMA,aANA,GAOA,OAPA,GAQA,KAAK,YAAL,EARA,GASA,aATA,GAUA,KAAK,IAAL,GACA,WAXA,CA9BL;SAlBP;CAb0B;;;;;;;;;AAqF9B,OAAO,SAAP,CAAiB,WAAjB,GAA+B,UAAS,IAAT,EAAe;;AAE1C,QAAI,QAAQ,EAAR,CAFsC;;AAI1C,SAAK,QAAL,CAAc,UAAS,IAAT,EAAe;;AAEzB,iBAAY,MACA,KAAK,IAAL,GACA,KAAK,MAAL,CAAY,SAAZ,GACA,OAAO,KAAK,KAAL,CAAP,CAAmB,OAAnB,CAA2B,KAAK,MAAL,CAAY,cAAZ,EAA4B,KAAK,MAAL,CAAY,YAAZ,CAHvD,GAIA,KAAK,MAAL,CAAY,OAAZ,CANa;KAAf,EAQX,IARH,EAJ0C;;AAc1C,WAAO,KAAP,CAd0C;CAAf;;;;;;;;;AAyB/B,OAAO,SAAP,CAAiB,UAAjB,GAA8B,UAAS,IAAT,EAAe;;AAEzC,WAAQ,KAAK,YAAL,KACA,KAAK,MAAL,CAAY,SAAZ,GACA,KAAK,OAAL,CAAa,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAAK,MAAL,CAAY,YAAZ,CAFtC,IAGC,KAAK,WAAL,GAAmB,EAAnB,GAAwB,KAAK,MAAL,CAAY,OAAZ,CAHzB,CAFiC;CAAf","file":"js2svg-compiled.js","sourcesContent":["'use strict';\n\nvar EXTEND = require('whet.extend'),\n    textElem = require('../../plugins/_collections.js').elemsGroups.textContent.concat('title');\n\nvar defaults = {\n    doctypeStart: '<!DOCTYPE',\n    doctypeEnd: '>',\n    procInstStart: '<?',\n    procInstEnd: '?>',\n    tagOpenStart: '<',\n    tagOpenEnd: '>',\n    tagCloseStart: '</',\n    tagCloseEnd: '>',\n    tagShortStart: '<',\n    tagShortEnd: '/>',\n    attrStart: '=\"',\n    attrEnd: '\"',\n    commentStart: '<!--',\n    commentEnd: '-->',\n    cdataStart: '<![CDATA[',\n    cdataEnd: ']]>',\n    textStart: '',\n    textEnd: '',\n    indent: 4,\n    regEntities: /[&'\"<>]/g,\n    regValEntities: /[&\"<>]/g,\n    encodeEntity: encodeEntity,\n    pretty: false,\n    useShortTags: true\n};\n\nvar entities = {\n      '&': '&amp;',\n      '\\'': '&apos;',\n      '\"': '&quot;',\n      '>': '&gt;',\n      '<': '&lt;',\n    };\n\n/**\n * Convert SVG-as-JS object to SVG (XML) string.\n *\n * @param {Object} data input data\n * @param {Object} config config\n *\n * @return {Object} output data\n */\nmodule.exports = function(data, config) {\n\n    return new JS2SVG(config).convert(data);\n\n};\n\nfunction JS2SVG(config) {\n\n    if (config) {\n        this.config = EXTEND(true, {}, defaults, config);\n    } else {\n        this.config = defaults;\n    }\n\n    var indent = this.config.indent;\n    if (typeof indent == 'number' && !isNaN(indent)) {\n        this.config.indent = '';\n        for (var i = indent; i-- > 0;) this.config.indent += ' ';\n    } else if (typeof indent != 'string') {\n        this.config.indent = '    ';\n    }\n\n    if (this.config.pretty) {\n        this.config.doctypeEnd += '\\n';\n        this.config.procInstEnd += '\\n';\n        this.config.commentEnd += '\\n';\n        this.config.cdataEnd += '\\n';\n        this.config.tagShortEnd += '\\n';\n        this.config.tagOpenEnd += '\\n';\n        this.config.tagCloseEnd += '\\n';\n        this.config.textEnd += '\\n';\n    }\n\n    this.indentLevel = 0;\n    this.textContext = null;\n\n}\n\nfunction encodeEntity(char) {\n    return entities[char];\n}\n\n/**\n * Start conversion.\n *\n * @param {Object} data input data\n *\n * @return {String}\n */\nJS2SVG.prototype.convert = function(data) {\n\n    var svg = '';\n\n    if (data.content) {\n\n        this.indentLevel++;\n\n        data.content.forEach(function(item) {\n\n            if (item.elem) {\n               svg += this.createElem(item);\n            } else if (item.text) {\n               svg += this.createText(item.text);\n            } else if (item.doctype) {\n                svg += this.createDoctype(item.doctype);\n            } else if (item.processinginstruction) {\n                svg += this.createProcInst(item.processinginstruction);\n            } else if (item.comment) {\n                svg += this.createComment(item.comment);\n            } else if (item.cdata) {\n                svg += this.createCDATA(item.cdata);\n            }\n\n        }, this);\n\n    }\n\n    this.indentLevel--;\n\n    return {\n        data: svg,\n        info: {\n            width: this.width,\n            height: this.height\n        }\n    };\n\n};\n\n/**\n * Create indent string in accordance with the current node level.\n *\n * @return {String}\n */\nJS2SVG.prototype.createIndent = function() {\n\n    var indent = '';\n\n    if (this.config.pretty && !this.textContext) {\n        for (var i = 1; i < this.indentLevel; i++) {\n            indent += this.config.indent;\n        }\n    }\n\n    return indent;\n\n};\n\n/**\n * Create doctype tag.\n *\n * @param {String} doctype doctype body string\n *\n * @return {String}\n */\nJS2SVG.prototype.createDoctype = function(doctype) {\n\n    return  this.config.doctypeStart +\n            doctype +\n            this.config.doctypeEnd;\n\n};\n\n/**\n * Create XML Processing Instruction tag.\n *\n * @param {Object} instruction instruction object\n *\n * @return {String}\n */\nJS2SVG.prototype.createProcInst = function(instruction) {\n\n    return  this.config.procInstStart +\n            instruction.name +\n            ' ' +\n            instruction.body +\n            this.config.procInstEnd;\n\n};\n\n/**\n * Create comment tag.\n *\n * @param {String} comment comment body\n *\n * @return {String}\n */\nJS2SVG.prototype.createComment = function(comment) {\n\n    return  this.config.commentStart +\n            comment +\n            this.config.commentEnd;\n\n};\n\n/**\n * Create CDATA section.\n *\n * @param {String} cdata CDATA body\n *\n * @return {String}\n */\nJS2SVG.prototype.createCDATA = function(cdata) {\n\n    return  this.createIndent() +\n            this.config.cdataStart +\n            cdata +\n            this.config.cdataEnd;\n\n};\n\n/**\n * Create element tag.\n *\n * @param {Object} data element object\n *\n * @return {String}\n */\nJS2SVG.prototype.createElem = function(data) {\n\n    // beautiful injection for obtaining SVG information :)\n    if (\n        data.isElem('svg') &&\n        data.hasAttr('width') &&\n        data.hasAttr('height')\n    ) {\n        this.width = data.attr('width').value;\n        this.height = data.attr('height').value;\n    }\n\n    // empty element and short tag\n    if (data.isEmpty()) {\n        if (this.config.useShortTags) {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagShortEnd;\n        } else {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagOpenEnd +\n                   this.config.tagCloseStart +\n                   data.elem +\n                   this.config.tagCloseEnd;\n        }\n    // non-empty element\n    } else {\n        var tagOpenStart = this.config.tagOpenStart,\n            tagOpenEnd = this.config.tagOpenEnd,\n            tagCloseStart = this.config.tagCloseStart,\n            tagCloseEnd = this.config.tagCloseEnd,\n            openIndent = this.createIndent(),\n            textIndent = '',\n            processedData = '',\n            dataEnd = '';\n\n        if (this.textContext) {\n            tagOpenStart = defaults.tagOpenStart;\n            tagOpenEnd = defaults.tagOpenEnd;\n            tagCloseStart = defaults.tagCloseStart;\n            tagCloseEnd = defaults.tagCloseEnd;\n            openIndent = '';\n        } else if (data.isElem(textElem)) {\n            if (this.config.pretty) {\n                textIndent += openIndent + this.config.indent;\n            }\n            this.textContext = data;\n        }\n\n        processedData += this.convert(data).data;\n\n        if (this.textContext == data) {\n            this.textContext = null;\n            if (this.config.pretty) dataEnd = '\\n';\n        }\n\n        return  openIndent +\n                tagOpenStart +\n                data.elem +\n                this.createAttrs(data) +\n                tagOpenEnd +\n                textIndent +\n                processedData +\n                dataEnd +\n                this.createIndent() +\n                tagCloseStart +\n                data.elem +\n                tagCloseEnd;\n\n    }\n\n};\n\n/**\n * Create element attributes.\n *\n * @param {Object} elem attributes object\n *\n * @return {String}\n */\nJS2SVG.prototype.createAttrs = function(elem) {\n\n    var attrs = '';\n\n    elem.eachAttr(function(attr) {\n\n        attrs +=    ' ' +\n                    attr.name +\n                    this.config.attrStart +\n                    String(attr.value).replace(this.config.regValEntities, this.config.encodeEntity) +\n                    this.config.attrEnd;\n\n    }, this);\n\n    return attrs;\n\n};\n\n/**\n * Create text node.\n *\n * @param {String} text text\n *\n * @return {String}\n */\nJS2SVG.prototype.createText = function(text) {\n\n    return  this.createIndent() +\n            this.config.textStart +\n            text.replace(this.config.regEntities, this.config.encodeEntity) +\n            (this.textContext ? '' : this.config.textEnd);\n\n};\n"]}