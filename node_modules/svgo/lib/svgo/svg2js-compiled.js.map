{"version":3,"sources":["svg2js.js"],"names":[],"mappings":"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","file":"svg2js-compiled.js","sourcesContent":["'use strict';\n\nvar SAX = require('sax'),\n    JSAPI = require('./jsAPI.js'),\n    entityDeclaration = /<!ENTITY\\s+(\\S+)\\s+(?:'([^\\']+)'|\"([^\\\"]+)\")\\s*>/g;\n\nvar config = {\n    strict: true,\n    trim: false,\n    normalize: true,\n    lowercase: true,\n    xmlns: true,\n    position: true\n};\n\n/**\n * Convert SVG (XML) string to SVG-as-JS object.\n *\n * @param {String} data input data\n * @param {Function} callback\n */\nmodule.exports = function(data, callback) {\n\n    var sax = SAX.parser(config.strict, config),\n        root = new JSAPI({ elem: '#document' }),\n        current = root,\n        stack = [root],\n        textContext = null,\n        parsingError = false;\n\n    function pushToContent(content) {\n\n        content = new JSAPI(content, current);\n\n        (current.content = current.content || []).push(content);\n\n        return content;\n\n    }\n\n    sax.ondoctype = function(doctype) {\n\n        pushToContent({\n            doctype: doctype\n        });\n\n        var subsetStart = doctype.indexOf('['),\n            entityMatch;\n\n        if (subsetStart >= 0) {\n            entityDeclaration.lastIndex = subsetStart;\n\n            while ((entityMatch = entityDeclaration.exec(data)) != null) {\n                sax.ENTITIES[entityMatch[1]] = entityMatch[2] || entityMatch[3];\n            }\n        }\n    };\n\n    sax.onprocessinginstruction = function(data) {\n\n        pushToContent({\n            processinginstruction: data\n        });\n\n    };\n\n    sax.oncomment = function(comment) {\n\n        pushToContent({\n            comment: comment.trim()\n        });\n\n    };\n\n    sax.oncdata = function(cdata) {\n\n        pushToContent({\n            cdata: cdata\n        });\n\n    };\n\n    sax.onopentag = function(data) {\n\n        var elem = {\n            elem: data.name,\n            prefix: data.prefix,\n            local: data.local\n        };\n\n        if (Object.keys(data.attributes).length) {\n            elem.attrs = {};\n\n            for (var name in data.attributes) {\n                elem.attrs[name] = {\n                    name: name,\n                    value: data.attributes[name].value,\n                    prefix: data.attributes[name].prefix,\n                    local: data.attributes[name].local\n                };\n            }\n        }\n\n        elem = pushToContent(elem);\n        current = elem;\n\n        // Save info about <text> tag to prevent trimming of meaningful whitespace\n        if (data.name == 'text' && !data.prefix) {\n            textContext = current;\n        }\n\n        stack.push(elem);\n\n    };\n\n    sax.ontext = function(text) {\n\n        if (/\\S/.test(text) || textContext) {\n\n            if (!textContext)\n                text = text.trim();\n\n            pushToContent({\n                text: text\n            });\n\n        }\n\n    };\n\n    sax.onclosetag = function() {\n\n        var last = stack.pop();\n\n        // Trim text inside <text> tag.\n        if (last == textContext) {\n            trim(textContext);\n            textContext = null;\n        }\n        current = stack[stack.length - 1];\n\n    };\n\n    sax.onerror = function(e) {\n\n        e.message = 'Error in parsing SVG: ' + e.message;\n        if (e.message.indexOf('Unexpected end') < 0) {\n            throw e;\n        }\n\n    };\n\n    sax.onend = function() {\n\n        if (!this.error) {\n            callback(root);\n        } else {\n            callback({ error: this.error.message });\n        }\n\n    };\n\n    try {\n        sax.write(data);\n    } catch (e) {\n        callback({ error: e.message });\n        parsingError = true;\n    }\n    if (!parsingError) sax.close();\n\n    function trim(elem) {\n        if (!elem.content) return elem;\n\n        var start = elem.content[0],\n            end = elem.content[elem.content.length - 1];\n\n        while (start && start.content && !start.text) start = start.content[0];\n        if (start && start.text) start.text = start.text.replace(/^\\s+/, '');\n\n        while (end && end.content && !end.text) end = end.content[end.content.length - 1];\n        if (end && end.text) end.text = end.text.replace(/\\s+$/, '');\n\n        return elem;\n\n    }\n\n};\n"]}