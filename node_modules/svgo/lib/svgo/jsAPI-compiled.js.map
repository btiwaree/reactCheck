{"version":3,"sources":["jsAPI.js"],"names":[],"mappings":"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","file":"jsAPI-compiled.js","sourcesContent":["'use strict';\n\nvar EXTEND = require('whet.extend');\n\nvar JSAPI = module.exports = function(data, parentNode) {\n    EXTEND(this, data);\n    if (parentNode) {\n        Object.defineProperty(this, 'parentNode', {\n            writable: true,\n            value: parentNode\n        });\n    }\n};\n\n/**\n * Perform a deep clone of this node.\n *\n * @return {Object} element\n */\nJSAPI.prototype.clone = function() {\n    var node = this;\n    var nodeData = {};\n\n    Object.keys(node).forEach(function(key) {\n        if (key !== 'content') {\n            nodeData[key] = node[key];\n        }\n    });\n\n    // Deep-clone node data\n    // This is still faster than using EXTEND(trueâ€¦)\n    nodeData = JSON.parse(JSON.stringify(nodeData));\n\n    // parentNode gets set to a proper object by the parent clone,\n    // but it needs to be true/false now to do the right thing\n    // in the constructor.\n    var clonedNode = new JSAPI(nodeData, !!node.parentNode);\n\n    if (node.content) {\n        clonedNode.content = node.content.map(function(childNode) {\n            var clonedChild = childNode.clone();\n            clonedChild.parentNode = clonedNode;\n            return clonedChild;\n        });\n    }\n\n    return clonedNode;\n};\n\n/**\n * Determine if item is an element\n * (any, with a specific name or in a names array).\n *\n * @param {String|Array} [param] element name or names arrays\n * @return {Boolean}\n */\nJSAPI.prototype.isElem = function(param) {\n\n    if (!param) return !!this.elem;\n\n    if (Array.isArray(param)) return !!this.elem && (param.indexOf(this.elem) > -1);\n\n    return !!this.elem && this.elem === param;\n\n};\n\n/**\n * Renames an element\n *\n * @param {String} name new element name\n * @return {Object} element\n */\nJSAPI.prototype.renameElem = function(name) {\n\n    if (name && typeof name === 'string')\n        this.elem = this.local = name;\n\n    return this;\n\n};\n\n/**\n * Determine if element is empty.\n *\n * @return {Boolean}\n */\n JSAPI.prototype.isEmpty = function() {\n\n    return !this.content || !this.content.length;\n\n};\n\n/**\n * Changes content by removing elements and/or adding new elements.\n *\n * @param {Number} start Index at which to start changing the content.\n * @param {Number} n Number of elements to remove.\n * @param {Array|Object} [insertion] Elements to add to the content.\n * @return {Array} Removed elements.\n */\n JSAPI.prototype.spliceContent = function(start, n, insertion) {\n\n    if (arguments.length < 2) return [];\n\n    if (!Array.isArray(insertion))\n        insertion = Array.apply(null, arguments).slice(2);\n\n    insertion.forEach(function(inner) { inner.parentNode = this }, this);\n\n    return this.content.splice.apply(this.content, [start, n].concat(insertion));\n\n\n};\n\n/**\n * Determine if element has an attribute\n * (any, or by name or by name + value).\n *\n * @param {String} [name] attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Boolean}\n */\n JSAPI.prototype.hasAttr = function(name, val) {\n\n    if (!this.attrs || !Object.keys(this.attrs).length) return false;\n\n    if (!arguments.length) return !!this.attrs;\n\n    if (val !== undefined) return !!this.attrs[name] && this.attrs[name].value === val.toString();\n\n    return !!this.attrs[name];\n\n};\n\n/**\n * Determine if element has an attribute by local name\n * (any, or by name or by name + value).\n *\n * @param {String} [localName] local attribute name\n * @param {Number|String|RegExp|Function} [val] attribute value (will be toString()'ed or executed, otherwise ignored)\n * @return {Boolean}\n */\n JSAPI.prototype.hasAttrLocal = function(localName, val) {\n\n    if (!this.attrs || !Object.keys(this.attrs).length) return false;\n\n    if (!arguments.length) return !!this.attrs;\n\n    var callback;\n\n    switch (val != null && val.constructor && val.constructor.name) {\n        case 'Number':   // same as String\n        case 'String':   callback = stringValueTest; break;\n        case 'RegExp':   callback = regexpValueTest; break;\n        case 'Function': callback = funcValueTest; break;\n        default:         callback = nameTest;\n    }\n    return this.someAttr(callback);\n\n    function nameTest(attr) {\n        return attr.local === localName;\n    }\n\n    function stringValueTest(attr) {\n        return attr.local === localName && val == attr.value;\n    }\n\n    function regexpValueTest(attr) {\n        return attr.local === localName && val.test(attr.value);\n    }\n\n    function funcValueTest(attr) {\n        return attr.local === localName && val(attr.value);\n    }\n\n};\n\n/**\n * Get a specific attribute from an element\n * (by name or name + value).\n *\n * @param {String} name attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Object|Undefined}\n */\n JSAPI.prototype.attr = function(name, val) {\n\n    if (!this.hasAttr() || !arguments.length) return undefined;\n\n    if (val !== undefined) return this.hasAttr(name, val) ? this.attrs[name] : undefined;\n\n    return this.attrs[name];\n\n};\n\n/**\n * Get computed attribute value from an element\n *\n * @param {String} name attribute name\n * @return {Object|Undefined}\n */\n JSAPI.prototype.computedAttr = function(name, val) {\n    /* jshint eqnull: true */\n    if (!arguments.length) return;\n\n    for (var elem = this; elem && (!elem.hasAttr(name) || !elem.attr(name).value); elem = elem.parentNode);\n\n    if (val != null) {\n        return elem ? elem.hasAttr(name, val) : false;\n    } else if (elem && elem.hasAttr(name)) {\n        return elem.attrs[name].value;\n    }\n\n};\n\n/**\n * Remove a specific attribute.\n *\n * @param {String|Array} name attribute name\n * @param {String} [val] attribute value\n * @return {Boolean}\n */\n JSAPI.prototype.removeAttr = function(name, val, recursive) {\n\n    if (!arguments.length) return false;\n\n    if (Array.isArray(name)) name.forEach(this.removeAttr, this);\n\n    if (!this.hasAttr(name)) return false;\n\n    if (!recursive && val && this.attrs[name].value !== val) return false;\n\n    delete this.attrs[name];\n\n    if (!Object.keys(this.attrs).length) delete this.attrs;\n\n    return true;\n\n};\n\n/**\n * Add attribute.\n *\n * @param {Object} [attr={}] attribute object\n * @return {Object|Boolean} created attribute or false if no attr was passed in\n */\n JSAPI.prototype.addAttr = function(attr) {\n    attr = attr || {};\n\n    if (attr.name === undefined ||\n        attr.value === undefined ||\n        attr.prefix === undefined ||\n        attr.local === undefined\n    ) return false;\n\n    this.attrs = this.attrs || {};\n    this.attrs[attr.name] = attr;\n\n    return this.attrs[attr.name];\n\n};\n\n/**\n * Iterates over all attributes.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\n JSAPI.prototype.eachAttr = function(callback, context) {\n\n    if (!this.hasAttr()) return false;\n\n    for (var name in this.attrs) {\n        callback.call(context, this.attrs[name]);\n    }\n\n    return true;\n\n};\n\n/**\n * Tests whether some attribute passes the test.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\n JSAPI.prototype.someAttr = function(callback, context) {\n\n    if (!this.hasAttr()) return false;\n\n    for (var name in this.attrs) {\n        if (callback.call(context, this.attrs[name])) return true;\n    }\n\n    return false;\n\n};\n"]}