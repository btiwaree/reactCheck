{"version":3,"sources":["EventListener.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,IAAI,gBAAgB;;;;;;;;;AASlB,UAAQ,SAAS,MAAT,CAAgB,MAAhB,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C;AACnD,QAAI,OAAO,gBAAP,EAAyB;AAC3B,aAAO,gBAAP,CAAwB,SAAxB,EAAmC,QAAnC,EAA6C,KAA7C,EAD2B;AAE3B,aAAO;AACL,gBAAQ,SAAS,MAAT,GAAkB;AACxB,iBAAO,mBAAP,CAA2B,SAA3B,EAAsC,QAAtC,EAAgD,KAAhD,EADwB;SAAlB;OADV,CAF2B;KAA7B,MAOO,IAAI,OAAO,WAAP,EAAoB;AAC7B,aAAO,WAAP,CAAmB,OAAO,SAAP,EAAkB,QAArC,EAD6B;AAE7B,aAAO;AACL,gBAAQ,SAAS,MAAT,GAAkB;AACxB,iBAAO,WAAP,CAAmB,OAAO,SAAP,EAAkB,QAArC,EADwB;SAAlB;OADV,CAF6B;KAAxB;GARD;CATN;;AA4BJ,QAAQ,SAAR,IAAqB,aAArB;AACA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"EventListener-compiled.js","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * This file contains a modified version of:\n * https://github.com/facebook/react/blob/v0.12.0/src/vendor/stubs/EventListener.js\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * TODO: remove in favour of solution provided by:\n *  https://github.com/facebook/react/issues/285\n */\n\n/**\n * Does not take into account specific nature of platform.\n */\n'use strict';\n\nexports.__esModule = true;\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  }\n};\n\nexports['default'] = EventListener;\nmodule.exports = exports['default'];"]}