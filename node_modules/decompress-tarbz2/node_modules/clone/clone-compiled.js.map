{"version":3,"sources":["clone.js"],"names":[],"mappings":"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","file":"clone-compiled.js","sourcesContent":["'use strict';\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n// shim for Node's 'util' package\n// DO NOT REMOVE THIS! It is required for compatibility with EnderJS (http://enderjs.com/).\nvar util = {\n  isArray: function (ar) {\n    return Array.isArray(ar) || (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n  },\n  isDate: function (d) {\n    return typeof d === 'object' && objectToString(d) === '[object Date]';\n  },\n  isRegExp: function (re) {\n    return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n  },\n  getRegExpFlags: function (re) {\n    var flags = '';\n    re.global && (flags += 'g');\n    re.ignoreCase && (flags += 'i');\n    re.multiline && (flags += 'm');\n    return flags;\n  }\n};\n\n\nif (typeof module === 'object')\n  module.exports = clone;\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\n\nfunction clone(parent, circular, depth, prototype) {\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (util.isArray(parent)) {\n      child = [];\n    } else if (util.isRegExp(parent)) {\n      child = new RegExp(parent.source, util.getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (util.isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n      \n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n"]}