{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;AAUA,IAAI,kBAAkB,qBAAlB;;;AAGJ,IAAI,YAAY,KAAK,GAAL;;;;;;;;;;;;;;;;;;;;;;;;AAwBhB,SAAS,SAAT,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC;AAC9B,MAAI,OAAO,IAAP,IAAe,UAAf,EAA2B;AAC7B,UAAM,IAAI,SAAJ,CAAc,eAAd,CAAN,CAD6B;GAA/B;AAGA,UAAQ,UAAU,UAAU,SAAV,GAAuB,KAAK,MAAL,GAAc,CAAd,GAAoB,CAAC,KAAD,IAAU,CAAV,EAAc,CAAnE,CAAR,CAJ8B;AAK9B,SAAO,YAAW;AAChB,QAAI,OAAO,SAAP;QACA,QAAQ,CAAC,CAAD;QACR,SAAS,UAAU,KAAK,MAAL,GAAc,KAAd,EAAqB,CAA/B,CAAT;QACA,OAAO,MAAM,MAAN,CAAP,CAJY;;AAMhB,WAAO,EAAE,KAAF,GAAU,MAAV,EAAkB;AACvB,WAAK,KAAL,IAAc,KAAK,QAAQ,KAAR,CAAnB,CADuB;KAAzB;AAGA,YAAQ,KAAR;AACE,WAAK,CAAL;AAAQ,eAAO,KAAK,IAAL,CAAU,IAAV,EAAgB,IAAhB,CAAP,CAAR;AADF,WAEO,CAAL;AAAQ,eAAO,KAAK,IAAL,CAAU,IAAV,EAAgB,KAAK,CAAL,CAAhB,EAAyB,IAAzB,CAAP,CAAR;AAFF,WAGO,CAAL;AAAQ,eAAO,KAAK,IAAL,CAAU,IAAV,EAAgB,KAAK,CAAL,CAAhB,EAAyB,KAAK,CAAL,CAAzB,EAAkC,IAAlC,CAAP,CAAR;AAHF,KATgB;AAchB,QAAI,YAAY,MAAM,QAAQ,CAAR,CAAlB,CAdY;AAehB,YAAQ,CAAC,CAAD,CAfQ;AAgBhB,WAAO,EAAE,KAAF,GAAU,KAAV,EAAiB;AACtB,gBAAU,KAAV,IAAmB,KAAK,KAAL,CAAnB,CADsB;KAAxB;AAGA,cAAU,KAAV,IAAmB,IAAnB,CAnBgB;AAoBhB,WAAO,KAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB,CAAP,CApBgB;GAAX,CALuB;CAAhC;;AA6BA,OAAO,OAAP,GAAiB,SAAjB","file":"index-compiled.js","sourcesContent":["/**\n * lodash 3.6.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n"]}