{"version":3,"sources":["readable_test.js"],"names":[],"mappings":"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","file":"readable_test-compiled.js","sourcesContent":["\nvar Readable = require('../lib/lazystream').Readable;\nvar DummyReadable = require('./helper').DummyReadable;\n\nexports.readable = {\n  dummy: function(test) {\n    var expected = [ 'line1\\n', 'line2\\n' ];\n    var actual = [];\n\n    test.expect(1);\n\n    new DummyReadable([].concat(expected))\n      .on('data', function(chunk) {\n        actual.push(chunk.toString());\n      })\n      .on('end', function() {\n        test.equal(actual.join(''), expected.join(''), 'DummyReadable should produce the data it was created with');\n        test.done();\n      });\n  },\n  options: function(test) {\n    test.expect(3);\n\n    var readable = new Readable(function(options) {\n       test.ok(this instanceof Readable, \"Readable should bind itself to callback's this\");\n       test.equal(options.encoding, \"utf-8\", \"Readable should make options accessible to callback\");\n       this.ok = true;\n       return new DummyReadable([\"test\"]);\n    }, {encoding: \"utf-8\"});\n\n    readable.read(4);\n\n    test.ok(readable.ok);\n\n    test.done();\n  },\n  streams2: function(test) {\n    var expected = [ 'line1\\n', 'line2\\n' ];\n    var actual = [];\n    var instantiated = false;\n\n    test.expect(2);\n\n    var readable = new Readable(function() {\n      instantiated = true;\n      return new DummyReadable([].concat(expected));\n    });\n\n    test.equal(instantiated, false, 'DummyReadable should only be instantiated when it is needed');\n\n    readable.on('readable', function() {\n      var chunk;\n      while ((chunk = readable.read())) {\n        actual.push(chunk.toString());\n      }\n    });\n    readable.on('end', function() {\n      test.equal(actual.join(''), expected.join(''), 'Readable should not change the data of the underlying stream');\n      test.done();\n    });\n\n    readable.read(0);\n  },\n  resume: function(test) {\n    var expected = [ 'line1\\n', 'line2\\n' ];\n    var actual = [];\n    var instantiated = false;\n\n    test.expect(2);\n\n    var readable = new Readable(function() {\n      instantiated = true;\n      return new DummyReadable([].concat(expected));\n    });\n\n    readable.pause();\n\n    readable.on('data', function(chunk) {\n      actual.push(chunk.toString());\n    });\n    readable.on('end', function() {\n      test.equal(actual.join(''), expected.join(''), 'Readable should not change the data of the underlying stream');\n      test.done();\n    });\n\n    test.equal(instantiated, false, 'DummyReadable should only be instantiated when it is needed');\n\n    readable.resume();\n  }\n};\n"]}