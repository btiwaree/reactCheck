{"version":3,"sources":["index.js"],"names":[],"mappings":";;;AAGA,IAAI,gBAAgB,QAAQ,iBAAR,CAAhB;AACJ,IAAI,UAAU,QAAQ,yBAAR,CAAV;AACJ,IAAI,UAAU,QAAQ,SAAR,CAAV;;AAEJ,IAAI,gBAAgB,oBAAhB;;;;;AAKJ,OAAO,OAAP,GAAiB,QAAQ,MAAR,CAAe,cAAf,EAA+B,UAAS,OAAT,EAAkB;AAChE,YAAU,WAAW,EAAX,CADsD;AAEhE,MAAI,YAAY,QAAQ,SAAR,CAFgD;AAGhE,MAAI,WAAW,QAAQ,QAAR,CAHiD;AAIhE,MAAI,wBAAwB,QAAQ,qBAAR,CAJoC;AAKhE,MAAI,eAAe,QAAQ,YAAR,CAL6C;;AAOhE,SAAO,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAC7B,aAAS,cAAT,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC;AACtC,UAAI,QAAQ,KAAK,QAAL,CAAR,CADkC;;AAGtC,UAAI,CAAC,KAAD,IAAU,CAAC,cAAc,IAAd,CAAmB,KAAnB,CAAD,EAA4B;AACxC,eADwC;OAA1C;;AAIA,cAAQ,GAAR,CAAY,SAAS,gBAAT,GAA4B;AACtC,YAAI,eAAe,cAAc,KAAd,EAAqB,SAArB,CAAf,CADkC;;AAGtC,YAAI,yBAAyB,cAAc,IAAd,CAAmB,YAAnB,CAAzB,EAA2D;AAC7D,iBAAO,IAAP,CAAY,kCAAkC,KAAlC,EACV,EAAC,QAAQ,cAAR,EAAwB,MAAM,IAAN,EAD3B,EAD6D;SAA/D;;AAKA,YAAI,CAAC,QAAD,EAAW;AACb,eAAK,QAAL,IAAiB,YAAjB,CADa;AAEb,iBAFa;SAAf;;AAKA,YAAI,gBAAgB,KAAhB,EAAuB;AACzB,cAAI,QAAQ,KAAK,KAAL,EAAR,CADqB;AAEzB,gBAAM,QAAN,IAAkB,YAAlB,CAFyB;AAGzB,eAAK,MAAL,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,KAA/B,EAHyB;SAA3B;OAbU,EAkBT,KAAK,MAAL,CAlBH,CAPsC;KAAxC;;AA4BA,UAAM,IAAN,CAAW,UAAS,IAAT,EAAe;AACxB,UAAI,gBAAgB,KAAK,IAAL,KAAc,QAAd,EAAwB;AAC1C,eAAO,eAAe,IAAf,EAAqB,QAArB,CAAP,CAD0C;OAA5C,MAGK,IAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AAC7B,eAAO,eAAe,IAAf,EAAqB,OAArB,CAAP,CAD6B;OAA1B;KAJI,CAAX,CA7B6B;GAAxB,CAPyD;CAAlB,CAAhD","file":"index-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\nvar reduceCSSCalc = require(\"reduce-css-calc\")\nvar helpers = require(\"postcss-message-helpers\")\nvar postcss = require(\"postcss\")\n\nvar CONTAINS_CALC = /\\bcalc\\([\\s\\S]*?\\)/\n\n/**\n * PostCSS plugin to reduce calc() function calls.\n */\nmodule.exports = postcss.plugin(\"postcss-calc\", function(options) {\n  options = options || {}\n  var precision = options.precision\n  var preserve = options.preserve\n  var warnWhenCannotResolve = options.warnWhenCannotResolve\n  var mediaQueries = options.mediaQueries\n\n  return function(style, result) {\n    function transformValue(node, property) {\n      var value = node[property]\n\n      if (!value || !CONTAINS_CALC.test(value)) {\n        return\n      }\n\n      helpers.try(function transformCSSCalc() {\n        var reducedValue = reduceCSSCalc(value, precision)\n\n        if (warnWhenCannotResolve && CONTAINS_CALC.test(reducedValue)) {\n          result.warn(\"Could not reduce expression: \" + value,\n            {plugin: \"postcss-calc\", node: node})\n        }\n\n        if (!preserve) {\n          node[property] = reducedValue\n          return\n        }\n\n        if (reducedValue != value) {\n          var clone = node.clone()\n          clone[property] = reducedValue\n          node.parent.insertBefore(node, clone)\n        }\n      }, node.source)\n    }\n\n    style.walk(function(rule) {\n      if (mediaQueries && rule.type === \"atrule\") {\n        return transformValue(rule, \"params\")\n      }\n      else if (rule.type === \"decl\") {\n        return transformValue(rule, \"value\")\n      }\n    })\n  }\n})\n"]}