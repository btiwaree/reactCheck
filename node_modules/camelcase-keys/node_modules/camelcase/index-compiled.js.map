{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,SAAS,iBAAT,CAA2B,GAA3B,EAAgC;AAC/B,KAAI,kBAAkB,KAAlB,CAD2B;;AAG/B,MAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,IAAI,MAAJ,EAAY,GAAhC,EAAqC;AACpC,MAAI,IAAI,IAAI,MAAJ,CAAW,CAAX,CAAJ,CADgC;;AAGpC,MAAI,mBAAmB,WAAa,IAAb,CAAkB,CAAlB,CAAnB,IAA2C,EAAE,WAAF,OAAoB,CAApB,EAAuB;AACrE,SAAM,IAAI,MAAJ,CAAW,CAAX,EAAc,CAAd,IAAmB,GAAnB,GAAyB,IAAI,MAAJ,CAAW,CAAX,CAAzB,CAD+D;AAErE,qBAAkB,KAAlB,CAFqE;AAGrE,OAHqE;GAAtE,MAIO;AACN,qBAAmB,EAAE,WAAF,OAAoB,CAApB,CADb;GAJP;EAHD;;AAYA,QAAO,GAAP,CAf+B;CAAhC;;AAkBA,OAAO,OAAP,GAAiB,YAAY;AAC5B,KAAI,MAAM,GAAG,GAAH,CAAO,IAAP,CAAY,SAAZ,EAAuB,UAAU,GAAV,EAAe;AAC/C,SAAO,IAAI,IAAJ,EAAP,CAD+C;EAAf,CAAvB,CAEP,MAFO,CAEA,UAAU,GAAV,EAAe;AACxB,SAAO,IAAI,MAAJ,CADiB;EAAf,CAFA,CAIP,IAJO,CAIF,GAJE,CAAN,CADwB;;AAO5B,KAAI,CAAC,IAAI,MAAJ,EAAY;AAChB,SAAO,EAAP,CADgB;EAAjB;;AAIA,KAAI,IAAI,MAAJ,KAAe,CAAf,EAAkB;AACrB,SAAO,GAAP,CADqB;EAAtB;;AAIA,KAAI,CAAC,WAAa,IAAb,CAAkB,GAAlB,CAAD,EAAyB;AAC5B,MAAI,QAAQ,IAAI,WAAJ,EAAR,EAA2B;AAC9B,UAAO,IAAI,WAAJ,EAAP,CAD8B;GAA/B;;AAIA,MAAI,IAAI,CAAJ,MAAW,IAAI,CAAJ,EAAO,WAAP,EAAX,EAAiC;AACpC,UAAO,IAAI,CAAJ,EAAO,WAAP,KAAuB,IAAI,KAAJ,CAAU,CAAV,CAAvB,CAD6B;GAArC;;AAIA,SAAO,GAAP,CAT4B;EAA7B;;AAYA,OAAM,kBAAkB,GAAlB,CAAN,CA3B4B;;AA6B5B,QAAO,IACN,OADM,CACE,WADF,EACe,EADf,EAEN,WAFM,GAGN,OAHM,CAGE,iBAHF,EAGqB,UAAU,CAAV,EAAa,EAAb,EAAiB;AAC5C,SAAO,GAAG,WAAH,EAAP,CAD4C;EAAjB,CAH5B,CA7B4B;CAAZ","file":"index-compiled.js","sourcesContent":["'use strict';\n\nfunction preserveCamelCase(str) {\n\tvar isLastCharLower = false;\n\n\tfor (var i = 0; i < str.length; i++) {\n\t\tvar c = str.charAt(i);\n\n\t\tif (isLastCharLower && (/[a-zA-Z]/).test(c) && c.toUpperCase() === c) {\n\t\t\tstr = str.substr(0, i) + '-' + str.substr(i);\n\t\t\tisLastCharLower = false;\n\t\t\ti++;\n\t\t} else {\n\t\t\tisLastCharLower = (c.toLowerCase() === c);\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function () {\n\tvar str = [].map.call(arguments, function (str) {\n\t\treturn str.trim();\n\t}).filter(function (str) {\n\t\treturn str.length;\n\t}).join('-');\n\n\tif (!str.length) {\n\t\treturn '';\n\t}\n\n\tif (str.length === 1) {\n\t\treturn str;\n\t}\n\n\tif (!(/[_.\\- ]+/).test(str)) {\n\t\tif (str === str.toUpperCase()) {\n\t\t\treturn str.toLowerCase();\n\t\t}\n\n\t\tif (str[0] !== str[0].toLowerCase()) {\n\t\t\treturn str[0].toLowerCase() + str.slice(1);\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tstr = preserveCamelCase(str);\n\n\treturn str\n\t.replace(/^[_.\\- ]+/, '')\n\t.toLowerCase()\n\t.replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n\t\treturn p1.toUpperCase();\n\t});\n};\n"]}