{"version":3,"sources":["flexFlow.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,OAAR,GAAkB,iBAAlB;;AAEA,IAAI,sBAAsB,QAAQ,sBAAR,CAAtB;;AAEJ,IAAI,uBAAuB,uBAAuB,mBAAvB,CAAvB;;AAEJ,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAJ,GAAiB,GAAxB,GAA8B,EAAE,SAAS,GAAT,EAAhC,CAAT;CAArC;;;AAGA,IAAI,gBAAgB,CAAC,WAAD,CAAhB;;AAEJ,IAAI,gBAAgB,CAAC,KAAD,EAAQ,aAAR,EAAuB,QAAvB,EAAiC,gBAAjC,CAAhB;;AAEJ,IAAI,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,cAApB,CAAX;;AAEJ,SAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC7B,QAAI,EAAE,CAAC,cAAc,OAAd,CAAsB,KAAK,IAAL,CAAvB,EAAmC;AACrC,eADqC;KAAzC;AAGA,QAAI,QAAQ,EAAE,WAAW,EAAX,EAAe,MAAM,EAAN,EAAzB,CAJyB;AAK7B,QAAI,WAAW,CAAC,GAAG,qBAAqB,OAArB,CAAJ,CAAkC,KAAK,KAAL,CAA7C,CALyB;AAM7B,QAAI,SAAS,KAAT,CAAe,MAAf,GAAwB,CAAxB,EAA2B;AAC3B,iBAAS,IAAT,CAAc,UAAU,IAAV,EAAgB;AAC1B,gBAAI,CAAC,cAAc,OAAd,CAAsB,KAAK,KAAL,CAAvB,EAAoC;AACpC,sBAAM,SAAN,GAAkB,KAAK,KAAL,CADkB;AAEpC,uBAFoC;aAAxC;AAIA,gBAAI,CAAC,SAAS,OAAT,CAAiB,KAAK,KAAL,CAAlB,EAA+B;AAC/B,sBAAM,IAAN,GAAa,KAAK,KAAL,CADkB;AAE/B,uBAF+B;aAAnC;SALU,CAAd,CAD2B;AAW3B,aAAK,KAAL,GAAa,CAAC,MAAM,SAAN,GAAkB,GAAlB,GAAwB,MAAM,IAAN,CAAzB,CAAqC,IAArC,EAAb,CAX2B;KAA/B;CANJ;AAoBA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"flexFlow-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = normalizeFlexFlow;\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// flex-flow: <flex-direction> || <flex-wrap>\nvar flexFlowProps = ['flex-flow'];\n\nvar flexDirection = ['row', 'row-reverse', 'column', 'column-reverse'];\n\nvar flexWrap = ['nowrap ', 'wrap', 'wrap-reverse'];\n\nfunction normalizeFlexFlow(decl) {\n    if (! ~flexFlowProps.indexOf(decl.prop)) {\n        return;\n    }\n    var order = { direction: '', wrap: '' };\n    var flexFlow = (0, _postcssValueParser2.default)(decl.value);\n    if (flexFlow.nodes.length > 2) {\n        flexFlow.walk(function (node) {\n            if (~flexDirection.indexOf(node.value)) {\n                order.direction = node.value;\n                return;\n            }\n            if (~flexWrap.indexOf(node.value)) {\n                order.wrap = node.value;\n                return;\n            }\n        });\n        decl.value = (order.direction + ' ' + order.wrap).trim();\n    }\n};\nmodule.exports = exports['default'];"]}