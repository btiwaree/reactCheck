{"version":3,"sources":["border.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,OAAR,GAAkB,eAAlB;;AAEA,IAAI,sBAAsB,QAAQ,sBAAR,CAAtB;;AAEJ,IAAI,uBAAuB,uBAAuB,mBAAvB,CAAvB;;AAEJ,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAJ,GAAiB,GAAxB,GAA8B,EAAE,SAAS,GAAT,EAAhC,CAAT;CAArC;;;;AAIA,IAAI,cAAc,CAAC,QAAD,EAAW,YAAX,EAAyB,cAAzB,EAAyC,eAAzC,EAA0D,aAA1D,EAAyE,SAAzE,CAAd;;AAEJ,IAAI,eAAe,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAf;;AAEJ,IAAI,eAAe,CAAC,MAAD,EAAS,MAAT;AACnB,QADmB,EACT,QADS,EACC,QADD,EACW,OADX,EACoB,QADpB,EAC8B,QAD9B,EACwC,OADxC,EACiD,OADjD,EAC0D,QAD1D,CAAf;;AAGJ,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AAC3B,QAAI,EAAE,CAAC,YAAY,OAAZ,CAAoB,KAAK,IAAL,CAArB,EAAiC;AACnC,eADmC;KAAvC;AAGA,QAAI,QAAQ,EAAE,OAAO,EAAP,EAAW,OAAO,EAAP,EAAW,OAAO,EAAP,EAAhC,CAJuB;AAK3B,QAAI,SAAS,CAAC,GAAG,qBAAqB,OAArB,CAAJ,CAAkC,KAAK,KAAL,CAA3C,CALuB;AAM3B,QAAI,OAAO,KAAP,CAAa,MAAb,GAAsB,CAAtB,EAAyB;AACzB,eAAO,IAAP,CAAY,UAAU,IAAV,EAAgB;AACxB,gBAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AACtB,oBAAI,CAAC,aAAa,OAAb,CAAqB,KAAK,KAAL,CAAtB,EAAmC;AACnC,0BAAM,KAAN,GAAc,KAAK,KAAL,CADqB;AAEnC,2BAAO,KAAP,CAFmC;iBAAvC;AAIA,oBAAI,CAAC,aAAa,OAAb,CAAqB,KAAK,KAAL,CAAtB,IAAqC,CAAC,GAAG,oBAAoB,IAApB,CAAJ,CAA8B,KAAK,KAAL,CAAnE,EAAgF;AAChF,0BAAM,KAAN,GAAc,KAAK,KAAL,CADkE;AAEhF,2BAAO,KAAP,CAFgF;iBAApF;AAIA,sBAAM,KAAN,GAAc,KAAK,KAAL,CATQ;AAUtB,uBAAO,KAAP,CAVsB;aAA1B;AAYA,gBAAI,KAAK,IAAL,KAAc,UAAd,EAA0B;AAC1B,oBAAI,KAAK,KAAL,KAAe,MAAf,EAAuB;AACvB,0BAAM,KAAN,GAAc,CAAC,GAAG,oBAAoB,SAApB,CAAJ,CAAmC,IAAnC,CAAd,CADuB;iBAA3B,MAEO;AACH,0BAAM,KAAN,GAAc,CAAC,GAAG,oBAAoB,SAApB,CAAJ,CAAmC,IAAnC,CAAd,CADG;iBAFP;AAKA,uBAAO,KAAP,CAN0B;aAA9B;SAbQ,CAAZ,CADyB;AAuBzB,aAAK,KAAL,GAAa,CAAC,MAAM,KAAN,GAAc,GAAd,GAAoB,MAAM,KAAN,GAAc,GAAlC,GAAwC,MAAM,KAAN,CAAzC,CAAsD,IAAtD,EAAb,CAvByB;KAA7B;CANJ;AAgCA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"border-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = normalizeBorder;\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// border: <line-width> || <line-style> || <color>\n// outline: <outline-color> || <outline-style> || <outline-width>\nvar borderProps = ['border', 'border-top', 'border-right', 'border-bottom', 'border-left', 'outline'];\n\nvar borderWidths = ['thin', 'medium', 'thick'];\n\nvar borderStyles = ['none', 'auto', // only in outline-style\n'hidden', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'];\n\nfunction normalizeBorder(decl) {\n    if (! ~borderProps.indexOf(decl.prop)) {\n        return;\n    }\n    var order = { width: '', style: '', color: '' };\n    var border = (0, _postcssValueParser2.default)(decl.value);\n    if (border.nodes.length > 2) {\n        border.walk(function (node) {\n            if (node.type === 'word') {\n                if (~borderStyles.indexOf(node.value)) {\n                    order.style = node.value;\n                    return false;\n                }\n                if (~borderWidths.indexOf(node.value) || (0, _postcssValueParser.unit)(node.value)) {\n                    order.width = node.value;\n                    return false;\n                }\n                order.color = node.value;\n                return false;\n            }\n            if (node.type === 'function') {\n                if (node.value === 'calc') {\n                    order.width = (0, _postcssValueParser.stringify)(node);\n                } else {\n                    order.color = (0, _postcssValueParser.stringify)(node);\n                }\n                return false;\n            }\n        });\n        decl.value = (order.width + ' ' + order.style + ' ' + order.color).trim();\n    }\n};\nmodule.exports = exports['default'];"]}