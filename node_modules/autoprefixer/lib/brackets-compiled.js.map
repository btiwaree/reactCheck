{"version":3,"sources":["brackets.js"],"names":[],"mappings":"AAAA,CAAC,YAAW;AACV,MAAI,QAAJ,EAAc,IAAd,CADU;;AAGV,SAAO,UAAS,KAAT,EAAgB;AACrB,WAAO,MAAM,MAAM,MAAN,GAAe,CAAf,CAAb,CADqB;GAAhB,CAHG;;AAOV,aAAW;AACT,WAAO,UAAS,GAAT,EAAc;AACnB,UAAI,OAAJ,EAAa,CAAb,EAAgB,GAAhB,EAAqB,KAArB,EAA4B,GAA5B,CADmB;AAEnB,gBAAU,CAAC,EAAD,CAAV,CAFmB;AAGnB,cAAQ,CAAC,OAAD,CAAR,CAHmB;AAInB,WAAK,IAAI,CAAJ,EAAO,MAAM,IAAI,MAAJ,EAAY,IAAI,GAAJ,EAAS,GAAvC,EAA4C;AAC1C,cAAM,IAAI,CAAJ,CAAN,CAD0C;AAE1C,YAAI,QAAQ,GAAR,EAAa;AACf,oBAAU,CAAC,EAAD,CAAV,CADe;AAEf,eAAK,KAAL,EAAY,IAAZ,CAAiB,OAAjB,EAFe;AAGf,gBAAM,IAAN,CAAW,OAAX,EAHe;SAAjB,MAIO,IAAI,QAAQ,GAAR,EAAa;AACtB,gBAAM,GAAN,GADsB;AAEtB,oBAAU,KAAK,KAAL,CAAV,CAFsB;AAGtB,kBAAQ,IAAR,CAAa,EAAb,EAHsB;SAAjB,MAIA;AACL,kBAAQ,QAAQ,MAAR,GAAiB,CAAjB,CAAR,IAA+B,GAA/B,CADK;SAJA;OANT;AAcA,aAAO,MAAM,CAAN,CAAP,CAlBmB;KAAd;AAoBP,eAAW,UAAS,GAAT,EAAc;AACvB,UAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,EAAe,MAAf,CADuB;AAEvB,eAAS,EAAT,CAFuB;AAGvB,WAAK,IAAI,CAAJ,EAAO,MAAM,IAAI,MAAJ,EAAY,IAAI,GAAJ,EAAS,GAAvC,EAA4C;AAC1C,YAAI,IAAI,CAAJ,CAAJ,CAD0C;AAE1C,YAAI,OAAO,CAAP,KAAa,QAAb,EAAuB;AACzB,oBAAU,MAAM,SAAS,SAAT,CAAmB,CAAnB,CAAN,GAA8B,GAA9B,CADe;SAA3B,MAEO;AACL,oBAAU,CAAV,CADK;SAFP;OAFF;AAQA,aAAO,MAAP,CAXuB;KAAd;GArBb,CAPU;;AA2CV,SAAO,OAAP,GAAiB,QAAjB,CA3CU;CAAX,CAAD,CA6CG,IA7CH,CA6CQ,IA7CR","file":"brackets-compiled.js","sourcesContent":["(function() {\n  var brackets, last;\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  brackets = {\n    parse: function(str) {\n      var current, j, len, stack, sym;\n      current = [''];\n      stack = [current];\n      for (j = 0, len = str.length; j < len; j++) {\n        sym = str[j];\n        if (sym === '(') {\n          current = [''];\n          last(stack).push(current);\n          stack.push(current);\n        } else if (sym === ')') {\n          stack.pop();\n          current = last(stack);\n          current.push('');\n        } else {\n          current[current.length - 1] += sym;\n        }\n      }\n      return stack[0];\n    },\n    stringify: function(ast) {\n      var i, j, len, result;\n      result = '';\n      for (j = 0, len = ast.length; j < len; j++) {\n        i = ast[j];\n        if (typeof i === 'object') {\n          result += '(' + brackets.stringify(i) + ')';\n        } else {\n          result += i;\n        }\n      }\n      return result;\n    }\n  };\n\n  module.exports = brackets;\n\n}).call(this);\n"]}