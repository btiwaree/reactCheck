{"version":3,"sources":["at-rule.js"],"names":[],"mappings":"AAAA,CAAC,YAAW;AACV,MAAI,MAAJ;MAAY,QAAZ;MACE,SAAS,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAAE,SAAK,IAAI,GAAJ,IAAW,MAAhB,EAAwB;AAAE,UAAI,QAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,CAAJ,EAA+B,MAAM,GAAN,IAAa,OAAO,GAAP,CAAb,CAA/B;KAA1B,SAA8F,IAAT,GAAgB;AAAE,WAAK,WAAL,GAAmB,KAAnB,CAAF;KAAhB,IAA8C,CAAK,SAAL,GAAiB,OAAO,SAAP,CAAtJ,KAAwK,CAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB,CAAxK,KAAsM,CAAM,SAAN,GAAkB,OAAO,SAAP,CAAxN,OAAiP,KAAP,CAA1O;GAAxB;MACT,UAAU,GAAG,cAAH,CAHF;;AAKV,aAAW,QAAQ,YAAR,CAAX,CALU;;AAOV,WAAS,UAAU,UAAT,EAAqB;AAC7B,WAAO,MAAP,EAAe,UAAf,EAD6B;;AAG7B,aAAS,MAAT,GAAkB;AAChB,aAAO,OAAO,SAAP,CAAiB,WAAjB,CAA6B,KAA7B,CAAmC,IAAnC,EAAyC,SAAzC,CAAP,CADgB;KAAlB;;AAIA,WAAO,SAAP,CAAiB,GAAjB,GAAuB,UAAS,IAAT,EAAe,MAAf,EAAuB;AAC5C,UAAI,OAAJ,EAAa,MAAb,EAAqB,QAArB,CAD4C;AAE5C,iBAAW,SAAS,KAAK,IAAL,CAFwB;AAG5C,gBAAU,KAAK,MAAL,CAAY,IAAZ,CAAiB,UAAS,CAAT,EAAY;AACrC,eAAO,EAAE,IAAF,KAAW,QAAX,IAAuB,EAAE,MAAF,KAAa,KAAK,MAAL,CADN;OAAZ,CAA3B,CAH4C;AAM5C,UAAI,OAAJ,EAAa;AACX,eADW;OAAb;AAGA,eAAS,KAAK,KAAL,CAAW,IAAX,EAAiB;AACxB,cAAM,QAAN;OADO,CAAT,CAT4C;AAY5C,aAAO,KAAK,MAAL,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,MAA/B,CAAP,CAZ4C;KAAvB,CAPM;;AAsB7B,WAAO,SAAP,CAAiB,OAAjB,GAA2B,UAAS,IAAT,EAAe;AACxC,UAAI,CAAJ,EAAO,GAAP,EAAY,MAAZ,EAAoB,MAApB,EAA4B,GAA5B,EAAiC,OAAjC,CADwC;AAExC,eAAS,KAAK,YAAL,CAAkB,IAAlB,CAAT,CAFwC;AAGxC,YAAM,KAAK,QAAL,CAHkC;AAIxC,gBAAU,EAAV,CAJwC;AAKxC,WAAK,IAAI,CAAJ,EAAO,MAAM,IAAI,MAAJ,EAAY,IAAI,GAAJ,EAAS,GAAvC,EAA4C;AAC1C,iBAAS,IAAI,CAAJ,CAAT,CAD0C;AAE1C,YAAI,UAAU,WAAW,MAAX,EAAmB;AAC/B,mBAD+B;SAAjC;AAGA,gBAAQ,IAAR,CAAa,KAAK,GAAL,CAAS,IAAT,EAAe,MAAf,CAAb,EAL0C;OAA5C;AAOA,aAAO,OAAP,CAZwC;KAAf,CAtBE;;AAqC7B,WAAO,MAAP,CArC6B;GAArB,CAuCP,QAvCM,CAAT,CAPU;;AAgDV,SAAO,OAAP,GAAiB,MAAjB,CAhDU;CAAX,CAAD,CAkDG,IAlDH,CAkDQ,IAlDR","file":"at-rule-compiled.js","sourcesContent":["(function() {\n  var AtRule, Prefixer,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Prefixer = require('./prefixer');\n\n  AtRule = (function(superClass) {\n    extend(AtRule, superClass);\n\n    function AtRule() {\n      return AtRule.__super__.constructor.apply(this, arguments);\n    }\n\n    AtRule.prototype.add = function(rule, prefix) {\n      var already, cloned, prefixed;\n      prefixed = prefix + rule.name;\n      already = rule.parent.some(function(i) {\n        return i.name === prefixed && i.params === rule.params;\n      });\n      if (already) {\n        return;\n      }\n      cloned = this.clone(rule, {\n        name: prefixed\n      });\n      return rule.parent.insertBefore(rule, cloned);\n    };\n\n    AtRule.prototype.process = function(node) {\n      var j, len, parent, prefix, ref, results;\n      parent = this.parentPrefix(node);\n      ref = this.prefixes;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        prefix = ref[j];\n        if (parent && parent !== prefix) {\n          continue;\n        }\n        results.push(this.add(node, prefix));\n      }\n      return results;\n    };\n\n    return AtRule;\n\n  })(Prefixer);\n\n  module.exports = AtRule;\n\n}).call(this);\n"]}