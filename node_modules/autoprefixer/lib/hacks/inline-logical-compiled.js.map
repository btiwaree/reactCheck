{"version":3,"sources":["inline-logical.js"],"names":[],"mappings":"AAAA,CAAC,YAAW;AACV,MAAI,WAAJ;MAAiB,aAAjB;MACE,SAAS,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAAE,SAAK,IAAI,GAAJ,IAAW,MAAhB,EAAwB;AAAE,UAAI,QAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,CAAJ,EAA+B,MAAM,GAAN,IAAa,OAAO,GAAP,CAAb,CAA/B;KAA1B,SAA8F,IAAT,GAAgB;AAAE,WAAK,WAAL,GAAmB,KAAnB,CAAF;KAAhB,IAA8C,CAAK,SAAL,GAAiB,OAAO,SAAP,CAAtJ,KAAwK,CAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB,CAAxK,KAAsM,CAAM,SAAN,GAAkB,OAAO,SAAP,CAAxN,OAAiP,KAAP,CAA1O;GAAxB;MACT,UAAU,GAAG,cAAH,CAHF;;AAKV,gBAAc,QAAQ,gBAAR,CAAd,CALU;;AAOV,kBAAgB,UAAU,UAAT,EAAqB;AACpC,WAAO,aAAP,EAAsB,UAAtB,EADoC;;AAGpC,aAAS,aAAT,GAAyB;AACvB,aAAO,cAAc,SAAd,CAAwB,WAAxB,CAAoC,KAApC,CAA0C,IAA1C,EAAgD,SAAhD,CAAP,CADuB;KAAzB;;AAIA,kBAAc,KAAd,GAAsB,CAAC,qBAAD,EAAwB,mBAAxB,EAA6C,qBAA7C,EAAoE,mBAApE,EAAyF,sBAAzF,EAAiH,oBAAjH,EAAuI,cAAvI,EAAuJ,YAAvJ,EAAqK,cAArK,EAAqL,YAArL,EAAmM,eAAnM,EAAoN,aAApN,CAAtB,CAPoC;;AASpC,kBAAc,SAAd,CAAwB,QAAxB,GAAmC,UAAS,IAAT,EAAe,MAAf,EAAuB;AACxD,aAAO,SAAS,KAAK,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAT,CADiD;KAAvB,CATC;;AAapC,kBAAc,SAAd,CAAwB,SAAxB,GAAoC,UAAS,IAAT,EAAe;AACjD,aAAO,KAAK,OAAL,CAAa,qCAAb,EAAoD,cAApD,CAAP,CADiD;KAAf,CAbA;;AAiBpC,WAAO,aAAP,CAjBoC;GAArB,CAmBd,WAnBa,CAAhB,CAPU;;AA4BV,SAAO,OAAP,GAAiB,aAAjB,CA5BU;CAAX,CAAD,CA8BG,IA9BH,CA8BQ,IA9BR","file":"inline-logical-compiled.js","sourcesContent":["(function() {\n  var Declaration, InlineLogical,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  InlineLogical = (function(superClass) {\n    extend(InlineLogical, superClass);\n\n    function InlineLogical() {\n      return InlineLogical.__super__.constructor.apply(this, arguments);\n    }\n\n    InlineLogical.names = ['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', 'border-start', 'border-end', 'margin-start', 'margin-end', 'padding-start', 'padding-end'];\n\n    InlineLogical.prototype.prefixed = function(prop, prefix) {\n      return prefix + prop.replace('-inline', '');\n    };\n\n    InlineLogical.prototype.normalize = function(prop) {\n      return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2');\n    };\n\n    return InlineLogical;\n\n  })(Declaration);\n\n  module.exports = InlineLogical;\n\n}).call(this);\n"]}