{"version":3,"sources":["flex-grow.js"],"names":[],"mappings":"AAAA,CAAC,YAAW;AACV,MAAI,WAAJ;MAAiB,IAAjB;MAAuB,QAAvB;MACE,SAAS,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAAE,SAAK,IAAI,GAAJ,IAAW,MAAhB,EAAwB;AAAE,UAAI,QAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,CAAJ,EAA+B,MAAM,GAAN,IAAa,OAAO,GAAP,CAAb,CAA/B;KAA1B,SAA8F,IAAT,GAAgB;AAAE,WAAK,WAAL,GAAmB,KAAnB,CAAF;KAAhB,IAA8C,CAAK,SAAL,GAAiB,OAAO,SAAP,CAAtJ,KAAwK,CAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB,CAAxK,KAAsM,CAAM,SAAN,GAAkB,OAAO,SAAP,CAAxN,OAAiP,KAAP,CAA1O;GAAxB;MACT,UAAU,GAAG,cAAH,CAHF;;AAKV,aAAW,QAAQ,aAAR,CAAX,CALU;;AAOV,gBAAc,QAAQ,gBAAR,CAAd,CAPU;;AASV,SAAO,UAAU,UAAT,EAAqB;AAC3B,WAAO,IAAP,EAAa,UAAb,EAD2B;;AAG3B,aAAS,IAAT,GAAgB;AACd,aAAO,KAAK,SAAL,CAAe,WAAf,CAA2B,KAA3B,CAAiC,IAAjC,EAAuC,SAAvC,CAAP,CADc;KAAhB;;AAIA,SAAK,KAAL,GAAa,CAAC,WAAD,EAAc,eAAd,CAAb,CAP2B;;AAS3B,SAAK,SAAL,CAAe,SAAf,GAA2B,YAAW;AACpC,aAAO,MAAP,CADoC;KAAX,CATA;;AAa3B,SAAK,SAAL,CAAe,QAAf,GAA0B,UAAS,IAAT,EAAe,MAAf,EAAuB;AAC/C,UAAI,GAAJ,EAAS,IAAT,CAD+C;AAE/C,YAAM,SAAS,MAAT,CAAN,EAAwB,OAAO,IAAI,CAAJ,CAAP,EAAe,SAAS,IAAI,CAAJ,CAAT,CAFQ;AAG/C,UAAI,SAAS,IAAT,EAAe;AACjB,eAAO,SAAS,UAAT,CADU;OAAnB,MAEO,IAAI,SAAS,IAAT,EAAe;AACxB,eAAO,SAAS,eAAT,CADiB;OAAnB,MAEA;AACL,eAAO,KAAK,SAAL,CAAe,QAAf,CAAwB,KAAxB,CAA8B,IAA9B,EAAoC,SAApC,CAAP,CADK;OAFA;KALiB,CAbC;;AAyB3B,WAAO,IAAP,CAzB2B;GAArB,CA2BL,WA3BI,CAAP,CATU;;AAsCV,SAAO,OAAP,GAAiB,IAAjB,CAtCU;CAAX,CAAD,CAwCG,IAxCH,CAwCQ,IAxCR","file":"flex-grow-compiled.js","sourcesContent":["(function() {\n  var Declaration, Flex, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  Flex = (function(superClass) {\n    extend(Flex, superClass);\n\n    function Flex() {\n      return Flex.__super__.constructor.apply(this, arguments);\n    }\n\n    Flex.names = ['flex-grow', 'flex-positive'];\n\n    Flex.prototype.normalize = function() {\n      return 'flex';\n    };\n\n    Flex.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return prefix + 'box-flex';\n      } else if (spec === 2012) {\n        return prefix + 'flex-positive';\n      } else {\n        return Flex.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    return Flex;\n\n  })(Declaration);\n\n  module.exports = Flex;\n\n}).call(this);\n"]}