{"version":3,"sources":["grid-start.js"],"names":[],"mappings":"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","file":"grid-start-compiled.js","sourcesContent":["(function() {\n  var Declaration, GridStart,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  GridStart = (function(superClass) {\n    extend(GridStart, superClass);\n\n    function GridStart() {\n      return GridStart.__super__.constructor.apply(this, arguments);\n    }\n\n    GridStart.names = ['grid-row-start', 'grid-column-start', 'grid-row', 'grid-column'];\n\n    GridStart.prototype.check = function(decl) {\n      return decl.value.indexOf('/') === -1 || decl.value.indexOf('span') !== -1;\n    };\n\n    GridStart.prototype.normalize = function(prop) {\n      return prop.replace('-start', '');\n    };\n\n    GridStart.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefix + prop.replace('-start', '');\n      } else {\n        return GridStart.__super__.prefixed.call(this, prop, prefix);\n      }\n    };\n\n    GridStart.prototype.insert = function(decl, prefix, prefixes) {\n      var parts;\n      parts = this.splitValue(decl, prefix);\n      if (parts.length === 2) {\n        decl.cloneBefore({\n          prop: '-ms-' + decl.prop + '-span',\n          value: parts[1]\n        });\n      }\n      return GridStart.__super__.insert.call(this, decl, prefix, prefixes);\n    };\n\n    GridStart.prototype.set = function(decl, prefix) {\n      var parts;\n      parts = this.splitValue(decl, prefix);\n      if (parts.length === 2) {\n        decl.value = parts[0];\n      }\n      return GridStart.__super__.set.call(this, decl, prefix);\n    };\n\n    GridStart.prototype.splitValue = function(decl, prefix) {\n      var parts;\n      if (prefix === '-ms-' && decl.prop.indexOf('-start') === -1) {\n        parts = decl.value.split(/\\s*\\/\\s*span\\s+/);\n        if (parts.length === 2) {\n          return parts;\n        }\n      }\n      return false;\n    };\n\n    return GridStart;\n\n  })(Declaration);\n\n  module.exports = GridStart;\n\n}).call(this);\n"]}