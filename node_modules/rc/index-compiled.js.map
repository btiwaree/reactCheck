{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA,IAAI,KAAO,QAAQ,aAAR,CAAP;AACJ,IAAI,OAAO,QAAQ,MAAR,EAAgB,IAAhB;AACX,IAAI,aAAa,QAAQ,aAAR,CAAb;AACJ,IAAI,MAAM,MAAN;AACJ,IAAI,MAAM,QAAQ,QAAR,KAAqB,OAArB;AACV,IAAI,OAAO,MACE,QAAQ,GAAR,CAAY,WAAZ,GACA,QAAQ,GAAR,CAAY,IAAZ;;AAEb,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB,QAAhB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC;AACtD,MAAG,aAAa,OAAO,IAAP,EACd,MAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN,CADF;AAEA,MAAG,CAAC,IAAD,EACD,OAAO,QAAQ,UAAR,EAAoB,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAApB,CAAP,CADF;AAEA,aAAW,CACP,aAAa,OAAO,QAAP,GACb,GAAG,IAAH,CAAQ,QAAR,CADA,GACoB,QADpB,CADO,IAGJ,EAHI,CAL2C;;AAUtD,UAAQ,SAAS,GAAG,KAAH,CAVqC;;AAYtD,MAAI,MAAM,GAAG,GAAH,CAAO,OAAO,GAAP,CAAb,CAZkD;;AActD,MAAI,UAAU,CAAC,QAAD,CAAV,CAdkD;AAetD,MAAI,cAAc,EAAd,CAfkD;AAgBtD,WAAS,aAAT,CAAwB,IAAxB,EAA8B;AAC5B,QAAI,YAAY,OAAZ,CAAoB,IAApB,KAA6B,CAA7B,EAAgC,OAApC;AACA,QAAI,aAAa,GAAG,IAAH,CAAQ,IAAR,CAAb,CAFwB;AAG5B,QAAI,UAAJ,EAAgB;AACd,cAAQ,IAAR,CAAa,MAAM,UAAN,CAAb,EADc;AAEd,kBAAY,IAAZ,CAAiB,IAAjB,EAFc;KAAhB;GAHF;;;AAhBsD,MA0BlD,CAAC,GAAD,EACH,CAAC,KAAK,GAAL,EAAU,IAAV,EAAgB,QAAhB,CAAD,EACC,KAAK,GAAL,EAAU,OAAO,IAAP,CADX,EACyB,OADzB,CACiC,aADjC,EADD;AAGA,MAAI,IAAJ,EACC,CAAC,KAAK,IAAL,EAAW,SAAX,EAAsB,IAAtB,EAA4B,QAA5B,CAAD,EACC,KAAK,IAAL,EAAW,SAAX,EAAsB,IAAtB,CADD,EAEC,KAAK,IAAL,EAAW,MAAM,IAAN,EAAY,QAAvB,CAFD,EAGC,KAAK,IAAL,EAAW,MAAM,IAAN,GAAa,IAAb,CAHZ,EAGgC,OAHhC,CAGwC,aAHxC,EADD;AAKA,gBAAc,GAAG,IAAH,CAAQ,MAAI,IAAJ,GAAS,IAAT,CAAtB,EAlCsD;AAmCtD,MAAI,IAAI,MAAJ,EAAY,cAAc,IAAI,MAAJ,CAAd,CAAhB;AACA,MAAI,KAAK,MAAL,EAAa,cAAc,KAAK,MAAL,CAAd,CAAjB;;AAEA,SAAO,WAAW,KAAX,CAAiB,IAAjB,EAAuB,QAAQ,MAAR,CAAe,CAC3C,GAD2C,EAE3C,IAF2C,EAG3C,YAAY,MAAZ,GAAqB,EAAC,SAAS,WAAT,EAAsB,QAAQ,YAAY,YAAY,MAAZ,GAAqB,CAArB,CAApB,EAA5C,GAA2F,SAA3F,CAH4B,CAAvB,CAAP,CAtCsD;CAAvC;;AA6CjB,IAAG,CAAC,OAAO,MAAP,EAAe;AACjB,UAAQ,GAAR,CACE,KAAK,SAAL,CAAe,OAAO,OAAP,CAAe,QAAQ,IAAR,CAAa,CAAb,CAAf,CAAf,EAAgD,KAAhD,EAAuD,CAAvD,CADF,EADiB;CAAnB","file":"index-compiled.js","sourcesContent":["#! /usr/bin/env node\nvar cc   = require('./lib/utils')\nvar join = require('path').join\nvar deepExtend = require('deep-extend')\nvar etc = '/etc'\nvar win = process.platform === \"win32\"\nvar home = win\n           ? process.env.USERPROFILE\n           : process.env.HOME\n\nmodule.exports = function (name, defaults, argv, parse) {\n  if('string' !== typeof name)\n    throw new Error('rc(name): name *must* be string')\n  if(!argv)\n    argv = require('minimist')(process.argv.slice(2))\n  defaults = (\n      'string' === typeof defaults\n    ? cc.json(defaults) : defaults\n    ) || {}\n\n  parse = parse || cc.parse\n\n  var env = cc.env(name + '_')\n\n  var configs = [defaults]\n  var configFiles = []\n  function addConfigFile (file) {\n    if (configFiles.indexOf(file) >= 0) return\n    var fileConfig = cc.file(file)\n    if (fileConfig) {\n      configs.push(parse(fileConfig))\n      configFiles.push(file)\n    }\n  }\n\n  // which files do we look at?\n  if (!win)\n   [join(etc, name, 'config'),\n    join(etc, name + 'rc')].forEach(addConfigFile)\n  if (home)\n   [join(home, '.config', name, 'config'),\n    join(home, '.config', name),\n    join(home, '.' + name, 'config'),\n    join(home, '.' + name + 'rc')].forEach(addConfigFile)\n  addConfigFile(cc.find('.'+name+'rc'))\n  if (env.config) addConfigFile(env.config)\n  if (argv.config) addConfigFile(argv.config)\n\n  return deepExtend.apply(null, configs.concat([\n    env,\n    argv,\n    configFiles.length ? {configs: configFiles, config: configFiles[configFiles.length - 1]} : undefined,\n  ]))\n}\n\nif(!module.parent) {\n  console.log(\n    JSON.stringify(module.exports(process.argv[2]), false, 2)\n  )\n}\n"]}