{"version":3,"sources":["border-base.js"],"names":[],"mappings":"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","file":"border-base-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _postcss = require('postcss');\n\nvar _clone = require('../clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _hasAllProps = require('../hasAllProps');\n\nvar _hasAllProps2 = _interopRequireDefault(_hasAllProps);\n\nvar _getLastNode = require('../getLastNode');\n\nvar _getLastNode2 = _interopRequireDefault(_getLastNode);\n\nvar _canMerge = require('../canMerge');\n\nvar _canMerge2 = _interopRequireDefault(_canMerge);\n\nexports['default'] = function (direction) {\n    var wsc = ['width', 'style', 'color'].map(function (d) {\n        return 'border-' + direction + '-' + d;\n    });\n    var defaults = ['medium', 'none', 'currentColor'];\n    var declaration = 'border-' + direction;\n    var processor = {\n        explode: function explode(rule) {\n            rule.walkDecls(declaration, function (decl) {\n                var values = _postcss.list.space(decl.value);\n                wsc.forEach(function (prop, index) {\n                    var node = (0, _clone2['default'])(decl);\n                    node.prop = prop;\n                    node.value = values[index];\n                    if (node.value === undefined) {\n                        node.value = defaults[index];\n                    }\n                    rule.insertAfter(decl, node);\n                });\n                decl.remove();\n            });\n        },\n        merge: function merge(rule) {\n            var decls = rule.nodes.filter(function (node) {\n                return node.prop && ~wsc.indexOf(node.prop);\n            });\n\n            var _loop = function () {\n                var lastNode = decls[decls.length - 1];\n                var props = decls.filter(function (node) {\n                    return node.important === lastNode.important;\n                });\n                if (_hasAllProps2['default'].apply(undefined, [props].concat(wsc)) && _canMerge2['default'].apply(undefined, props)) {\n                    var values = wsc.map(function (prop) {\n                        return (0, _getLastNode2['default'])(props, prop).value;\n                    });\n                    var value = values.concat(['']).reduceRight(function (prev, cur, i) {\n                        if (prev === '' && cur === defaults[i]) {\n                            return prev;\n                        }\n                        return cur + \" \" + prev;\n                    }).trim();\n                    if (value === '') {\n                        value = defaults[0];\n                    }\n                    var shorthand = (0, _clone2['default'])(lastNode);\n                    shorthand.prop = declaration;\n                    shorthand.value = value;\n                    rule.insertAfter(lastNode, shorthand);\n                    props.forEach(function (prop) {\n                        return prop.remove();\n                    });\n                }\n                decls = decls.filter(function (node) {\n                    return ! ~props.indexOf(node);\n                });\n            };\n\n            while (decls.length) {\n                _loop();\n            }\n        }\n    };\n\n    return processor;\n};\n\nmodule.exports = exports['default'];"]}