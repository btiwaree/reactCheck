{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,0BAAR,CAAX;AACJ,IAAI,aAAa,QAAQ,WAAR,EAAqB,QAArB;AACjB,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,SAAS,SAAT,CAAmB,OAAnB,EAA4B,MAA5B,EACA;AACE,MAAG,CAAC,WAAW,MAAX,CAAD,EAAqB,MAAM,IAAI,KAAJ,CAAU,oCAAV,CAAN,CAAxB;;AAEA,MAAI,OAAO,IAAP,CAHN;;AAKE,SAAO,OAAP,GAAiB,EAAjB,CALF;;AAOE,SAAO,EAAP,CAAU,UAAV,EAAsB,YACtB;AACE,QAAI,QAAQ,OAAO,IAAP,EAAR,CADN;AAEE,QAAI,UAAU,IAAV,EACF,OADF;;AAGA,QAAG,SAAS,QAAQ,CAAR,CAAT,EACD,KAAK,IAAL,CAAU,KAAV,EADF,KAIE,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB,EAJF;GANoB,CAAtB,CAPF;;AAoBE,SAAO,EAAP,CAAU,KAAV,EAAiB,YACjB;AACE,SAAI,IAAI,SAAS,QAAQ,CAAR,CAAT,EACJ,UAAU,OAAO,cAAP,CAAsB,KAAtB,EACV,SAAS,QAAQ,CAAR,CAAT,EACJ;AACE,aAAM,OAAO,OAAP,CAAe,MAAf,EACJ,KAAK,IAAL,CAAU,OAAO,OAAP,CAAe,KAAf,EAAV,EADF;;AAGA,cAAQ,KAAR,GAJF;KAHA;;AAUA,QAAG,CAAC,QAAQ,MAAR,EAAgB,KAAK,IAAL,CAAU,IAAV,EAApB;GAZe,CAAjB,CApBF;;AAmCE,SAAO,EAAP,CAAU,OAAV,EAAmB,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,EAAqB,OAArB,CAAnB,EAnCF;;AAqCE,UAAQ,IAAR,CAAa,MAAb,EArCF;CADA;;AA0CA,SAAS,cAAT,CAAwB,OAAxB,EAAiC,OAAjC,EAA0C;AACxC,MAAI,EAAE,gBAAgB,cAAhB,CAAF,EAAoC;AACtC,WAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,CAAP,CADsC;GAAxC;;AAIA,YAAU,WAAW,EAAX,CAL8B;AAMxC,YAAU,WAAW,EAAX,CAN8B;;AAQxC,UAAQ,UAAR,GAAqB,IAArB,CARwC;;AAUxC,WAAS,IAAT,CAAc,IAAd,EAAoB,OAApB,EAVwC;;AAaxC,MAAG,CAAC,MAAM,OAAN,CAAc,OAAd,CAAD,EAAyB,UAAU,CAAC,OAAD,CAAV,CAA5B;AACA,MAAG,CAAC,QAAQ,MAAR,EAAgB,OAAO,KAAK,IAAL,CAAU,IAAV,CAAP,CAApB;;AAdwC,MAiBpC,iBAAiB,UAAU,IAAV,CAAe,IAAf,EAAqB,EAArB,CAAjB,CAjBoC;;AAoBxC,UAAQ,OAAR,CAAgB,UAAS,IAAT,EAChB;AACE,QAAG,MAAM,OAAN,CAAc,IAAd,CAAH,EACE,KAAK,OAAL,CAAa,cAAb,EADF,KAIE,eAAe,IAAf,EAJF;GAFc,CAAhB,CApBwC;CAA1C;AA6BA,KAAK,QAAL,CAAc,cAAd,EAA8B,QAA9B;;AAEA,eAAe,SAAf,CAAyB,KAAzB,GAAiC,YAAY,EAAZ;;AAGjC,OAAO,OAAP,GAAiB,cAAjB","file":"index-compiled.js","sourcesContent":["var Readable = require('readable-stream/readable');\nvar isReadable = require('is-stream').readable;\nvar util = require('util');\n\nfunction addStream(streams, stream)\n{\n  if(!isReadable(stream)) throw new Error('All input streams must be readable');\n\n  var self = this;\n\n  stream._buffer = [];\n\n  stream.on('readable', function()\n  {\n    var chunk = stream.read();\n    if (chunk === null)\n      return;\n\n    if(this === streams[0])\n      self.push(chunk);\n\n    else\n      this._buffer.push(chunk);\n  });\n\n  stream.on('end', function()\n  {\n    for(var stream = streams[0];\n        stream && stream._readableState.ended;\n        stream = streams[0])\n    {\n      while(stream._buffer.length)\n        self.push(stream._buffer.shift());\n\n      streams.shift();\n    }\n\n    if(!streams.length) self.push(null);\n  });\n\n  stream.on('error', this.emit.bind(this, 'error'));\n\n  streams.push(stream);\n}\n\n\nfunction OrderedStreams(streams, options) {\n  if (!(this instanceof(OrderedStreams))) {\n    return new OrderedStreams(streams, options);\n  }\n\n  streams = streams || [];\n  options = options || {};\n\n  options.objectMode = true;\n\n  Readable.call(this, options);\n\n\n  if(!Array.isArray(streams)) streams = [streams];\n  if(!streams.length) return this.push(null);  // no streams, close\n\n\n  var addStream_bind = addStream.bind(this, []);\n\n\n  streams.forEach(function(item)\n  {\n    if(Array.isArray(item))\n      item.forEach(addStream_bind);\n\n    else\n      addStream_bind(item);\n  });\n}\nutil.inherits(OrderedStreams, Readable);\n\nOrderedStreams.prototype._read = function () {};\n\n\nmodule.exports = OrderedStreams;\n"]}