{"version":3,"sources":["extract_description.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,kBAAjB;;;AAGA,SAAS,kBAAT,CAA6B,CAA7B,EAAgC;AAC9B,MAAI,CAAC,CAAD,EAAI,OAAR;AACA,MAAI,MAAM,8BAAN,EAAsC,OAA1C;;;AAF8B,GAK9B,GAAI,EAAE,IAAF,GAAS,KAAT,CAAe,IAAf,CAAJ,CAL8B;AAM9B,OAAK,IAAI,IAAI,CAAJ,EAAO,EAAE,CAAF,KAAQ,EAAE,CAAF,EAAK,IAAL,GAAY,KAAZ,CAAkB,QAAlB,CAAR,EAAqC,GAArD,CAA0D,CAA1D;AACA,MAAI,IAAI,EAAE,MAAF,CAPsB;AAQ9B,OAAK,IAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,CAAJ,IAAS,EAAE,CAAF,EAAK,IAAL,EAAT,EAAsB,GAA1C,CAA+C,CAA/C;AACA,SAAO,EAAE,KAAF,CAAQ,CAAR,EAAW,CAAX,EAAc,IAAd,CAAmB,GAAnB,EAAwB,IAAxB,EAAP,CAT8B;CAAhC","file":"extract_description-compiled.js","sourcesContent":["module.exports = extractDescription\n\n// Extracts description from contents of a readme file in markdown format\nfunction extractDescription (d) {\n  if (!d) return;\n  if (d === \"ERROR: No README data found!\") return;\n  // the first block of text before the first heading\n  // that isn't the first line heading\n  d = d.trim().split('\\n')\n  for (var s = 0; d[s] && d[s].trim().match(/^(#|$)/); s ++);\n  var l = d.length\n  for (var e = s + 1; e < l && d[e].trim(); e ++);\n  return d.slice(s, e).join(' ').trim()\n}\n"]}