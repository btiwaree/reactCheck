{"version":3,"sources":["dependencies.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,KAAR,CAAN;AACJ,IAAI,YAAY,QAAQ,kBAAR,CAAZ;;AAEJ,IAAI,kBAAkB,QAAQ,8BAAR,CAAlB;AACJ,IAAI,aAAa,QAAQ,oBAAR,CAAb;;AAEJ,IAAI,IAAJ,CAAS,wDAAT,EAAmE,UAAS,CAAT,EAAY;AAC7E,MAAI,CAAJ,CAD6E;AAE7E,MAAI,WAAW,EAAX,CAFyE;AAG7E,WAAS,IAAT,CAAc,CAAd,EAAiB;AACf,aAAS,IAAT,CAAc,CAAd,EADe;GAAjB;AAGA,YAAU,IAAE;AACV,kBAAc,EAAE,KAAK,GAAL,EAAhB;AACA,qBAAiB,EAAE,KAAK,GAAL,EAAnB;AACA,0BAAsB,EAAE,KAAK,GAAL,EAAxB;GAHQ,EAIP,IAJH,EAN6E;;AAY7E,MAAI,UAAU,WAAW,gBAAgB,mBAAhB,EAAqC,GAAhD,EAAqD,GAArD,CAAV,CAZyE;AAa7E,MAAI,UAAU,WAAW,gBAAgB,mBAAhB,EAAqC,GAAhD,EAAqD,GAArD,CAAV,CAbyE;AAc7E,MAAI,UAAU,WAAW,gBAAgB,mBAAhB,EAAqC,GAAhD,EAAqD,GAArD,CAAV,CAdyE;AAe7E,IAAE,EAAF,CAAK,CAAC,SAAS,OAAT,CAAiB,OAAjB,CAAD,EAA4B,OAAjC,EAf6E;AAgB7E,IAAE,EAAF,CAAK,CAAC,SAAS,OAAT,CAAiB,OAAjB,CAAD,EAA4B,OAAjC,EAhB6E;AAiB7E,IAAE,EAAF,CAAK,CAAC,SAAS,OAAT,CAAiB,OAAjB,CAAD,EAA4B,OAAjC,EAjB6E;AAkB7E,IAAE,GAAF,GAlB6E;CAAZ,CAAnE;;AAqBA,IAAI,IAAJ,CAAS,qEAAT,EAAgF,UAAS,CAAT,EAAY;AAC1F,MAAI,CAAJ,CAD0F;AAE1F,MAAI,WAAW,EAAX,CAFsF;AAG1F,WAAS,IAAT,CAAc,CAAd,EAAiB;AACf,aAAS,IAAT,CAAc,CAAd,EADe;GAAjB;AAGA,YAAU,IAAE;AACV,wBAAoB,CAAC,KAAD,EAAQ,GAAR,EAAa,EAAC,KAAI,KAAJ,EAAd,CAApB;GADQ,EAEP,IAFH,EAN0F;;AAU1F,MAAI,UAAU,WAAW,gBAAgB,yBAAhB,EAA2C,GAAtD,CAAV,CAVsF;AAW1F,MAAI,UAAU,WAAW,gBAAgB,yBAAhB,EAA2C,EAAC,KAAI,KAAJ,EAAvD,CAAV,CAXsF;AAY1F,MAAI,UAAU,WAAW,gBAAgB,6BAAhB,EAA+C,KAA1D,CAAV,CAZsF;AAa1F,IAAE,EAAF,CAAK,CAAC,SAAS,OAAT,CAAiB,OAAjB,CAAD,EAA4B,OAAjC,EAb0F;AAc1F,IAAE,EAAF,CAAK,CAAC,SAAS,OAAT,CAAiB,OAAjB,CAAD,EAA4B,OAAjC,EAd0F;AAe1F,IAAE,GAAF,GAf0F;CAAZ,CAAhF","file":"dependencies-compiled.js","sourcesContent":["var tap = require(\"tap\")\nvar normalize = require(\"../lib/normalize\")\n\nvar warningMessages = require(\"../lib/warning_messages.json\")\nvar safeFormat = require(\"../lib/safe_format\")\n\ntap.test(\"warn if dependency contains anything else but a string\", function(t) {\n  var a\n  var warnings = []\n  function warn(w) {\n    warnings.push(w)\n  }\n  normalize(a={\n    dependencies: { \"a\": 123},\n    devDependencies: { \"b\": 456},\n    optionalDependencies: { \"c\": 789}\n  }, warn)\n  \n  var wanted1 = safeFormat(warningMessages.nonStringDependency, \"a\", 123)\n  var wanted2 = safeFormat(warningMessages.nonStringDependency, \"b\", 456)\n  var wanted3 = safeFormat(warningMessages.nonStringDependency, \"c\", 789)\n  t.ok(~warnings.indexOf(wanted1), wanted1)\n  t.ok(~warnings.indexOf(wanted2), wanted2)\n  t.ok(~warnings.indexOf(wanted3), wanted3)\n  t.end()\n})\n\ntap.test(\"warn if bundleDependencies array contains anything else but strings\", function(t) {\n  var a\n  var warnings = []\n  function warn(w) {\n    warnings.push(w)\n  }\n  normalize(a={\n    bundleDependencies: [\"abc\", 123, {foo:\"bar\"}]\n  }, warn)\n  \n  var wanted1 = safeFormat(warningMessages.nonStringBundleDependency, 123)\n  var wanted2 = safeFormat(warningMessages.nonStringBundleDependency, {foo:\"bar\"})\n  var wanted2 = safeFormat(warningMessages.nonDependencyBundleDependency, \"abc\")\n  t.ok(~warnings.indexOf(wanted1), wanted1)\n  t.ok(~warnings.indexOf(wanted2), wanted2)\n  t.end()\n})\n"]}