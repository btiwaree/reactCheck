{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;AAIA,IAAI,OAAO,YAAU,EAAV;AACX,IAAI,KAAK,QAAQ,IAAR,CAAL;;;;;;AAMJ,OAAO,OAAP,GAAiB,IAAjB;;;;;;;;;;;;AAYA,SAAS,IAAT,CAAc,EAAd,EAAkB,IAAlB,EAAwB;AACtB,SAAO,KAAK,QAAQ,IAAR,CAAZ,CADsB;;AAGtB,SAAO,YAAW;;;AAGhB,QAAI,IAAI,UAAU,MAAV,CAHQ;AAIhB,QAAI,OAAO,IAAI,KAAJ,CAAU,CAAV,CAAP,CAJY;AAKhB,WAAO,GAAP,EAAY,KAAK,CAAL,IAAU,UAAU,CAAV,CAAV,CAAZ;;AAEA,QAAI,MAAM,IAAN;;;AAPY,QAUZ,CAAC,EAAD,EAAK;AACP,aAAO,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAC,IAAD,EAAO,MAAP,CAAc,IAAd,CAAhB,CAAP,CADO;KAAT;;;AAVgB,QAeZ,GAAG,MAAH,GAAY,KAAK,MAAL,EAAa;;AAE3B,UAAI;AACF,eAAO,GAAG,KAAH,CAAS,GAAT,EAAc,KAAK,MAAL,CAAY,IAAZ,CAAd,CAAP,CADE;OAAJ,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,KAAK,CAAL,CAAP,CADU;OAAV;KAJJ;;;AAfgB,QAyBZ,UAAU,EAAV,CAAJ,EAAmB;AACjB,aAAO,GAAG,EAAH,EAAO,KAAP,CAAa,GAAb,EAAkB,KAAK,MAAL,CAAY,IAAZ,CAAlB,CAAP,CADiB;KAAnB;;;AAzBgB,WA8BT,KAAK,EAAL,EAAS,IAAT,EAAe,KAAf,CAAqB,GAArB,EAA0B,IAA1B,CAAP,CA9BgB;GAAX,CAHe;CAAxB;;;;;;;;;;;AA8CA,SAAS,IAAT,CAAc,EAAd,EAAkB,IAAlB,EAAwB;AACtB,SAAO,YAAY;AACjB,QAAI,GAAJ,CADiB;;AAGjB,QAAI;AACF,YAAM,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAN,CADE;KAAJ,CAEE,OAAO,GAAP,EAAY;AACZ,aAAO,KAAK,GAAL,CAAP,CADY;KAAZ;;AAIF,QAAI,QAAQ,GAAR,CAAJ,EAAkB;AAChB,UAAI,IAAJ,CAAS,UAAU,KAAV,EAAiB;AAAE,aAAK,IAAL,EAAW,KAAX,EAAF;OAAjB,EAAyC,IAAlD,EADgB;KAAlB,MAEO;AACL,qBAAe,KAAf,GAAuB,KAAK,GAAL,CAAvB,GAAmC,KAAK,IAAL,EAAW,GAAX,CAAnC,CADK;KAFP;GATK,CADe;CAAxB;;;;;;;;;;AA0BA,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,SACF,MAAM,WAAN,IACA,uBAAuB,MAAM,WAAN,CAAkB,IAAlB,CAHJ;CAA1B;;;;;;;;;;AAeA,SAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,SAAO,SAAS,cAAc,OAAO,MAAM,IAAN,CADf;CAAxB;;;;;;AAQA,SAAS,IAAT,CAAc,EAAd,EAAkB;AAChB,SAAO,YAAW;AAChB,QAAI,MAAM,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAN,CADY;AAEhB,SAAK,IAAL,CAFgB;AAGhB,WAAO,GAAP,CAHgB;GAAX,CADS;CAAlB","file":"index-compiled.js","sourcesContent":["/**\n * Module Dependencies\n */\n\nvar noop = function(){};\nvar co = require('co');\n\n/**\n * Export `wrap-fn`\n */\n\nmodule.exports = wrap;\n\n/**\n * Wrap a function to support\n * sync, async, and gen functions.\n *\n * @param {Function} fn\n * @param {Function} done\n * @return {Function}\n * @api public\n */\n\nfunction wrap(fn, done) {\n  done = once(done || noop);\n\n  return function() {\n    // prevents arguments leakage\n    // see https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) args[i] = arguments[i];\n\n    var ctx = this;\n\n    // done\n    if (!fn) {\n      return done.apply(ctx, [null].concat(args));\n    }\n\n    // async\n    if (fn.length > args.length) {\n      // NOTE: this only handles uncaught synchronous errors\n      try {\n        return fn.apply(ctx, args.concat(done));\n      } catch (e) {\n        return done(e);\n      }\n    }\n\n    // generator\n    if (generator(fn)) {\n      return co(fn).apply(ctx, args.concat(done));\n    }\n\n    // sync\n    return sync(fn, done).apply(ctx, args);\n  }\n}\n\n/**\n * Wrap a synchronous function execution.\n *\n * @param {Function} fn\n * @param {Function} done\n * @return {Function}\n * @api private\n */\n\nfunction sync(fn, done) {\n  return function () {\n    var ret;\n\n    try {\n      ret = fn.apply(this, arguments);\n    } catch (err) {\n      return done(err);\n    }\n\n    if (promise(ret)) {\n      ret.then(function (value) { done(null, value); }, done);\n    } else {\n      ret instanceof Error ? done(ret) : done(null, ret);\n    }\n  }\n}\n\n/**\n * Is `value` a generator?\n *\n * @param {Mixed} value\n * @return {Boolean}\n * @api private\n */\n\nfunction generator(value) {\n  return value\n    && value.constructor\n    && 'GeneratorFunction' == value.constructor.name;\n}\n\n\n/**\n * Is `value` a promise?\n *\n * @param {Mixed} value\n * @return {Boolean}\n * @api private\n */\n\nfunction promise(value) {\n  return value && 'function' == typeof value.then;\n}\n\n/**\n * Once\n */\n\nfunction once(fn) {\n  return function() {\n    var ret = fn.apply(this, arguments);\n    fn = noop;\n    return ret;\n  };\n}\n"]}