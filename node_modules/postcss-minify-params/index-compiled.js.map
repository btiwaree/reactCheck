{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,SAAR,CAAV;AACJ,IAAI,cAAc,QAAQ,sBAAR,CAAd;AACJ,IAAI,YAAY,YAAY,SAAZ;AAChB,IAAI,OAAO,QAAQ,eAAR,CAAP;AACJ,IAAI,QAAQ,QAAQ,OAAR,CAAR;;AAEJ,SAAS,KAAT,CAAe,KAAf,EAAsB,GAAtB,EAA2B;AACvB,QAAI,CAAJ,EAAO,GAAP,EAAY,IAAZ,CADuB;AAEvB,QAAI,SAAS,EAAT,CAFmB;AAGvB,QAAI,OAAO,EAAP,CAHmB;;AAKvB,SAAK,IAAI,CAAJ,EAAO,MAAM,MAAM,MAAN,EAAc,IAAI,GAAJ,EAAS,KAAK,CAAL,EAAQ;AAC7C,eAAO,MAAM,CAAN,CAAP,CAD6C;AAE7C,YAAI,KAAK,IAAL,KAAc,KAAd,IAAuB,KAAK,KAAL,KAAe,GAAf,EAAoB;AAC3C,mBAAO,IAAP,CAAY,IAAZ,EAD2C;AAE3C,mBAAO,EAAP,CAF2C;SAA/C,MAGO;AACH,oBAAQ,UAAU,IAAV,CAAR,CADG;SAHP;KAFJ;;AAUA,WAAO,IAAP,CAAY,IAAZ,EAfuB;;AAiBvB,WAAO,MAAP,CAjBuB;CAA3B;;AAoBA,OAAO,OAAP,GAAiB,QAAQ,MAAR,CAAe,uBAAf,EAAwC,YAAY;AACjE,WAAO,UAAU,GAAV,EAAe;AAClB,YAAI,WAAJ,CAAgB,UAAU,IAAV,EAAgB;AAC5B,gBAAI,CAAC,KAAK,MAAL,EAAa;AACd,uBADc;aAAlB;;AAIA,gBAAI,SAAS,YAAY,KAAK,MAAL,CAArB,CALwB;;AAO5B,mBAAO,IAAP,CAAY,UAAU,IAAV,EAAgB;AACxB,oBAAI,KAAK,IAAL,KAAc,KAAd,IAAuB,KAAK,IAAL,KAAc,UAAd,EAA0B;AACjD,yBAAK,MAAL,GAAc,KAAK,KAAL,GAAa,EAAb,CADmC;iBAArD,MAEO,IAAI,KAAK,IAAL,KAAc,OAAd,EAAuB;AAC9B,yBAAK,KAAL,GAAa,GAAb,CAD8B;iBAA3B;aAHC,EAMT,IANH,EAP4B;;AAe5B,iBAAK,MAAL,GAAc,KAAK,MAAM,MAAM,OAAO,KAAP,EAAc,GAApB,CAAN,CAAL,EAAsC,EAAE,aAAa,IAAb,EAAxC,EAA6D,IAA7D,EAAd,CAf4B;SAAhB,CAAhB,CADkB;KAAf,CAD0D;CAAZ,CAAzD","file":"index-compiled.js","sourcesContent":["var postcss = require('postcss');\nvar valueParser = require('postcss-value-parser');\nvar stringify = valueParser.stringify;\nvar sort = require('alphanum-sort');\nvar uniqs = require('uniqs');\n\nfunction split(nodes, div) {\n    var i, max, node;\n    var result = [];\n    var last = '';\n\n    for (i = 0, max = nodes.length; i < max; i += 1) {\n        node = nodes[i];\n        if (node.type === 'div' && node.value === div) {\n            result.push(last);\n            last = '';\n        } else {\n            last += stringify(node);\n        }\n    }\n\n    result.push(last);\n\n    return result;\n}\n\nmodule.exports = postcss.plugin('postcss-minify-params', function () {\n    return function (css) {\n        css.walkAtRules(function (rule) {\n            if (!rule.params) {\n                return;\n            }\n\n            var params = valueParser(rule.params);\n\n            params.walk(function (node) {\n                if (node.type === 'div' || node.type === 'function') {\n                    node.before = node.after = '';\n                } else if (node.type === 'space') {\n                    node.value = ' ';\n                }\n            }, true);\n\n            rule.params = sort(uniqs(split(params.nodes, ',')), { insensitive: true }).join();\n        });\n    };\n});\n"]}