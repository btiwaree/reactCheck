{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,UAAR,CAAX;AACJ,IAAI,mBAAmB,QAAQ,mBAAR,CAAnB;AACJ,IAAI,cAAc,QAAQ,cAAR,CAAd;AACJ,IAAI,SAAS,QAAQ,eAAR,CAAT;;AAEJ,OAAO,OAAP,GAAiB,UAAU,OAAV,EAAmB;AAClC,OAAK,SAAL,IAAkB,KAAK,SAAL,EAAlB,CADkC;;AAGlC,MAAI,UAAU,OAAO,EAAP,EACZ,KAAK,OAAL,CAAa,QAAb,EACA,YAAY,UAAZ,CAAuB,KAAK,KAAL,CAFX,CAAV,CAH8B;;AAQlC,MAAI,WAAW,UAAC,IAAc,OAAd,GAAyB,QAAQ,QAAR,GAAmB,KAAK,QAAL,CAR1B;AASlC,MAAI,CAAC,QAAD,EAAW;AACb,WAAO,OAAP,CADa;GAAf;;AAIA,MAAI,cAAc,QAAQ,WAAR,IAAuB,KAAvB,CAbgB;AAclC,MAAI,oBAAoB,QAAQ,iBAAR,IAA6B,CAA7B,CAdU;;AAgBlC,MAAI,WAAW,IAAI,QAAJ,GACZ,GADY,CACR,OADQ,EAEZ,GAFY,CAER,SAAS,QAAT,CAAkB,OAAO;AAC5B,gBAAY,WAAZ;GADqB,EAEpB,QAAQ,QAAR,CAFE,CAFQ,EAKZ,GALY,CAKR,SAAS,QAAT,CAAkB,OAAO;AAC5B,iBAAa,WAAb;GADqB,EAEpB,QAAQ,QAAR,CAFE,CALQ,EAQZ,GARY,CAQR,SAAS,OAAT,CAAiB,OAAO;AAC3B,uBAAmB,iBAAnB;GADoB,EAEnB,QAAQ,OAAR,CAFE,CARQ,EAWZ,GAXY,CAWR,SAAS,IAAT,CAAc,OAAO,EAAP,EAChB,QAAQ,IAAR,CADE,CAXQ,CAAX,CAhB8B;AA6BlC,MAAI,QAAQ,QAAR,EAAkB;AACpB,aAAS,GAAT,CAAa,iBAAiB,OAAO,EAAP,EAC3B,QAAQ,QAAR,CADU,CAAb,EADoB;GAAtB;;AAKA,MAAI,WAAW,KAAK,KAAL,EAAX,CAlC8B;AAmClC,WAAS,GAAT,CAAa,UAAU,GAAV,EAAe,KAAf,EAAsB;AACjC,QAAI,QAAJ,EAAc;AACZ,eAAS,GAAT,EAAc,SAAS,MAAM,CAAN,CAAT,IAAqB,MAAM,CAAN,EAAS,QAAT,CAAnC,CADY;AAEZ,iBAAW,IAAX,CAFY;KAAd;GADW,CAAb,CAnCkC;CAAnB;;AA2CjB,OAAO,OAAP,CAAe,GAAf,GAAqB,IAArB","file":"index-compiled.js","sourcesContent":["var Imagemin = require('imagemin')\nvar ImageminPngquant = require('imagemin-pngquant')\nvar loaderUtils = require('loader-utils')\nvar assign = require('object-assign')\n\nmodule.exports = function (content) {\n  this.cacheable && this.cacheable()\n\n  var options = assign({},\n    this.options.imagemin,\n    loaderUtils.parseQuery(this.query)\n  )\n\n  var minimize = ('minimize' in options) ? options.minimize : this.minimize\n  if (!minimize) {\n    return content\n  }\n\n  var progressive = options.progressive || false\n  var optimizationLevel = options.optimizationLevel || 2\n\n  var imagemin = new Imagemin()\n    .src(content)\n    .use(Imagemin.gifsicle(assign({\n      interlaced: progressive\n    }, options.gifsicle)))\n    .use(Imagemin.jpegtran(assign({\n      progressive: progressive\n    }, options.jpegtran)))\n    .use(Imagemin.optipng(assign({\n      optimizationLevel: optimizationLevel\n    }, options.optipng)))\n    .use(Imagemin.svgo(assign({\n    }, options.svgo)))\n  if (options.pngquant) {\n    imagemin.use(ImageminPngquant(assign({\n    }, options.pngquant)))\n  }\n\n  var callback = this.async()\n  imagemin.run(function (err, files) {\n    if (callback) {\n      callback(err, files && files[0] && files[0].contents)\n      callback = null\n    }\n  })\n}\n\nmodule.exports.raw = true\n"]}